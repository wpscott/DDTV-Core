// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Im.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AcFunDanmu.Im {

  /// <summary>Holder for reflection information generated from Im.proto</summary>
  public static partial class ImReflection {

    #region Descriptor
    /// <summary>File descriptor for Im.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ImReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CghJbS5wcm90bxINQWNGdW5EYW5tdS5JbSLkLQoFQmFzaWMahAUKDFBhY2tl",
            "dEhlYWRlchINCgVhcHBJZBgBIAEoBRILCgN1aWQYAiABKAMSEgoKaW5zdGFu",
            "Y2VJZBgDIAEoAxINCgVmbGFncxgFIAEoDRJECgxlbmNvZGluZ1R5cGUYBiAB",
            "KA4yLi5BY0Z1bkRhbm11LkltLkJhc2ljLlBhY2tldEhlYWRlci5FbmNvZGlu",
            "Z1R5cGUSGQoRZGVjb2RlZFBheWxvYWRMZW4YByABKAUSSAoOZW5jcnlwdGlv",
            "bk1vZGUYCCABKA4yMC5BY0Z1bkRhbm11LkltLkJhc2ljLlBhY2tldEhlYWRl",
            "ci5FbmNyeXB0aW9uTW9kZRIxCgl0b2tlbkluZm8YCSABKAsyHi5BY0Z1bkRh",
            "bm11LkltLkJhc2ljLlRva2VuSW5mbxINCgVzZXFJZBgKIAEoAxI7CghmZWF0",
            "dXJlcxgLIAMoDjIpLkFjRnVuRGFubXUuSW0uQmFzaWMuUGFja2V0SGVhZGVy",
            "LkZlYXR1cmUSCwoDa3BuGAwgASgJIj8KBUZsYWdzEhAKDGtEaXJVcHN0cmVh",
            "bRAAEhIKDmtEaXJEb3duc3RyZWFtEAESDAoIa0Rpck1hc2sQARoCEAEiMwoM",
            "RW5jb2RpbmdUeXBlEhEKDWtFbmNvZGluZ05vbmUQABIQCgxrRW5jb2RpbmdM",
            "ejQQASJdCg5FbmNyeXB0aW9uTW9kZRITCg9rRW5jcnlwdGlvbk5vbmUQABIb",
            "ChdrRW5jcnlwdGlvblNlcnZpY2VUb2tlbhABEhkKFWtFbmNyeXB0aW9uU2Vz",
            "c2lvbktleRACIikKB0ZlYXR1cmUSDAoIa1Jlc2VydmUQABIQCgxrQ29tcHJl",
            "c3NMejQQARoiCgRVc2VyEg0KBWFwcElkGAEgASgFEgsKA3VpZBgCIAEoAxpL",
            "CgxVc2VySW5zdGFuY2USJwoEdXNlchgBIAEoCzIZLkFjRnVuRGFubXUuSW0u",
            "QmFzaWMuVXNlchISCgppbnN0YW5jZUlkGAIgASgDGowDCg9VcHN0cmVhbVBh",
            "eWxvYWQSDwoHY29tbWFuZBgBIAEoCRINCgVzZXFJZBgCIAEoAxISCgpyZXRy",
            "eUNvdW50GAMgASgNEhMKC3BheWxvYWREYXRhGAQgASgMEjcKDHVzZXJJbnN0",
            "YW5jZRgFIAEoCzIhLkFjRnVuRGFubXUuSW0uQmFzaWMuVXNlckluc3RhbmNl",
            "EhEKCWVycm9yQ29kZRgGIAEoBRI1CgtzZXR0aW5nSW5mbxgHIAEoCzIgLkFj",
            "RnVuRGFubXUuSW0uQmFzaWMuU2V0dGluZ0luZm8SPwoQcmVxdWVzdEJhc2lj",
            "SW5mbxgIIAEoCzIlLkFjRnVuRGFubXUuSW0uQmFzaWMuUmVxdWVzdEJhc2lj",
            "SW5mbxIOCgZzdWJCaXoYCSABKAkSNwoMZnJvbnRlbmRJbmZvGAogASgLMiEu",
            "QWNGdW5EYW5tdS5JbS5CYXNpYy5Gcm9udGVuZEluZm8SCwoDa3BuGAsgASgJ",
            "EhYKDmFub255bW91c2VVc2VyGAwgASgIGpABChFEb3duc3RyZWFtUGF5bG9h",
            "ZBIPCgdjb21tYW5kGAEgASgJEg0KBXNlcUlkGAIgASgDEhEKCWVycm9yQ29k",
            "ZRgDIAEoBRITCgtwYXlsb2FkRGF0YRgEIAEoDBIQCghlcnJvck1zZxgFIAEo",
            "CRIRCgllcnJvckRhdGEYBiABKAwSDgoGc3ViQml6GAcgASgJGp4BCgtQaW5n",
            "UmVxdWVzdBI7CghwaW5nVHlwZRgBIAEoDjIpLkFjRnVuRGFubXUuSW0uQmFz",
            "aWMuUGluZ1JlcXVlc3QuUGluZ1R5cGUSEQoJcGluZ1JvdW5kGAIgASgNIj8K",
            "CFBpbmdUeXBlEgwKCGtJbnZhbGlkEAASEgoOa1ByaW9yUmVnaXN0ZXIQARIR",
            "Cg1rUG9zdFJlZ2lzdGVyEAIaYwoMUGluZ1Jlc3BvbnNlEhcKD3NlcnZlclRp",
            "bWVzdGFtcBgBIAEoDxIQCghjbGllbnRJcBgCIAEoBxISCgpyZWRpcmVjdElw",
            "GAMgASgHEhQKDHJlZGlyZWN0UG9ydBgEIAEoDRrOBQoPUmVnaXN0ZXJSZXF1",
            "ZXN0Ei0KB2FwcEluZm8YASABKAsyHC5BY0Z1bkRhbm11LkltLkJhc2ljLkFw",
            "cEluZm8SMwoKZGV2aWNlSW5mbxgCIAEoCzIfLkFjRnVuRGFubXUuSW0uQmFz",
            "aWMuRGV2aWNlSW5mbxItCgdlbnZJbmZvGAMgASgLMhwuQWNGdW5EYW5tdS5J",
            "bS5CYXNpYy5FbnZJbmZvEksKDnByZXNlbmNlU3RhdHVzGAQgASgOMjMuQWNG",
            "dW5EYW5tdS5JbS5CYXNpYy5SZWdpc3RlclJlcXVlc3QuUHJlc2VuY2VTdGF0",
            "dXMSSgoPYXBwQWN0aXZlU3RhdHVzGAUgASgOMjEuQWNGdW5EYW5tdS5JbS5C",
            "YXNpYy5SZWdpc3RlclJlcXVlc3QuQWN0aXZlU3RhdHVzEhcKD2FwcEN1c3Rv",
            "bVN0YXR1cxgGIAEoDBI/ChBwdXNoU2VydmljZVRva2VuGAcgASgLMiUuQWNG",
            "dW5EYW5tdS5JbS5CYXNpYy5QdXNoU2VydmljZVRva2VuEhIKCmluc3RhbmNl",
            "SWQYCCABKAMSQwoUcHVzaFNlcnZpY2VUb2tlbkxpc3QYCSADKAsyJS5BY0Z1",
            "bkRhbm11LkltLkJhc2ljLlB1c2hTZXJ2aWNlVG9rZW4SHAoUa2VlcGFsaXZl",
            "SW50ZXJ2YWxTZWMYCiABKAUSNwoMenRDb21tb25JbmZvGAsgASgLMiEuQWNG",
            "dW5EYW5tdS5JbS5CYXNpYy5adENvbW1vbkluZm8iOwoOUHJlc2VuY2VTdGF0",
            "dXMSFAoQa1ByZXNlbmNlT2ZmbGluZRAAEhMKD2tQcmVzZW5jZU9ubGluZRAB",
            "IkgKDEFjdGl2ZVN0YXR1cxIMCghrSW52YWxpZBAAEhQKEGtBcHBJbkZvcmVn",
            "cm91bmQQARIUChBrQXBwaW5CYWNrZ3JvdW5kEAIa+AEKEFJlZ2lzdGVyUmVz",
            "cG9uc2USQwoSYWNjZXNzUG9pbnRzQ29uZmlnGAEgASgLMicuQWNGdW5EYW5t",
            "dS5JbS5CYXNpYy5BY2Nlc3NQb2ludHNDb25maWcSDwoHc2Vzc0tleRgCIAEo",
            "DBISCgppbnN0YW5jZUlkGAMgASgDEjEKCXNka09wdGlvbhgEIAEoCzIeLkFj",
            "RnVuRGFubXUuSW0uQmFzaWMuU2RrT3B0aW9uEkcKFmFjY2Vzc1BvaW50c0NP",
            "bmZpZ0lwdjYYBSABKAsyJy5BY0Z1bkRhbm11LkltLkJhc2ljLkFjY2Vzc1Bv",
            "aW50c0NvbmZpZxrYAQoSQWNjZXNzUG9pbnRzQ29uZmlnEjQKCm9wdGltYWxB",
            "cHMYASADKAsyIC5BY0Z1bkRhbm11LkltLkJhc2ljLkFjY2Vzc1BvaW50EjMK",
            "CWJhY2t1cEFwcxgCIAMoCzIgLkFjRnVuRGFubXUuSW0uQmFzaWMuQWNjZXNz",
            "UG9pbnQSFgoOYXZhaWxhYmxlUG9ydHMYAyADKA0SPwoVZm9yZWNlTGFzdENv",
            "bm5lY3RlZEFwGAQgASgLMiAuQWNGdW5EYW5tdS5JbS5CYXNpYy5BY2Nlc3NQ",
            "b2ludBoTChFVbnJlZ2lzdGVyUmVxdWVzdBoUChJVbnJlZ2lzdGVyUmVzcG9u",
            "c2UazwIKEEtlZXBBbGl2ZVJlcXVlc3QSSwoOcHJlc2VuY2VTdGF0dXMYASAB",
            "KA4yMy5BY0Z1bkRhbm11LkltLkJhc2ljLlJlZ2lzdGVyUmVxdWVzdC5QcmVz",
            "ZW5jZVN0YXR1cxJKCg9hcHBBY3RpdmVTdGF0dXMYAiABKA4yMS5BY0Z1bkRh",
            "bm11LkltLkJhc2ljLlJlZ2lzdGVyUmVxdWVzdC5BY3RpdmVTdGF0dXMSPwoQ",
            "cHVzaFNlcnZpY2VUb2tlbhgDIAEoCzIlLkFjRnVuRGFubXUuSW0uQmFzaWMu",
            "UHVzaFNlcnZpY2VUb2tlbhJDChRwdXNoU2VydmljZVRva2VuTGlzdBgEIAMo",
            "CzIlLkFjRnVuRGFubXUuSW0uQmFzaWMuUHVzaFNlcnZpY2VUb2tlbhIcChRr",
            "ZWVwYWxpdmVJbnRlcnZhbFNlYxgFIAEoBRq1AQoRS2VlcEFsaXZlUmVzcG9u",
            "c2USQwoSYWNjZXNzUG9pbnRzQ29uZmlnGAEgASgLMicuQWNGdW5EYW5tdS5J",
            "bS5CYXNpYy5BY2Nlc3NQb2ludHNDb25maWcSEgoKc2VydmVyTXNlYxgCIAEo",
            "AxJHChZhY2Nlc3NQb2ludHNDb25maWdJcHY2GAMgASgLMicuQWNGdW5EYW5t",
            "dS5JbS5CYXNpYy5BY2Nlc3NQb2ludHNDb25maWcavAEKC0FjY2Vzc1BvaW50",
            "EkEKC2FkZHJlc3NUeXBlGAEgASgOMiwuQWNGdW5EYW5tdS5JbS5CYXNpYy5B",
            "Y2Nlc3NQb2ludC5BZGRyZXNzVHlwZRIMCgRwb3J0GAIgASgNEgwKBGlwVjQY",
            "AyABKAcSDAoEaXBWNhgEIAEoDBIOCgZkb21haW4YBSABKAkiMAoLQWRkcmVz",
            "c1R5cGUSCQoFa0lQVjQQABIJCgVrSVBWNhABEgsKB2tEb21haW4QAhqFAQoJ",
            "VG9rZW5JbmZvEjsKCXRva2VuVHlwZRgBIAEoDjIoLkFjRnVuRGFubXUuSW0u",
            "QmFzaWMuVG9rZW5JbmZvLlRva2VuVHlwZRINCgV0b2tlbhgCIAEoDCIsCglU",
            "b2tlblR5cGUSDAoIa0ludmFsaWQQABIRCg1rU2VydmljZVRva2VuEAEawAIK",
            "EFB1c2hTZXJ2aWNlVG9rZW4SQAoIcHVzaFR5cGUYASABKA4yLi5BY0Z1bkRh",
            "bm11LkltLkJhc2ljLlB1c2hTZXJ2aWNlVG9rZW4uUHVzaFR5cGUSDQoFdG9r",
            "ZW4YAiABKAwSFQoNaXNQYXNzVGhyb3VnaBgDIAEoCCLDAQoIUHVzaFR5cGUS",
            "FAoQa1B1c2hUeXBlSW52YWxpZBAAEhEKDWtQdXNoVHlwZUFQTlMQARITCg9r",
            "UHVzaFR5cGVYbVB1c2gQAhITCg9rUHVzaFR5cGVKZ1B1c2gQAxITCg9rUHVz",
            "aFR5cGVHdFBVc2gQBBITCg9rUHVzaFR5cGVPcFB1c2gQBRITCg9rUHVzaFRZ",
            "cGVWdlB1c2gQBhITCg9rUHVzaFR5cGVId1B1c2gQBxIQCgxrUHVzaFRZcGVG",
            "Y20QCBovCgtTZXR0aW5nSW5mbxIOCgZsb2NhbGUYASABKAkSEAoIdGltZXpv",
            "bmUYAiABKBEabQoHQXBwSW5mbxIPCgdhcHBOYW1lGAEgASgJEhIKCmFwcFZl",
            "cnNpb24YAiABKAkSEgoKYXBwQ2hhbm5lbBgDIAEoCRISCgpzZGtWZXJzaW9u",
            "GAQgASgJEhUKDWV4dGVuc2lvbkluZm8YCyABKAka6gIKCkRldmljZUluZm8S",
            "QgoMcGxhdGZvcm1UeXBlGAEgASgOMiwuQWNGdW5EYW5tdS5JbS5CYXNpYy5E",
            "ZXZpY2VJbmZvLlBsYXRmb3JtVHlwZRIRCglvc1ZlcnNpb24YAiABKAkSEwoL",
            "ZGV2aWNlTW9kZWwYAyABKAkSDwoHaW1laU1kNRgEIAEoDBIQCghkZXZpY2VJ",
            "ZBgFIAEoCRIPCgdzb2Z0RGlkGAYgASgJEg8KB2t3YWlEaWQYByABKAkSFAoM",
            "bWFudWZhY3R1cmVyGAggASgJEhIKCmRldmljZU5hbWUYCSABKAkigAEKDFBs",
            "YXRmb3JtVHlwZRIMCghrSW52YWxpZBAAEgwKCGtBbmRyb2lkEAESCAoEa2lP",
            "UxACEgwKCGtXaW5kb3dzEAMSEgoOV0VDSEFUX0FORFJPSUQQBBIOCgpXRUNI",
            "QVRfSU9TEAUSBgoCSDUQBhIQCgxrUGxhdGZvcm1OdW0QBxqQAQoHRW52SW5m",
            "bxI9CgtuZXR3b3JrVHlwZRgBIAEoDjIoLkFjRnVuRGFubXUuSW0uQmFzaWMu",
            "RW52SW5mby5OZXR3b3JrVHlwZRIPCgdhcHBOYW1lGAIgASgMIjUKC05ldHdv",
            "cmtUeXBlEgwKCGtJbnZhbGlkEAASCQoFa1dJRkkQARINCglrQ2VsbHVsYXIQ",
            "AhrjAgoQUmVxdWVzdEJhc2ljSW5mbxJACgpjbGllbnRUeXBlGAEgASgOMiwu",
            "QWNGdW5EYW5tdS5JbS5CYXNpYy5EZXZpY2VJbmZvLlBsYXRmb3JtVHlwZRIQ",
            "CghkZXZpY2VJZBgCIAEoCRIQCghjbGllbnRJcBgDIAEoCRISCgphcHBWZXJz",
            "aW9uGAQgASgJEg8KB2NoYW5uZWwYBSABKAkSLQoHYXBwSW5mbxgGIAEoCzIc",
            "LkFjRnVuRGFubXUuSW0uQmFzaWMuQXBwSW5mbxIzCgpkZXZpY2VJbmZvGAcg",
            "ASgLMh8uQWNGdW5EYW5tdS5JbS5CYXNpYy5EZXZpY2VJbmZvEi0KB2Vudklu",
            "Zm8YCCABKAsyHC5BY0Z1bkRhbm11LkltLkJhc2ljLkVudkluZm8SEgoKY2xp",
            "ZW50UG9ydBgJIAEoBRIQCghsb2NhdGlvbhgKIAEoCRILCgNrcGYYCyABKAka",
            "IAoKU3luY0Nvb2tpZRISCgpzeW5jT2Zmc2V0GAEgASgDGjkKD0kxOG5Db3B5",
            "V3JpdGluZxIRCglmb3JtYXRLZXkYASABKAkSEwoLZm9ybWF0UGFyYW0YAiAD",
            "KAkagQEKCVNka09wdGlvbhIdChVyZXBvcnRJbnRlcnZhbFNlY29uZHMYASAB",
            "KAUSFgoOcmVwb3J0U2VjdXJpdHkYAiABKAkSJAocbHo0Q29tcHJlc3Npb25U",
            "aHJlc2hvbGRCeXRlcxgDIAEoBRIXCg9uZXRDaGVja1NlcnZlcnMYBCADKAka",
            "9QEKDFp0Q29tbW9uSW5mbxILCgNrcG4YASABKAkSCwoDa3BmGAIgASgJEg4K",
            "BnN1YkJpehgDIAEoCRILCgN1aWQYBCABKAMSCwoDZGlkGAUgASgJEhAKCGNs",
            "aWVudElwGAYgASgDEg4KBmFwcFZlchgHIAEoCRILCgN2ZXIYCCABKAkSCwoD",
            "bGF0GAkgASgJEgsKA2xvbhgKIAEoCRIMCgRtb25kGAsgASgJEgsKA25ldBgM",
            "IAEoCRILCgNzeXMYDSABKAkSCQoBYxgOIAEoCRIQCghsYW5ndWFnZRgPIAEo",
            "CRITCgtjb3VudHJ5Q29kZRgQIAEoCRooCgxGcm9udGVuZEluZm8SCgoCaXAY",
            "ASABKAkSDAoEcG9ydBgCIAEoBSLLAgoNU2hhcmVQbGF0Zm9ybRIZChVrU2hh",
            "cmVQbGF0Zm9ybUludmFsaWQQABIYChRrU2hhcmVQbGF0Zm9ybVdlY2hhdBAB",
            "Eh8KG2tTaGFyZVBsYXRmb3JtV2VjaGF0TW9tZW50cxACEhQKEGtTaGFyZVBs",
            "YXRmb3JtUVEQAxIXChNrU2hhcmVQbGF0Zm9ybVF6b25lEAQSFwoTa1NoYXJl",
            "UGxhdGZvcm1XZWlibxAFEhoKFmtTaGFyZVBsYXRmb3JtS3VhaXNob3UQBhIa",
            "ChZrU2hhcmVQbGF0Zm9ybUZhY2Vib29rEAcSGQoVa1NoYXJlUGxhdGZvcm1U",
            "d2l0dGVyEAgSGAoUa1NoYXJlUGxhdGZvcm1Hb29nbGUQCRIXChNrU2hhcmVQ",
            "bGF0Zm9ybUtha2FvEAoSFgoSa1NoYXJlUGxhdGZvcm1aYWxvEAsilDYKB01l",
            "c3NhZ2Ua/QQKB01lc3NhZ2USDQoFc2VxSWQYASABKAMSEwoLY2xpZW50U2Vx",
            "SWQYAiABKAMSEwoLdGltZXN0YW1wTXMYAyABKAMSKwoIZnJvbVVzZXIYBCAB",
            "KAsyGS5BY0Z1bkRhbm11LkltLkJhc2ljLlVzZXISEAoIdGFyZ2V0SWQYBSAB",
            "KAMSKQoGdG9Vc2VyGAYgASgLMhkuQWNGdW5EYW5tdS5JbS5CYXNpYy5Vc2Vy",
            "Eg0KBXRpdGxlGAcgASgJEhMKC2NvbnRlbnRUeXBlGAggASgFEg8KB2NvbnRl",
            "bnQYCSABKAwSEgoKYnVja3VwVGlwcxgKIAEoCRIsCglyZWNlaXZlcnMYCyAD",
            "KAsyGS5BY0Z1bkRhbm11LkltLkJhc2ljLlVzZXISGAoQbm90Q29udGVudFVu",
            "cmVhZBgMIAEoCBIXCg9zZXNzaW9uUHJpb3JpdHkYDSABKAUSGQoRc2Vzc2lv",
            "bkNhdGVnb3J5SWQYDiABKAUSGgoSc2Vzc2lvbkFjY291bnRUeXBlGA8gASgF",
            "EhwKFG5vdEF1dG9DcmVhdGVTZXNzaW9uGBAgASgIEhgKEHVzZXJSZWxhdGlv",
            "bnNoaXAYESABKAUSEwoLc3RyVGFyZ2V0SWQYEiABKAkSMwoQZXhjbHVkZVJl",
            "Y2VpdmVycxgTIAMoCzIZLkFjRnVuRGFubXUuSW0uQmFzaWMuVXNlchIRCglt",
            "YXJrRGVsdGUYFCABKAgSMQoIcmVtaW5kZXIYFSABKAsyHy5BY0Z1bkRhbm11",
            "LkltLk1lc3NhZ2UuUmVtaW5kZXISDQoFZXh0cmEYFiABKAwSFwoPcmVjZWlw",
            "dFJlcXVpcmVkGBcgASgIGqMBChNTZW5kTWVzc2FnZVJlc3BvbnNlEhMKC2Ns",
            "aWVudFNlcUlkGAEgASgDEhgKEG1lc3NhZ2VUaW1lc3RhbXAYAiABKAMSDQoF",
            "c2VxSWQYAyABKAMSGgoSc2Vzc2lvbkFjY291bnRUeXBlGAQgASgFEhcKD3Nl",
            "c3Npb25Qcmlvcml0eRgFIAEoBRIZChFzZXNzaW9uQ2F0ZWdvcnlJZBgGIAEo",
            "BRqRAQoOUHVsbE9sZFJlcXVlc3QSKQoGdGFyZ2V0GAEgASgLMhkuQWNGdW5E",
            "YW5tdS5JbS5CYXNpYy5Vc2VyEg4KBm1pblNlcRgCIAEoAxIOCgZtYXhTZXEY",
            "AyABKAMSDQoFY291bnQYBCABKAUSEAoIdGFyZ2V0SWQYBSABKAMSEwoLc3Ry",
            "VGFyZ2V0SWQYBiABKAkaVwoPUHVsbE9sZFJlc3BvbnNlEjAKCG1lc3NhZ2Vz",
            "GAEgAygLMh4uQWNGdW5EYW5tdS5JbS5NZXNzYWdlLk1lc3NhZ2USEgoKc2Vy",
            "dmVyVGltZRgCIAEoAxqBAQoOUHVsbE5ld1JlcXVlc3QSKQoGdGFyZ2V0GAEg",
            "ASgLMhkuQWNGdW5EYW5tdS5JbS5CYXNpYy5Vc2VyEg4KBm1pblNlcRgCIAEo",
            "AxINCgVjb3VudBgDIAEoBRIQCgh0YXJnZXRJZBgEIAEoAxITCgtzdHJUYXJn",
            "ZXRJZBgFIAEoCRpDCg9QdWxsTmV3UmVzcG9uc2USMAoIbWVzc2FnZXMYASAD",
            "KAsyHi5BY0Z1bkRhbm11LkltLk1lc3NhZ2UuTWVzc2FnZRp2ChJTZXNzaW9u",
            "TGlzdFJlcXVlc3QSMwoKc3luY0Nvb2tpZRgBIAEoCzIfLkFjRnVuRGFubXUu",
            "SW0uQmFzaWMuU3luY0Nvb2tpZRISCgpjYXRlZ29yeUlkGAIgASgFEhcKD2xv",
            "Y2FsRGF0YVN0YXR1cxgDIAEoBRqcBAoLQ2hhdFNlc3Npb24SKQoGdGFyZ2V0",
            "GAEgASgLMhkuQWNGdW5EYW5tdS5JbS5CYXNpYy5Vc2VyEhAKCG1heFNlcUlk",
            "GAIgASgDEhEKCXJlYWRTZXFJZBgDIAEoAxIWCg51bnJlYWRNc2dDb3VudBgE",
            "IAEoBRI1Cg1sYXRlc3RNZXNzYWdlGAUgAygLMh4uQWNGdW5EYW5tdS5JbS5N",
            "ZXNzYWdlLk1lc3NhZ2USPQoOY2hhdFRhcmdldFR5cGUYCCABKA4yJS5BY0Z1",
            "bkRhbm11LkltLk1lc3NhZ2UuQ2hhdFRhcmdldFR5cGUSEAoIdGFyZ2V0SWQY",
            "CSABKAMSEgoKYWN0aXZlVGltZRgKIAEoAxIQCghwcmlvcml0eRgLIAEoBRIS",
            "CgpjYXRlZ29yeUlkGAwgASgFEg4KBmN1cnNvchgNIAEoCRITCgthY2NvdW50",
            "VHlwZRgOIAEoBRIYChBhZ2dyZWdhdGVTZXNzaW9uGA8gASgIEhYKDmp1bXBD",
            "YXRlZ29yeUlkGBAgASgFEhAKCGV4cGlyZUF0GBEgASgDEhUKDWVmZmVjdGl2",
            "ZUZyb20YEiABKAMSEwoLc3RyVGFyZ2V0SWQYEyABKAkSNQoKcmVtaW5kQm9k",
            "eRgUIAMoCzIhLkFjRnVuRGFubXUuSW0uTWVzc2FnZS5SZW1pbmRCb2R5EhcK",
            "D3RhcmdldFJlYWRTZXFJZBgVIAEoAxpVCghSZW1pbmRlchISCgpvcmlnaW5U",
            "ZXh0GAEgASgJEjUKCnJlbWluZEJvZHkYAiADKAsyIS5BY0Z1bkRhbm11Lklt",
            "Lk1lc3NhZ2UuUmVtaW5kQm9keRqaAgoKUmVtaW5kQm9keRJACgpyZW1pbmRU",
            "eXBlGAEgASgOMiwuQWNGdW5EYW5tdS5JbS5NZXNzYWdlLlJlbWluZEJvZHku",
            "UmVtaW5kVHlwZRINCgVzZXFJZBgCIAEoAxIQCgh0YXJnZXRJZBgDIAEoAxIQ",
            "Cgh1c2VyTmFtZRgEIAEoCRISCgpzdGFydEluZGV4GAUgASgFEg4KBmxlbmd0",
            "aBgGIAEoBSJzCgpSZW1pbmRUeXBlEgsKB1VOS05PV04QABIKCgZBVF9BTEwQ",
            "ARILCgdBVF9VU0VSEAISEgoOR1JPVVBfQlVMTEVUSU4QAxITCg9SRUNFSVBU",
            "X01FU1NBR0UQBBIWChJHUk9VUF9KT0lOX1JFUVVFU1QQBRpZCgpDaGF0VGFy",
            "Z2V0EhAKCHRhcmdldElkGAEgASgJEjkKCnRhcmdldFR5cGUYAiABKA4yJS5B",
            "Y0Z1bkRhbm11LkltLk1lc3NhZ2UuQ2hhdFRhcmdldFR5cGUa8AEKE1Nlc3Np",
            "b25MaXN0UmVzcG9uc2USMwoKc3luY0Nvb2tpZRgBIAEoCzIfLkFjRnVuRGFu",
            "bXUuSW0uQmFzaWMuU3luY0Nvb2tpZRI0CghzZXNzaW9ucxgCIAMoCzIiLkFj",
            "RnVuRGFubXUuSW0uTWVzc2FnZS5DaGF0U2Vzc2lvbhIUCgxub3RGdWxsRmV0",
            "Y2gYAyABKAgSEgoKc2VydmVyVGltZRgEIAEoAxIWCg5jbGVhckxvY2FsRGF0",
            "YRgFIAEoCBISCgpjYXRlZ29yeUlkGAYgASgFEhgKEGNsaWVudERhdGFTdGF0",
            "dXMYByABKAUaSwoWU2Vzc2lvblBhZ2VMaXN0UmVxdWVzdBIOCgZjdXJzb3IY",
            "ASABKAkSDQoFY291bnQYAiABKAUSEgoKY2F0ZWdvcnlJZBgDIAEoBRpgChdT",
            "ZXNzaW9uUGFnZUxpc3RSZXNwb25zZRIPCgdoYXNNb3JlGAEgASgIEjQKCHNl",
            "c3Npb25zGAIgAygLMiIuQWNGdW5EYW5tdS5JbS5NZXNzYWdlLkNoYXRTZXNz",
            "aW9uGq0BChRTZXNzaW9uUmVtb3ZlUmVxdWVzdBIQCgh0YXJnZXRJZBgBIAEo",
            "AxI9Cg5jaGF0VGFyZ2V0VHlwZRgCIAEoDjIlLkFjRnVuRGFubXUuSW0uTWVz",
            "c2FnZS5DaGF0VGFyZ2V0VHlwZRISCgpjYXRlZ29yeUlkGAMgASgFEhMKC3N0",
            "clRhcmdldElkGAQgASgJEhsKE25vdENsZWFuQWxsTWVzc2FnZXMYBSABKAga",
            "FwoVU2Vzc2lvblJlbW92ZVJlc3BvbnNlGkwKE1Nlc3Npb25DbGVhblJlcXVl",
            "c3QSNQoKY2hhdFRhcmdldBgBIAEoCzIhLkFjRnVuRGFubXUuSW0uTWVzc2Fn",
            "ZS5DaGF0VGFyZ2V0GhYKFFNlc3Npb25DbGVhblJlc3BvbnNlGosBChRNZXNz",
            "YWdlRGVsZXRlUmVxdWVzdBIQCgh0YXJnZXRJZBgBIAEoAxI9Cg5jaGF0VGFy",
            "Z2V0VHlwZRgCIAEoDjIlLkFjRnVuRGFubXUuSW0uTWVzc2FnZS5DaGF0VGFy",
            "Z2V0VHlwZRINCgVzZXFJZBgDIAMoAxITCgtzdHJUYXJnZXRJZBgEIAEoCRoX",
            "ChVNZXNzYWdlRGVsZXRlUmVzcG9uc2UaXAoUTWVzc2FnZUNhbmNlbFJlcXVl",
            "c3QSNQoKY2hhdFRhcmdldBgBIAEoCzIhLkFjRnVuRGFubXUuSW0uTWVzc2Fn",
            "ZS5DaGF0VGFyZ2V0Eg0KBXNlcUlkGAIgAygDGhcKFU1lc3NhZ2VDYW5jZWxS",
            "ZXNwb25zZRpMChNNZXNzYWdlQ2xlYXJSZXF1ZXN0EjUKCmNoYXRUYXJnZXQY",
            "ASABKAsyIS5BY0Z1bkRhbm11LkltLk1lc3NhZ2UuQ2hhdFRhcmdldBoWChRN",
            "ZXNzYWdlQ2xlYXJSZXNwb25zZRpVCgtSZWFkU2VxSW5mbxI1CgpjaGF0VGFy",
            "Z2V0GAEgASgLMiEuQWNGdW5EYW5tdS5JbS5NZXNzYWdlLkNoYXRUYXJnZXQS",
            "DwoHcmVhZFNlcRgCIAEoAxpOChVNZXNzYWdlUmVhZFNlcVJlcXVlc3QSNQoK",
            "Y2hhdFRhcmdldBgBIAMoCzIhLkFjRnVuRGFubXUuSW0uTWVzc2FnZS5DaGF0",
            "VGFyZ2V0GlEKFk1lc3NhZ2VSZWFkU2VxUmVzcG9uc2USNwoLcmVhZFNlcUlu",
            "Zm8YASADKAsyIi5BY0Z1bkRhbm11LkltLk1lc3NhZ2UuUmVhZFNlcUluZm8a",
            "iAEKD01lc3NhZ2VSZWFkUHVzaBIQCgh0YXJnZXRJZBgBIAEoAxIPCgdyZWFk",
            "U2VxGAIgASgDEj0KDmNoYXRUYXJnZXRUeXBlGAMgASgOMiUuQWNGdW5EYW5t",
            "dS5JbS5NZXNzYWdlLkNoYXRUYXJnZXRUeXBlEhMKC3N0clRhcmdldElkGAQg",
            "ASgJGhcKFUFsbFVucmVhZENvdW50UmVxdWVzdBowChZBbGxVbnJlYWRDb3Vu",
            "dFJlc3BvbnNlEhYKDmFsbFVucmVhZENvdW50GAEgASgFGjIKFU1lc3NhZ2VS",
            "ZWFkQWxsUmVxdWVzdBIZChFzZXNzaW9uQ2F0ZWdvcnlJZBgBIAEoBRoyChZN",
            "ZXNzYWdlUmVhZEFsbFJlc3BvbnNlEhgKEHJlYWRBbGxUaW1lc3RhbXAYASAB",
            "KAMaZgoYU2VzaW9uU3RpY2t5T25Ub3BSZXF1ZXN0EjUKCmNoYXRUYXJnZXQY",
            "ASABKAsyIS5BY0Z1bkRhbm11LkltLk1lc3NhZ2UuQ2hhdFRhcmdldBITCgtz",
            "dGlja3lPblRvcBgCIAEoCBpRChpTZXNzaW9uU3RpY2t5T25Ub3BSZXNwb25z",
            "ZRIzCgdzZXNzaW9uGAEgASgLMiIuQWNGdW5EYW5tdS5JbS5NZXNzYWdlLkNo",
            "YXRTZXNzaW9uGnEKClNlc3Npb25SYXcSNwoDcmF3GAEgAygLMiouQWNGdW5E",
            "YW5tdS5JbS5NZXNzYWdlLlNlc3Npb25SYXcuUmF3RW50cnkaKgoIUmF3RW50",
            "cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgMOgI4ARpcChRNZXNzYWdl",
            "UmVjYWxsUmVxdWVzdBI1CgpjaGF0VGFyZ2V0GAEgASgLMiEuQWNGdW5EYW5t",
            "dS5JbS5NZXNzYWdlLkNoYXRUYXJnZXQSDQoFc2VxSWQYAiABKAMaFwoVTWVz",
            "c2FnZVJlY2FsbFJlc3BvbnNlGpUBChVNZXNzYWdlUmVjZWlwdFJlcXVlc3QS",
            "RQoSbWVzc2FnZVJlY2VpcHRJbmZvGAEgAygLMikuQWNGdW5EYW5tdS5JbS5N",
            "ZXNzYWdlLk1lc3NhZ2VSZWNlaXB0SW5mbxI1CgpjaGF0VGFyZ2V0GAIgASgL",
            "MiEuQWNGdW5EYW5tdS5JbS5NZXNzYWdlLkNoYXRUYXJnZXQaGAoWTWVzc2Fn",
            "ZVJlY2VpcHRSZXNwb25zZRolChJNZXNzYWdlUmVjZWlwdEluZm8SDwoHcmVh",
            "ZFNlcRgBIAEoAxplCh1NZXNzYWdlUmVjZWlwdENvdW50R2V0UmVxdWVzdBIN",
            "CgVzZXFJZBgBIAMoAxI1CgpjaGF0VGFyZ2V0GAIgASgLMiEuQWNGdW5EYW5t",
            "dS5JbS5NZXNzYWdlLkNoYXRUYXJnZXQaXQoeTWVzc2FnZVJlY2VpcHRDb3Vu",
            "dEdldFJlc3BvbnNlEjsKBnN0YXR1cxgBIAMoCzIrLkFjRnVuRGFubXUuSW0u",
            "TWVzc2FnZS5NZXNzYWdlUmVjZWlwdFN0YXR1cxphChRNZXNzYWdlUmVjZWlw",
            "dFN0YXR1cxIRCglyZWFkQ291bnQYASABKAUSEwoLdW5yZWFkQ291bnQYAiAB",
            "KAUSDQoFc2VxSWQYAyABKAMSEgoKc2VydmVyVGltZRgEIAEoAxpmCh5NZXNz",
            "YWdlUmVjZWlwdERldGFpbEdldFJlcXVlc3QSDQoFc2VxSWQYASABKAMSNQoK",
            "Y2hhdFRhcmdldBgCIAEoCzIhLkFjRnVuRGFubXUuSW0uTWVzc2FnZS5DaGF0",
            "VGFyZ2V0Gn0KH01lc3NhZ2VSZWNlaXB0RGV0YWlsR2V0UmVzcG9uc2USKwoI",
            "cmVhZFVzZXIYASADKAsyGS5BY0Z1bkRhbm11LkltLkJhc2ljLlVzZXISLQoK",
            "dW5yZWFkVXNlchgCIAMoCzIZLkFjRnVuRGFubXUuSW0uQmFzaWMuVXNlchpK",
            "ChdNZXNzYWdlQmF0Y2hTZW5kUmVxdWVzdBIvCgdtZXNzYWdlGAEgAygLMh4u",
            "QWNGdW5EYW5tdS5JbS5NZXNzYWdlLk1lc3NhZ2UaWAoYTWVzc2FnZUJhdGNo",
            "U2VuZFJlc3BvbnNlEjwKCHJlc3BvbnNlGAEgAygLMiouQWNGdW5EYW5tdS5J",
            "bS5NZXNzYWdlLlNlbmRNZXNzYWdlUmVzcG9uc2UaZgoPSW1hZ2VBdHRhY2ht",
            "ZW50EhAKCG1pbWVUeXBlGAEgASgJEgsKA3VybBgCIAEoCRINCgV3aWR0aBgD",
            "IAEoBRIOCgZoZWlnaHQYBCABKAUSFQoNbGVuZ3RoSW5CeXRlcxgFIAEoAxpm",
            "Cg9BdWRpb0F0dGFjaG1lbnQSEAoIbWltZVR5cGUYASABKAkSCwoDdXJsGAIg",
            "ASgJEg0KBXdpZHRoGAMgASgFEg4KBmhlaWdodBgEIAEoBRIVCg1sZW5ndGhJ",
            "bkJ5dGVzGAUgASgDGm4KDUdpZkF0dGFjaG1lbnQSEAoIbWltZVR5cGUYASAB",
            "KAkSCwoDdXJsGAIgASgJEg0KBXdpZHRoGAMgASgFEg4KBmhlaWdodBgEIAEo",
            "BRIRCgl0aHVtYmFVcmwYBSABKAkSDAoEdGV4dBgGIAEoCRqgAQoKQXR0YWNo",
            "bWVudBJBCg9pbWFnZUF0dGFjaG1lbnQYASABKAsyJi5BY0Z1bkRhbm11Lklt",
            "Lk1lc3NhZ2UuSW1hZ2VBdHRhY2htZW50SAASQQoPYXVkaW9BdHRhY2htZW50",
            "GAIgASgLMiYuQWNGdW5EYW5tdS5JbS5NZXNzYWdlLkF1ZGlvQXR0YWNobWVu",
            "dEgAQgwKCmF0dGFjbW5lbnQaRQoLQXR0YWNobWVudHMSNgoLYXR0YWNobWVu",
            "dHMYASADKAsyIS5BY0Z1bkRhbm11LkltLk1lc3NhZ2UuQXR0YWNobWVudBo0",
            "ChJQbGFjZUhvbGRlck1lc3NhZ2USDgoGbWluU2VxGAEgASgDEg4KBm1heFNl",
            "cRgCIAEoAxp/ChBJbWFnZVRleHRNZXNzYWdlEg0KBXRpdGxlGAEgASgJEhMK",
            "C2Rlc2NyaXB0aW9uGAIgASgJEhAKCGltYWdlVXJsGAMgASgJEhEKCWFjdGlv",
            "blVybBgEIAEoCRINCgV3aWR0aBgFIAEoBRITCgthc3BlY3RSYXRpbxgGIAEo",
            "AhpYCg9SaWNoVGV4dE1lc3NhZ2USRQoPcmljaFRleHRNZXNzYWdlGAEgASgL",
            "MiwuQWNGdW5EYW5tdS5JbS5NZXNzYWdlLlJpY2hUZXh0Tm90aWNlTWVzc2Fn",
            "ZRqhAQoNTm90aWNlTWVzc2FnZRJECg5yaWNoVGV4dE5vdGljZRgCIAEoCzIs",
            "LkFjRnVuRGFubXUuSW0uTWVzc2FnZS5SaWNoVGV4dE5vdGljZU1lc3NhZ2US",
            "CwoDbXNnGAUgASgJEj0KD2kxOG5Db3B5V3JpdGluZxgKIAEoCzIkLkFjRnVu",
            "RGFubXUuSW0uQmFzaWMuSTE4bkNvcHlXcml0aW5nGsQBChVSaWNoVGV4dE5v",
            "dGljZU1lc3NhZ2USSAoFaXRlbXMYASADKAsyOS5BY0Z1bkRhbm11LkltLk1l",
            "c3NhZ2UuUmljaFRleHROb3RpY2VNZXNzYWdlLlJpY2hUZXh0SXRlbRphCgxS",
            "aWNoVGV4dEl0ZW0SDQoFY29sb3IYASABKAUSDQoFc3RhcnQYAiABKAUSCwoD",
            "bGVuGAMgASgFEhMKC2NsaWNrQWN0aW9uGAQgASgJEhEKCXVuZGVybGluZRgF",
            "IAEoCCJgChJLc1VzZXJSZWxhdGlvblNoaXASCwoHa1VOS05PVxAAEhUKEUZP",
            "TExPV19FQUNIX09USEVSEAESEgoOVE9fRk9MTE9XX0ZST00QAhISCg5GUk9N",
            "X0ZPTExPV19UTxADIkIKC0FjY291bnRUeXBlEgsKB1VOS05PV04QABIMCghP",
            "RkZJQ0lBTBABEgoKBk5PUk1BTBACEgwKCFNUUkFOR0VSEAMifwoOQ2hhdFRh",
            "cmdldFR5cGUSDAoIQ1RUX1VTRVIQABIRCg1DVFRfQ0hBVF9ST09NEAISGQoV",
            "Q1RUX01VTFRJX1BMQVlFUl9ST09NEAMSDQoJQ1RUX0dST1VQEAQSDwoLQ1RU",
            "X0NIQU5ORUwQBRIRCg1DVFRfQUdHUkVHQVRFEAYiOQoKU3lzdGVtVXNlchIW",
            "ChJrU3lzdGVtVXNlckludmFsaWQQABITCg5TWVNURU1fVVNFUl9JRBCQTiLu",
            "WAoFQ2xvdWQa4gcKB0NoYW5uZWwaQAoXQ2hhbm5lbFN1YnNjcmliZVJlcXVl",
            "c3QSEQoJY2hhbm5lbElkGAEgASgJEhIKCnNldEJhcnJpZXIYAiABKAgaGgoY",
            "Q2hhbm5lbFN1YnNjcmliZVJlc3BvbnNlGi4KGUNoYW5uZWxVbnN1YnNjcmli",
            "ZVJlcXVlc3QSEQoJY2hhbm5lbElkGAEgASgJGjEKHENoYW5uZWxTdWJzY3Jp",
            "YmVyc0dldFJlcXVlc3QSEQoJY2hhbm5lbElkGAEgASgJGk4KHUNoYW5uZWxT",
            "dWJzY3JpYmVyc0dldFJlc3Bvc25lEi0KCnN1YnNjcmliZXIYASADKAsyGS5B",
            "Y0Z1bkRhbm11LkltLkJhc2ljLlVzZXIaPgoQQ2hhbm5lbEJhc2ljSW5mbxIR",
            "CgljaGFubmVsSWQYASABKAkSFwoPc3Vic2NyaWJlckNvdW50GAIgASgFGoUB",
            "Cg5Vc2VyQWN0aW9uSW5mbxInCgR1c2VyGAEgASgLMhkuQWNGdW5EYW5tdS5J",
            "bS5CYXNpYy5Vc2VyEjcKBmFjdGlvbhgCIAEoDjInLkFjRnVuRGFubXUuSW0u",
            "Q2xvdWQuQ2hhbm5lbC5Vc2VyQWN0aW9uEhEKCXRpbWVzdGFtcBgDIAEoAxov",
            "ChpDaGFubmVsQmFzaWNJbmZvR2V0UmVxdWVzdBIRCgljaGFubmVsSWQYASAD",
            "KAkaXwobQ2hhbm5lbEJhc2ljSW5mb0dldFJlc3BvbnNlEkAKCWJhc2ljSW5m",
            "bxgBIAMoCzItLkFjRnVuRGFubXUuSW0uQ2xvdWQuQ2hhbm5lbC5DaGFubmVs",
            "QmFzaWNJbmZvGiwKF0NoYW5uZWxIZWFydGJlYXRSZXF1ZXN0EhEKCWNoYW5u",
            "ZWxJZBgBIAMoCRo1ChhDaGFubmVsSGVhcnRiZWF0UmVzcG9uc2USGQoRbm90",
            "RXhpc3RDaGFubmVsSWQYASADKAkanwEKFkNoYW5uZWxCYXNpY0luZm9Ob3Rp",
            "ZnkSQwoOdXNlckFjdGlvbkluZm8YASABKAsyKy5BY0Z1bkRhbm11LkltLkNs",
            "b3VkLkNoYW5uZWwuVXNlckFjdGlvbkluZm8SQAoJYmFzaWNJbmZvGAIgASgL",
            "Mi0uQWNGdW5EYW5tdS5JbS5DbG91ZC5DaGFubmVsLkNoYW5uZWxCYXNpY0lu",
            "Zm8iZQoKVXNlckFjdGlvbhIXChNVU0VSX0FDVElPTl9VTktOT1dOEAASFQoR",
            "VVNFUl9KT0lOX0NIQU5ORUwQARIVChFVU0VSX1FVSVRfQ0hBTk5FTBACEhAK",
            "DFVTRVJfT0ZGTElORRADGpkECgZDb25maWcaKQoWQ2xpZW50Q29uZmlnR2V0",
            "UmVxdWVzdBIPCgd2ZXJzaW9uGAEgASgNGmoKF0NsaWVudENvbmZpZ0dldFJl",
            "c3BvbnNlEg8KB3ZlcnNpb24YASABKA0SPgoMY2xpZW50Q29uZmlnGAIgASgL",
            "MiguQWNGdW5EYW5tdS5JbS5DbG91ZC5Db25maWcuQ2xpZW50Q29uZmlnGlYK",
            "HU5ldHdvcmtRdWFsaXR5RGV0ZWN0aW9uQ29uZmlnEhcKD2RldGVjdGlvbkRv",
            "bWFpbhgBIAEoCRIcChRkZXRlY3Rpb25JbnZlcnZhbFNlYxgCIAEoBRqfAgoM",
            "Q2xpZW50Q29uZmlnEh8KF2ZldGNoVXNlclN0YXR1c0ludGVydmFsGAEgASgF",
            "EiQKHGNoYW5uZWxVc2VySGVhcnRiZWF0SW50ZXJ2YWwYAiABKAUSYAodbmV0",
            "d29ya1F1YWxpdHlEZXRlY3Rpb25Db25maWcYAyABKAsyOS5BY0Z1bkRhbm11",
            "LkltLkNsb3VkLkNvbmZpZy5OZXR3b3JrUXVhbGl0eURldGVjdGlvbkNvbmZp",
            "ZxIjChtpbnB1dHRpbmdUaXBEaXNwbGF5SW50ZXJ2YWwYBCABKAUSIAoYYmF0",
            "Y2hTZW5kTWVzc2FnZU1heENvdW50GAUgASgFEh8KF3Jlc291cmNlVXBsb2Fk",
            "aW5nRG9tYWluGAYgASgJGosDCgdQcm9maWxlGsoBChBVc2VyT25saW5lU3Rh",
            "dHVzEicKBHVzZXIYASABKAsyGS5BY0Z1bkRhbm11LkltLkJhc2ljLlVzZXIS",
            "FwoPbGFzdE9mZmxpbmVUaW1lGAIgASgDEkQKBnN0YXR1cxgDIAEoDjI0LkFj",
            "RnVuRGFubXUuSW0uQ2xvdWQuUHJvZmlsZS5Vc2VyT25saW5lU3RhdHVzLlN0",
            "YXR1cyIuCgZTdGF0dXMSCwoHVU5LTk9XThAAEgoKBk9OTElORRABEgsKB09G",
            "RkxJTkUQAhpICh1Qcm9maWxlQmF0Y2hPbmxpbmVUaW1lUmVxdWVzdBInCgR1",
            "c2VyGAEgAygLMhkuQWNGdW5EYW5tdS5JbS5CYXNpYy5Vc2VyGmkKHlByb2Zp",
            "bGVCYXRjaE9ubGluZVRpbWVSZXNwb25zZRJHChB1c2VyT25saW5lU3RhdHVz",
            "GAEgAygLMi0uQWNGdW5EYW5tdS5JbS5DbG91ZC5Qcm9maWxlLlVzZXJPbmxp",
            "bmVTdGF0dXMa7AUKBERhdGEa4wUKBlVwZGF0ZRp2ChlLc0ltRGF0YVVwZGF0",
            "ZVB1c2hQYXlsb2FkEkgKBHR5cGUYASABKAsyOi5BY0Z1bkRhbm11LkltLkNs",
            "b3VkLkRhdGEuVXBkYXRlLktzSW1EYXRhVXBkYXRlUHVzaFBheWxvYWQSDwoH",
            "Y29udGVudBgCIAEoDBomChNHcm91cEluZm9EYXRhVXBkYXRlEg8KB2dyb3Vw",
            "SWQYASABKAkaKAoVR3JvdXBNZW1iZXJMaXN0VXBkYXRlEg8KB2dyb3VwSWQY",
            "ASABKAkaHgoLWW91QmVLaWNrZWQSDwoHZ3JvdXBJZBgBIAEoCRpyCgtNZXNz",
            "YWdlUmVhZBITCgtzdHJUYXJnZXRJZBgBIAEoCRIPCgdyZWFkU2VxGAIgASgD",
            "Ej0KDmNoYXRUYXJnZXRUeXBlGAMgASgOMiUuQWNGdW5EYW5tdS5JbS5NZXNz",
            "YWdlLkNoYXRUYXJnZXRUeXBlGosBCg5NZXNzYWdlUmVjZWlwdBI1CgpjaGF0",
            "VGFyZ2V0GAEgASgLMiEuQWNGdW5EYW5tdS5JbS5NZXNzYWdlLkNoYXRUYXJn",
            "ZXQSQgoNcmVjZWlwdFN0YXR1cxgCIAEoCzIrLkFjRnVuRGFubXUuSW0uTWVz",
            "c2FnZS5NZXNzYWdlUmVjZWlwdFN0YXR1cyLsAQoSS3NJbURhdGFVcGRhdGVU",
            "eXBlEgsKB0lOVkFMSUQQABIVChFHUk9VUF9JTkZPX1VQREFURRABEhwKGEdS",
            "T1VQX01FTUJFUl9MSVNUX1VQREFURRACEhEKDVlPVV9CRV9LSUNLRUQQAxIW",
            "ChJNRVNTQUdFX1JFQURfRVZFTlQQBBIZChVNRVNTQUdFX1JFQ0VJUFRfRVZF",
            "TlQQBRIWChJGUklFTkRfTElTVF9VUERBVEUQBhIfChtGUklFTkRfUkVRVUVT",
            "VF9DT1VOVF9VUERBVEUQBxIVChFCTEFDS19MSVNUX1VQREFURRAIGuZDCgdN",
            "ZXNzYWdlGokBChJJbWNSZWNhbGxlZE1lc3NhZ2USMQoJb3JpZ2luTXNnGAEg",
            "ASgLMh4uQWNGdW5EYW5tdS5JbS5NZXNzYWdlLk1lc3NhZ2USQAoJbm90aWNl",
            "TXNnGAIgASgLMi0uQWNGdW5EYW5tdS5JbS5DbG91ZC5NZXNzYWdlLkltY05v",
            "dGljZU1lc3NhZ2UaRwoRSW1jUmVwbGFjZU1lc3NhZ2USMgoKcmVwbGFjZU1z",
            "ZxgBIAEoCzIeLkFjRnVuRGFubXUuSW0uTWVzc2FnZS5NZXNzYWdlGhQKBFRl",
            "eHQSDAoEdGV4dBgBIAEoCRozCgVJbWFnZRILCgN1cmkYASABKAkSDQoFd2lk",
            "dGgYAiABKAUSDgoGaGVpZ2h0GAMgASgFGjQKBUF1ZGlvEgsKA3VyaRgBIAEo",
            "CRIQCghkdXJhdGlvbhgCIAEoBRIMCgR0eXBlGAMgASgJGmUKBVZpZGVvEgsK",
            "A3VyaRgBIAEoCRIQCghkdXJhdGlvbhgCIAEoBRINCgV3aWR0aBgDIAEoBRIO",
            "CgZoZWlnaHQYBCABKAUSEAoIY292ZXJVcmkYBSABKAkSDAoEdHlwZRgGIAEo",
            "CRoZCgZDdXN0b24SDwoHcGF5bG9hZBgBIAEoCRpCCgZQaWNVcmwSCwoDY2Ru",
            "GAEgASgJEgsKA3VybBgCIAEoCRISCgp1cmxQYXR0ZXJuGAMgASgJEgoKAmlw",
            "GAQgASgJGoMDCghFbW90aWNvbhIKCgJpZBgBIAEoCRIRCglwYWNrYWdlSWQY",
            "AiABKAkSDAoEbmFtZRgDIAEoCRI4CgR0eXBlGAQgASgOMiouQWNGdW5EYW5t",
            "dS5JbS5DbG91ZC5NZXNzYWdlLkVtb3RpY29uLlR5cGUSMwoGYmlnVXJsGAUg",
            "AygLMiMuQWNGdW5EYW5tdS5JbS5DbG91ZC5NZXNzYWdlLlBpY1VybBINCgV3",
            "aWR0aBgGIAEoBRIOCgZoZWlnaHQYByABKAUSQAoMZW1vdGljb25DT2RlGAgg",
            "AygLMiouQWNGdW5EYW5tdS5JbS5DbG91ZC5NZXNzYWdlLkVtb3RpY29uLkNv",
            "ZGUaJgoEQ29kZRIQCghsYW5ndWFnZRgBIAEoCRIMCgRjb2RlGAIgAygJIlIK",
            "BFR5cGUSCwoHVU5LTk9XThAAEgkKBUJBU0lDEAESCQoFSU1BR0UQAhIHCgNH",
            "SUYQAxISCg5TUEVDSUFMX0VGRkVDVBAEEgoKBlNDUklQVBAFGj0KBEZpbGUS",
            "CwoDdXJpGAEgASgJEgwKBG5hbWUYAiABKAkSCwoDZXh0GAMgASgJEg0KBWV4",
            "dHJhGAQgASgJGscBCglSZWZlcmVuY2USMQoJb3JpZ2luTXNnGAEgASgLMh4u",
            "QWNGdW5EYW5tdS5JbS5NZXNzYWdlLk1lc3NhZ2USTQoMcmVmZXJlbmNlTXNn",
            "GAIgASgLMjcuQWNGdW5EYW5tdS5JbS5DbG91ZC5NZXNzYWdlLlJlZmVyZW5j",
            "ZS5SZWZlcmVuY2VNZXNzYWdlGjgKEFJlZmVyZW5jZU1lc3NhZ2USEwoLY29u",
            "dGVudFR5cGUYASABKAUSDwoHY29udGVudBgCIAEoDBpIChVGb3J3YXJkTWVz",
            "c2FnZUNvbnRlbnQSLwoHbWVzc2FnZRgBIAMoCzIeLkFjRnVuRGFubXUuSW0u",
            "TWVzc2FnZS5NZXNzYWdlGk0KFU5vdGljZVBsYWNlaG9sZGVyTWV0YRIQCgh0",
            "YXJnZXRJZBgBIAEoCRISCgpzdGFydEluZGV4GAIgASgFEg4KBmxlbmd0aBgD",
            "IAEoBRqjAQoQSW1jTm90aWNlTWVzc2FnZRIMCgR0ZXh0GAEgASgJElEKFW5v",
            "dGljZVBsYWNlaG9sZGVyTWV0YRgCIAMoCzIyLkFjRnVuRGFubXUuSW0uQ2xv",
            "dWQuTWVzc2FnZS5Ob3RpY2VQbGFjZWhvbGRlck1ldGESFgoObm90aWNlTWV0",
            "YVR5cGUYAyABKAUSFgoObm90aWNlTWV0YUluZm8YBCABKAwaJwoVTGlua2Vk",
            "UHJvZmlsZU1ldGFJbmZvEg4KBnVzZXJJZBgBIAMoAxqKAQokQ29uZmlybUlu",
            "dml0ZUludG9Hcm91cE5vdGljZU1ldGFJbmZvEhEKCXJlcXVlc3RJZBgBIAEo",
            "AxIPCgdncm91cElkGAIgASgJEj4KBnN0YXR1cxgDIAEoDjIuLkFjRnVuRGFu",
            "bXUuSW0uQ2xvdWQuTWVzc2FnZS5Kb2luUmVxdWVzdFN0YXR1cxqIAQoiQ29u",
            "ZmlybUpvaW5JbnRvR3JvdXBOb3RpY2VNZXRhSW5mbxIRCglyZXF1ZXN0SWQY",
            "ASABKAMSDwoHZ3JvdXBJZBgCIAEoCRI+CgZzdGF0dXMYAyABKA4yLi5BY0Z1",
            "bkRhbm11LkltLkNsb3VkLk1lc3NhZ2UuSm9pblJlcXVlc3RTdGF0dXMaQAoS",
            "R3JvdXBDcmVhdGVSZXF1ZXN0EioKB21lbWJlcnMYASADKAsyGS5BY0Z1bkRh",
            "bm11LkltLkJhc2ljLlVzZXIamwEKEkdyb3VwQ3JlYXRlUmVwb25zZRIPCgdn",
            "cm91cElkGAEgASgJEjkKCWdyb3VwSW5mbxgCIAEoCzImLkFjRnVuRGFubXUu",
            "SW0uQ2xvdWQuTWVzc2FnZS5Hcm91cEluZm8SOQoHbWVtYmVycxgDIAMoCzIo",
            "LkFjRnVuRGFubXUuSW0uQ2xvdWQuTWVzc2FnZS5Hcm91cE1lbWJlcholChJH",
            "cm91cERlbGV0ZVJlcXVlc3QSDwoHZ3JvdXBJZBgBIAEoCRoVChNHcm91cERl",
            "bGV0ZVJlc3BvbnNlGmYKEkdyb3VwSW52aXRlUmVxdWVzdBIPCgdncm91cElk",
            "GAEgASgJEioKB21lbWJlcnMYAiADKAsyGS5BY0Z1bkRhbm11LkltLkJhc2lj",
            "LlVzZXISEwoLZGVzY0NvbnRlbnQYAyABKAkatgEKE0dyb3VwSW52aWRlUmVz",
            "cG9uc2USDwoHZ3JvdXBJZBgBIAEoCRJTCgxpbnZpdGVTdGF0dXMYAiABKA4y",
            "PS5BY0Z1bkRhbm11LkltLkNsb3VkLk1lc3NhZ2UuR3JvdXBJbnZpZGVSZXNw",
            "b25zZS5JbnZpdGVTdGF0dXMiOQoMSW52aXRlU3RhdHVzEhIKDlVOS05PV05f",
            "U1RBVFVTEAASCAoEU1VDQxABEgsKB1BFTkRJTkcQAhqiAQoQR3JvdXBKb2lu",
            "UmVxdWVzdBIPCgdncm91cElkGAEgASgJEioKB2ludml0ZXIYAiABKAsyGS5B",
            "Y0Z1bkRhbm11LkltLkJhc2ljLlVzZXISEwoLZGVzY0NvbnRlbnQYAyABKAkS",
            "PAoIZmluZFR5cGUYBCABKA4yKi5BY0Z1bkRhbm11LkltLkNsb3VkLk1lc3Nh",
            "Z2UuR3JvdXBGaW5kVHlwZRqbAQoRR3JvdXBKb2luUmVzcG9uc2USTQoKam9p",
            "blN0YXR1cxgBIAEoDjI5LkFjRnVuRGFubXUuSW0uQ2xvdWQuTWVzc2FnZS5H",
            "cm91cEpvaW5SZXNwb25zZS5Kb2luU3RhdHVzIjcKCkpvaW5TdGF0dXMSEgoO",
            "VU5LTk9XTl9TVEFUVVMQABIICgRTVUNDEAESCwoHUEVORElORxACGukBChpH",
            "cm91cEpvaW5SZXF1ZXN0QWNrUmVxdWVzdBINCgVyZXFJZBgBIAEoAxIPCgdn",
            "cm91cElkGAIgASgJEmIKEGdyb3VwSm9pbkFja1R5cGUYAyABKA4ySC5BY0Z1",
            "bkRhbm11LkltLkNsb3VkLk1lc3NhZ2UuR3JvdXBKb2luUmVxdWVzdEFja1Jl",
            "cXVlc3QuR3JvdXBKb2luQWNrVHlwZSJHChBHcm91cEpvaW5BY2tUeXBlEhAK",
            "DFVOS05PV05fVFlQRRAAEgkKBUFHUkVFEAESCgoGUkVGVVNFEAISCgoGSUdO",
            "T1JFEAMaHQobR3JvdXBKb2luUmVxdWVzdEFja1Jlc3BvbnNlGj0KGkdyb3Vw",
            "Sm9pblJlcXVlc3RHZXRSZXF1ZXN0Eg4KBnJlcVNlcRgBIAEoAxIPCgdncm91",
            "cElkGAIgASgJGpkCChtHcm91cEpvaW5SZXF1ZXN0R2V0UmVzcG9uc2USDwoH",
            "Z3JvdXBJZBgBIAEoCRIqCgdpbnZpdGVyGAIgASgLMhkuQWNGdW5EYW5tdS5J",
            "bS5CYXNpYy5Vc2VyEisKCGludml0ZWVzGAMgAygLMhkuQWNGdW5EYW5tdS5J",
            "bS5CYXNpYy5Vc2VyEjsKB2ZpbmRXYXkYBCABKA4yKi5BY0Z1bkRhbm11Lklt",
            "LkNsb3VkLk1lc3NhZ2UuR3JvdXBGaW5kVHlwZRITCgtkZXNjQ29udGVudBgF",
            "IAEoCRI+CgZzdGF0dXMYBiABKA4yLi5BY0Z1bkRhbm11LkltLkNsb3VkLk1l",
            "c3NhZ2UuSm9pblJlcXVlc3RTdGF0dXMaQAodR3JvdXBKb2luUmVxdWVzdENh",
            "bmNlbFJlcXVlc3QSDgoGcmVxU2VxGAEgASgDEg8KB2dyb3VwSWQYAiABKAka",
            "nAIKHkdyb3VwSm9pblJlcXVlc3RDYW5jZWxSZXNwb3NuZRIPCgdncm91cElk",
            "GAEgASgJEioKB2ludml0ZXIYAiABKAsyGS5BY0Z1bkRhbm11LkltLkJhc2lj",
            "LlVzZXISKwoIaW52aXRlZXMYAyADKAsyGS5BY0Z1bkRhbm11LkltLkJhc2lj",
            "LlVzZXISOwoHZmluZFdheRgEIAEoDjIqLkFjRnVuRGFubXUuSW0uQ2xvdWQu",
            "TWVzc2FnZS5Hcm91cEZpbmRUeXBlEhMKC2Rlc2NDb250ZW50GAUgASgJEj4K",
            "BnN0YXR1cxgGIAEoDjIuLkFjRnVuRGFubXUuSW0uQ2xvdWQuTWVzc2FnZS5K",
            "b2luUmVxdWVzdFN0YXR1cxojChBHcm91cFF1aXRSZXF1ZXN0Eg8KB2dyb3Vw",
            "SWQYASABKAkaJAoRR3JvdXBRdWl0UmVzcG9uc2USDwoHZ3JvdXBJZBgBIAEo",
            "CRpOChBHcm91cEtpY2tSZXF1ZXN0Eg8KB2dyb3VwSWQYASABKAkSKQoGdGFy",
            "Z2V0GAIgAygLMhkuQWNGdW5EYW5tdS5JbS5CYXNpYy5Vc2VyGiQKEUdyb3Vw",
            "S2lja1Jlc3BvbnNlEg8KB2dyb3VwSWQYASABKAka6gIKE0dyb3VwU2V0dGlu",
            "Z1JlcXVlc3QSDwoHZ3JvdXBJZBgBIAEoCRJBCgZyZW5hbWUYAiABKAsyLy5B",
            "Y0Z1bkRhbm11LkltLkNsb3VkLk1lc3NhZ2UuR3JvdXBTZXR0aW5nUmVuYW1l",
            "SAASPQoEZGVzYxgDIAEoCzItLkFjRnVuRGFubXUuSW0uQ2xvdWQuTWVzc2Fn",
            "ZS5Hcm91cFNldHRpbmdEZXNjSAASWQoSam9pbk5lZWRQZXJtaXNzaW9uGAQg",
            "ASgLMjsuQWNGdW5EYW5tdS5JbS5DbG91ZC5NZXNzYWdlLkdyb3VwU2V0dGlu",
            "Z0pvaW5OZWVkUGVybWlzc2lvbkgAElUKEGludml0ZVBlcm1pc3Npb24YBSAB",
            "KAsyOS5BY0Z1bkRhbm11LkltLkNsb3VkLk1lc3NhZ2UuR3JvdXBTZXR0aW5n",
            "SW52aXRlUGVybWlzc2lvbkgAQg4KDEdyb3VwU2V0dGluZxonChJHcm91cFNl",
            "dHRpbmdSZW5hbWUSEQoJZ3JvdXBOYW1lGAEgASgJGiAKEEdyb3VwU2V0dGlu",
            "Z0Rlc2MSDAoEZGVzYxgBIAEoCRpxCh5Hcm91cFNldHRpbmdKb2luTmVlZFBl",
            "cm1pc3Npb24STwoSam9pbk5lZWRQZXJtaXNzaW9uGAEgASgOMjMuQWNGdW5E",
            "YW5tdS5JbS5DbG91ZC5NZXNzYWdlLkpvaW5OZWVkUGVybWlzc2lvblR5cGUa",
            "bwocR3JvdXBTZXR0aW5nSW52aXRlUGVybWlzc2lvbhJPChRpbnZpdGVQZXJt",
            "aXNzaW9uVHlwZRgBIAEoDjIxLkFjRnVuRGFubXUuSW0uQ2xvdWQuTWVzc2Fn",
            "ZS5JbnZpdGVQZXJtaXNzaW9uVHlwZRoWChRHcm91cFNldHRpbmdSZXNwb25z",
            "ZRrRAQoZR3JvdXBNZW1iZXJTZXR0aW5nUmVxdWVzdBIPCgdncm91cElkGAEg",
            "ASgJEkMKC3NldE5pY2tuYW1lGAIgASgLMiwuQWNGdW5EYW5tdS5JbS5DbG91",
            "ZC5NZXNzYWdlLlNldFVzZXJOaWNrbmFtZUgAEk8KEXNldEFudGlEaXN0dXJi",
            "aW5nGAMgASgLMjIuQWNGdW5EYW5tdS5JbS5DbG91ZC5NZXNzYWdlLlNldFVz",
            "ZXJBbnRpRGlzdHVyYmluZ0gAQg0KC1VzZXJTZXR0aW5nGiMKD1NldFVzZXJO",
            "aWNrbmFtZRIQCghuaWNrbmFtZRgBIAEoCRovChVTZXRVc2VyQW50aURpc3R1",
            "cmJpbmcSFgoOYW50aURpc3R1cmJpbmcYASABKAgaHAoaR3JvdXBNZW1iZXJT",
            "ZXR0aW5nUmVzcG9uc2UaYQoZR3JvdXBNZW1iZXJMaXN0R2V0UmVxdWVzdBIP",
            "Cgdncm91cElkGAEgASgJEjMKCnN5bmNDb29raWUYAiABKAsyHy5BY0Z1bkRh",
            "bm11LkltLkJhc2ljLlN5bmNDb29raWUajAEKGkdyb3VwTWVtYmVyTGlzdEdl",
            "dFJlc3BvbnNlEjkKB21lbWJlcnMYASADKAsyKC5BY0Z1bkRhbm11LkltLkNs",
            "b3VkLk1lc3NhZ2UuR3JvdXBNZW1iZXISMwoKc3luY0Nvb2tpZRgCIAEoCzIf",
            "LkFjRnVuRGFubXUuSW0uQmFzaWMuU3luY0Nvb2tpZRpRChVHcm91cE1lbWJl",
            "ckdldFJlcXVlc3QSDwoHZ3JvdXBJZBgBIAEoCRInCgR1c2VyGAIgASgLMhku",
            "QWNGdW5EYW5tdS5JbS5CYXNpYy5Vc2VyGlIKFkdyb3VwTWVtYmVyR2V0UmVz",
            "cG9uc2USOAoGbWVtYmVyGAEgASgLMiguQWNGdW5EYW5tdS5JbS5DbG91ZC5N",
            "ZXNzYWdlLkdyb3VwTWVtYmVyGksKFFVzZXJHcm91cExpc3RSZXF1ZXN0EjMK",
            "CnN5bmNDb29raWUYAiABKAsyHy5BY0Z1bkRhbm11LkltLkJhc2ljLlN5bmND",
            "b29raWUajwEKFVVzZXJHcm91cExpc3RSZXNwb25zZRJBCg11c2VyR3JvdXBJ",
            "bmZvGAEgAygLMiouQWNGdW5EYW5tdS5JbS5DbG91ZC5NZXNzYWdlLlVzZXJH",
            "cm91cEluZm8SMwoKc3luY0Nvb2tpZRgCIAEoCzIfLkFjRnVuRGFubXUuSW0u",
            "QmFzaWMuU3luY0Nvb2tpZRo2Cg9Vc2VyR3JvdXBSZWNvcmQSDwoHZ3JvdXBJ",
            "ZBgBIAEoCRISCgp1cGRhdGVUaW1lGAIgASgDGiYKE1VzZXJHcm91cEdldFJl",
            "cXVlc3QSDwoHZ3JvdXBJZBgBIAMoCRpZChRVc2VyR3JvdXBHZXRSZXNwb25z",
            "ZRJBCg11c2VyR3JvdXBJbmZvGAEgAygLMiouQWNGdW5EYW5tdS5JbS5DbG91",
            "ZC5NZXNzYWdlLlVzZXJHcm91cEluZm8aiQEKDVVzZXJHcm91cEluZm8SOQoJ",
            "Z3JvdXBJbmZvGAEgASgLMiYuQWNGdW5EYW5tdS5JbS5DbG91ZC5NZXNzYWdl",
            "Lkdyb3VwSW5mbxI9Cgtncm91cE1lbWJlchgCIAEoCzIoLkFjRnVuRGFubXUu",
            "SW0uQ2xvdWQuTWVzc2FnZS5Hcm91cE1lbWJlchqfBAoLR3JvdXBNZW1iZXIS",
            "JwoEdXNlchgBIAEoCzIZLkFjRnVuRGFubXUuSW0uQmFzaWMuVXNlchIQCghu",
            "aWNrbmFtZRgCIAEoCRIWCg5hbnRpRGlzdHVyYmluZxgDIAEoCBJKCgZzdGF0",
            "dXMYBCABKA4yOi5BY0Z1bkRhbm11LkltLkNsb3VkLk1lc3NhZ2UuR3JvdXBN",
            "ZW1iZXIuR3JvdXBNZW1iZXJTdGF0dXMSEQoJaW52aXRlcklkGAUgASgDEhAK",
            "CGpvaW5UaW1lGAYgASgDEhIKCmNyZWF0ZVRpbWUYByABKAMSEgoKdXBkYXRl",
            "VGltZRgIIAEoAxJGCgRyb2xlGAkgASgOMjguQWNGdW5EYW5tdS5JbS5DbG91",
            "ZC5NZXNzYWdlLkdyb3VwTWVtYmVyLkdyb3VwTWVtYmVyUm9sZRI8CghmaW5k",
            "VHlwZRgKIAEoDjIqLkFjRnVuRGFubXUuSW0uQ2xvdWQuTWVzc2FnZS5Hcm91",
            "cEZpbmRUeXBlImIKEUdyb3VwTWVtYmVyU3RhdHVzEhkKFVVOS05PV05fTUVN",
            "QkVSX1NUQVRVUxAAEgoKBk5PUk1BTBABEgsKB1FVSVRURUQQAhIKCgZLSUNL",
            "RUQQAxINCglESVNNSVNTRUQQBCI6Cg9Hcm91cE1lbWJlclJvbGUSEAoMVU5L",
            "Tk9XTl9ST0xFEAASCgoGQ09NTU9OEAESCQoFQURNSU4QAhqcAQoJR3JvdXBJ",
            "bmZvEj4KCWJhc2ljSW5mbxgBIAEoCzIrLkFjRnVuRGFubXUuSW0uQ2xvdWQu",
            "TWVzc2FnZS5Hcm91cEJhc2ljSW5mbxJPChRncm91cE1lbWJlckJyaWVmSW5m",
            "bxgCIAEoCzIxLkFjRnVuRGFubXUuSW0uQ2xvdWQuTWVzc2FnZS5Hcm91cE1l",
            "bWJlckJyaWVmSW5mbxq5BAoOR3JvdXBCYXNpY0luZm8SDwoHZ3JvdXBJZBgB",
            "IAEoCRIRCglncm91cE5hbWUYAiABKAkSKAoFYWRtaW4YAyABKAsyGS5BY0Z1",
            "bkRhbm11LkltLkJhc2ljLlVzZXISPQoLZ3JvdXBTdGF0dXMYBCABKA4yKC5B",
            "Y0Z1bkRhbm11LkltLkNsb3VkLk1lc3NhZ2UuR3JvdXBTdGF0dXMSEwoLZGVz",
            "Y3JpcHRpb24YBSABKAkSTwoSam9pbk5lZWRQZXJtaXNzaW9uGAYgASgOMjMu",
            "QWNGdW5EYW5tdS5JbS5DbG91ZC5NZXNzYWdlLkpvaW5OZWVkUGVybWlzc2lv",
            "blR5cGUSEgoKY3JlYXRlVGltZRgHIAEoAxISCgp1cGRhdGVUaW1lGAggASgD",
            "EjkKCWdyb3VwVHlwZRgJIAEoDjImLkFjRnVuRGFubXUuSW0uQ2xvdWQuTWVz",
            "c2FnZS5Hcm91cFR5cGUSQwoOZm9yYmlkZGVuU3RhdGUYCiABKA4yKy5BY0Z1",
            "bkRhbm11LkltLkNsb3VkLk1lc3NhZ2UuRm9yYmlkZGVuU3RhdGUSTwoUaW52",
            "aXRlUGVybWlzc2lvblR5cGUYCyABKA4yMS5BY0Z1bkRhbm11LkltLkNsb3Vk",
            "Lk1lc3NhZ2UuSW52aXRlUGVybWlzc2lvblR5cGUSEgoKYml6RGVmQ29kZRgM",
            "IAEoBRIYChBkZWZhbHV0R3JvdXBOYW1lGA0gASgJEg0KBWV4dHJhGA4gASgJ",
            "GnIKFEdyb3VwTWVtYmVyQnJpZWZJbmZvEhMKC21lbWJlckNvdW50GAEgASgF",
            "Ei0KCnRvcE1lbWJlcnMYAiADKAsyGS5BY0Z1bkRhbm11LkltLkJhc2ljLlVz",
            "ZXISFgoObGFzdFVwZGF0ZVRpbWUYAyABKAMadAoVSW1jUGFzc1Rocm91Z2hS",
            "ZXF1ZXN0EjUKCmNoYXRUYXJnZXQYASABKAsyIS5BY0Z1bkRhbm11LkltLk1l",
            "c3NhZ2UuQ2hhdFRhcmdldBIPCgdjb250ZW50GAIgASgMEhMKC2NvbnRlbnRU",
            "eXBlGAMgASgFGhgKFkltY1Bhc3NUaHJvdWdoUmVzcG9uc2UangEKEkltY1Bh",
            "c3NUaHJvdWdoUHVzaBI1CgpjaGF0VGFyZ2V0GAEgASgLMiEuQWNGdW5EYW5t",
            "dS5JbS5NZXNzYWdlLkNoYXRUYXJnZXQSKwoIZnJvbVVzZXIYAiABKAsyGS5B",
            "Y0Z1bkRhbm11LkltLkJhc2ljLlVzZXISDwoHY29udGVudBgDIAEoDBITCgtj",
            "b250ZW50VHlwZRgEIAEoBRorChBJbnB1dHRpbmdDb250ZW50EhcKD2Rpc3Bs",
            "YXlJbnRlcnZhbBgBIAEoBSLlAQoOSW1jTWVzc2FnZVR5cGUSCAoEVEVYVBAA",
            "EgkKBUlNQUdFEAESCgoGQ1VTVE9NEAISCQoFQVVESU8QAxIJCgVWSURFTxAE",
            "EgwKCEVNT1RJQ09OEAUSCAoERklMRRAGEgoKBk5PVElDRRAKEgwKCFJFQ0FM",
            "TEVEEAsSDQoJUkVGRVJFTkNFEAwSEQoNTUVSR0VfRk9SV0FSRBANEhAKDFBM",
            "QUNFX0hPTERFUhBkEgsKB1JFUExBQ0UQZRIXChJJTlZJU0lCTEVfVFlQRV9N",
            "QVMQxwESEAoLUklDSF9OT1RJQ0UQyAEirwEKDk5vdGljZU1ldGFUeXBlEhwK",
            "GFVOS05PV05fTk9USUNFX01FVEFfVFlQRRAAEhsKF0NPTU1PTl9OT1RJQ0Vf",
            "TUVUQV9UWVBFEAESIgoeQ09ORklSTV9JTlZJVEVfSU5UT19HUk9VUF9NRVRB",
            "EAISIAocQ09ORklSTV9KT0lOX0lOVE9fR1JPVVBfTUVUQRADEhwKGExJTktF",
            "RF9QUk9GSUxFX01FVEFfVFlQRRAEInoKDUdyb3VwRmluZFR5cGUSDgoKQllf",
            "VU5LTk9XThAAEgkKBUJZX0lEEAESCwoHQllfTkFNRRACEg4KCkJZX1FSX0NP",
            "REUQAxILCgdCWV9DQVJEEAQSEQoNQllfSU5WSVRBVElPThAFEhEKDUJZX1NI",
            "QVJFX0xJTksQBiJRChFKb2luUmVxdWVzdFN0YXR1cxISCg5VTktOT1dOX1NU",
            "QVRVUxAAEg0KCVJFUVVFU1RFRBABEgwKCEFQUFJPVkVEEAISCwoHUkVGVVNF",
            "RBADIlgKFEludml0ZVBlcm1pc3Npb25UeXBlEiIKHlVOS05PV05fSU5WSVRF",
            "X1BFUk1JU1NJT05fVFlQRRAAEgwKCEVWRVJZT05FEAESDgoKT05MWV9BRE1J",
            "ThACIlQKFkpvaW5OZWVkUGVybWlzc2lvblR5cGUSJQohVU5LTk9XTl9KT0lO",
            "X05FRURfUEVSTUlTU0lPTl9UWVBFEAASCAoETk9ORRABEgkKBUFETUlOEAIi",
            "PgoLR3JvdXBTdGF0dXMSFwoTVU5LTk9XX0dST1VQX1NUQVRVUxAAEgkKBVZB",
            "TElEEAESCwoHSU5WQUxJRBACIjsKCUdyb3VwVHlwZRIVChFVTktOT1dfR1JP",
            "VVBfVFlQRRAAEgsKB1BSSVZBVEUQAxIKCgZQVUJMSUMQBCJTCg5Gb3JiaWRk",
            "ZW5TdGF0ZRIbChdVTktOT1dOX0ZPUkJJRERFTl9TVEFURRAAEhAKDFVOX0ZP",
            "UkJJRERFThABEhIKDkZPUkJJRF9NRVNTQUdFEAIiMQoPUGFzc1Rocm91Z2hU",
            "eXBlEg8KC0lOVkFMSURfUFRUEAASDQoJSU5QVVRUSU5HEAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic), global::AcFunDanmu.Im.Basic.Parser, null, null, new[]{ typeof(global::AcFunDanmu.Im.Basic.Types.SharePlatform) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.PacketHeader), global::AcFunDanmu.Im.Basic.Types.PacketHeader.Parser, new[]{ "AppId", "Uid", "InstanceId", "Flags", "EncodingType", "DecodedPayloadLen", "EncryptionMode", "TokenInfo", "SeqId", "Features", "Kpn" }, null, new[]{ typeof(global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.Flags), typeof(global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncodingType), typeof(global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncryptionMode), typeof(global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.Feature) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.User), global::AcFunDanmu.Im.Basic.Types.User.Parser, new[]{ "AppId", "Uid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.UserInstance), global::AcFunDanmu.Im.Basic.Types.UserInstance.Parser, new[]{ "User", "InstanceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.UpstreamPayload), global::AcFunDanmu.Im.Basic.Types.UpstreamPayload.Parser, new[]{ "Command", "SeqId", "RetryCount", "PayloadData", "UserInstance", "ErrorCode", "SettingInfo", "RequestBasicInfo", "SubBiz", "FrontendInfo", "Kpn", "AnonymouseUser" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.DownstreamPayload), global::AcFunDanmu.Im.Basic.Types.DownstreamPayload.Parser, new[]{ "Command", "SeqId", "ErrorCode", "PayloadData", "ErrorMsg", "ErrorData", "SubBiz" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.PingRequest), global::AcFunDanmu.Im.Basic.Types.PingRequest.Parser, new[]{ "PingType", "PingRound" }, null, new[]{ typeof(global::AcFunDanmu.Im.Basic.Types.PingRequest.Types.PingType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.PingResponse), global::AcFunDanmu.Im.Basic.Types.PingResponse.Parser, new[]{ "ServerTimestamp", "ClientIp", "RedirectIp", "RedirectPort" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.RegisterRequest), global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Parser, new[]{ "AppInfo", "DeviceInfo", "EnvInfo", "PresenceStatus", "AppActiveStatus", "AppCustomStatus", "PushServiceToken", "InstanceId", "PushServiceTokenList", "KeepaliveIntervalSec", "ZtCommonInfo" }, null, new[]{ typeof(global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus), typeof(global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.RegisterResponse), global::AcFunDanmu.Im.Basic.Types.RegisterResponse.Parser, new[]{ "AccessPointsConfig", "SessKey", "InstanceId", "SdkOption", "AccessPointsCOnfigIpv6" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig), global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig.Parser, new[]{ "OptimalAps", "BackupAps", "AvailablePorts", "ForeceLastConnectedAp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.UnregisterRequest), global::AcFunDanmu.Im.Basic.Types.UnregisterRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.UnregisterResponse), global::AcFunDanmu.Im.Basic.Types.UnregisterResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.KeepAliveRequest), global::AcFunDanmu.Im.Basic.Types.KeepAliveRequest.Parser, new[]{ "PresenceStatus", "AppActiveStatus", "PushServiceToken", "PushServiceTokenList", "KeepaliveIntervalSec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.KeepAliveResponse), global::AcFunDanmu.Im.Basic.Types.KeepAliveResponse.Parser, new[]{ "AccessPointsConfig", "ServerMsec", "AccessPointsConfigIpv6" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.AccessPoint), global::AcFunDanmu.Im.Basic.Types.AccessPoint.Parser, new[]{ "AddressType", "Port", "IpV4", "IpV6", "Domain" }, null, new[]{ typeof(global::AcFunDanmu.Im.Basic.Types.AccessPoint.Types.AddressType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.TokenInfo), global::AcFunDanmu.Im.Basic.Types.TokenInfo.Parser, new[]{ "TokenType", "Token" }, null, new[]{ typeof(global::AcFunDanmu.Im.Basic.Types.TokenInfo.Types.TokenType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.PushServiceToken), global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Parser, new[]{ "PushType", "Token", "IsPassThrough" }, null, new[]{ typeof(global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Types.PushType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.SettingInfo), global::AcFunDanmu.Im.Basic.Types.SettingInfo.Parser, new[]{ "Locale", "Timezone" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.AppInfo), global::AcFunDanmu.Im.Basic.Types.AppInfo.Parser, new[]{ "AppName", "AppVersion", "AppChannel", "SdkVersion", "ExtensionInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.DeviceInfo), global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Parser, new[]{ "PlatformType", "OsVersion", "DeviceModel", "ImeiMd5", "DeviceId", "SoftDid", "KwaiDid", "Manufacturer", "DeviceName" }, null, new[]{ typeof(global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.EnvInfo), global::AcFunDanmu.Im.Basic.Types.EnvInfo.Parser, new[]{ "NetworkType", "AppName" }, null, new[]{ typeof(global::AcFunDanmu.Im.Basic.Types.EnvInfo.Types.NetworkType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.RequestBasicInfo), global::AcFunDanmu.Im.Basic.Types.RequestBasicInfo.Parser, new[]{ "ClientType", "DeviceId", "ClientIp", "AppVersion", "Channel", "AppInfo", "DeviceInfo", "EnvInfo", "ClientPort", "Location", "Kpf" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.SyncCookie), global::AcFunDanmu.Im.Basic.Types.SyncCookie.Parser, new[]{ "SyncOffset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.I18nCopyWriting), global::AcFunDanmu.Im.Basic.Types.I18nCopyWriting.Parser, new[]{ "FormatKey", "FormatParam" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.SdkOption), global::AcFunDanmu.Im.Basic.Types.SdkOption.Parser, new[]{ "ReportIntervalSeconds", "ReportSecurity", "Lz4CompressionThresholdBytes", "NetCheckServers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.ZtCommonInfo), global::AcFunDanmu.Im.Basic.Types.ZtCommonInfo.Parser, new[]{ "Kpn", "Kpf", "SubBiz", "Uid", "Did", "ClientIp", "AppVer", "Ver", "Lat", "Lon", "Mond", "Net", "Sys", "C", "Language", "CountryCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Basic.Types.FrontendInfo), global::AcFunDanmu.Im.Basic.Types.FrontendInfo.Parser, new[]{ "Ip", "Port" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message), global::AcFunDanmu.Im.Message.Parser, null, null, new[]{ typeof(global::AcFunDanmu.Im.Message.Types.KsUserRelationShip), typeof(global::AcFunDanmu.Im.Message.Types.AccountType), typeof(global::AcFunDanmu.Im.Message.Types.ChatTargetType), typeof(global::AcFunDanmu.Im.Message.Types.SystemUser) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.Message), global::AcFunDanmu.Im.Message.Types.Message.Parser, new[]{ "SeqId", "ClientSeqId", "TimestampMs", "FromUser", "TargetId", "ToUser", "Title", "ContentType", "Content", "BuckupTips", "Receivers", "NotContentUnread", "SessionPriority", "SessionCategoryId", "SessionAccountType", "NotAutoCreateSession", "UserRelationship", "StrTargetId", "ExcludeReceivers", "MarkDelte", "Reminder", "Extra", "ReceiptRequired" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.SendMessageResponse), global::AcFunDanmu.Im.Message.Types.SendMessageResponse.Parser, new[]{ "ClientSeqId", "MessageTimestamp", "SeqId", "SessionAccountType", "SessionPriority", "SessionCategoryId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.PullOldRequest), global::AcFunDanmu.Im.Message.Types.PullOldRequest.Parser, new[]{ "Target", "MinSeq", "MaxSeq", "Count", "TargetId", "StrTargetId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.PullOldResponse), global::AcFunDanmu.Im.Message.Types.PullOldResponse.Parser, new[]{ "Messages", "ServerTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.PullNewRequest), global::AcFunDanmu.Im.Message.Types.PullNewRequest.Parser, new[]{ "Target", "MinSeq", "Count", "TargetId", "StrTargetId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.PullNewResponse), global::AcFunDanmu.Im.Message.Types.PullNewResponse.Parser, new[]{ "Messages" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.SessionListRequest), global::AcFunDanmu.Im.Message.Types.SessionListRequest.Parser, new[]{ "SyncCookie", "CategoryId", "LocalDataStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.ChatSession), global::AcFunDanmu.Im.Message.Types.ChatSession.Parser, new[]{ "Target", "MaxSeqId", "ReadSeqId", "UnreadMsgCount", "LatestMessage", "ChatTargetType", "TargetId", "ActiveTime", "Priority", "CategoryId", "Cursor", "AccountType", "AggregateSession", "JumpCategoryId", "ExpireAt", "EffectiveFrom", "StrTargetId", "RemindBody", "TargetReadSeqId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.Reminder), global::AcFunDanmu.Im.Message.Types.Reminder.Parser, new[]{ "OriginText", "RemindBody" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.RemindBody), global::AcFunDanmu.Im.Message.Types.RemindBody.Parser, new[]{ "RemindType", "SeqId", "TargetId", "UserName", "StartIndex", "Length" }, null, new[]{ typeof(global::AcFunDanmu.Im.Message.Types.RemindBody.Types.RemindType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.ChatTarget), global::AcFunDanmu.Im.Message.Types.ChatTarget.Parser, new[]{ "TargetId", "TargetType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.SessionListResponse), global::AcFunDanmu.Im.Message.Types.SessionListResponse.Parser, new[]{ "SyncCookie", "Sessions", "NotFullFetch", "ServerTime", "ClearLocalData", "CategoryId", "ClientDataStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.SessionPageListRequest), global::AcFunDanmu.Im.Message.Types.SessionPageListRequest.Parser, new[]{ "Cursor", "Count", "CategoryId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.SessionPageListResponse), global::AcFunDanmu.Im.Message.Types.SessionPageListResponse.Parser, new[]{ "HasMore", "Sessions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.SessionRemoveRequest), global::AcFunDanmu.Im.Message.Types.SessionRemoveRequest.Parser, new[]{ "TargetId", "ChatTargetType", "CategoryId", "StrTargetId", "NotCleanAllMessages" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.SessionRemoveResponse), global::AcFunDanmu.Im.Message.Types.SessionRemoveResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.SessionCleanRequest), global::AcFunDanmu.Im.Message.Types.SessionCleanRequest.Parser, new[]{ "ChatTarget" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.SessionCleanResponse), global::AcFunDanmu.Im.Message.Types.SessionCleanResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.MessageDeleteRequest), global::AcFunDanmu.Im.Message.Types.MessageDeleteRequest.Parser, new[]{ "TargetId", "ChatTargetType", "SeqId", "StrTargetId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.MessageDeleteResponse), global::AcFunDanmu.Im.Message.Types.MessageDeleteResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.MessageCancelRequest), global::AcFunDanmu.Im.Message.Types.MessageCancelRequest.Parser, new[]{ "ChatTarget", "SeqId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.MessageCancelResponse), global::AcFunDanmu.Im.Message.Types.MessageCancelResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.MessageClearRequest), global::AcFunDanmu.Im.Message.Types.MessageClearRequest.Parser, new[]{ "ChatTarget" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.MessageClearResponse), global::AcFunDanmu.Im.Message.Types.MessageClearResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.ReadSeqInfo), global::AcFunDanmu.Im.Message.Types.ReadSeqInfo.Parser, new[]{ "ChatTarget", "ReadSeq" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.MessageReadSeqRequest), global::AcFunDanmu.Im.Message.Types.MessageReadSeqRequest.Parser, new[]{ "ChatTarget" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.MessageReadSeqResponse), global::AcFunDanmu.Im.Message.Types.MessageReadSeqResponse.Parser, new[]{ "ReadSeqInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.MessageReadPush), global::AcFunDanmu.Im.Message.Types.MessageReadPush.Parser, new[]{ "TargetId", "ReadSeq", "ChatTargetType", "StrTargetId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.AllUnreadCountRequest), global::AcFunDanmu.Im.Message.Types.AllUnreadCountRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.AllUnreadCountResponse), global::AcFunDanmu.Im.Message.Types.AllUnreadCountResponse.Parser, new[]{ "AllUnreadCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.MessageReadAllRequest), global::AcFunDanmu.Im.Message.Types.MessageReadAllRequest.Parser, new[]{ "SessionCategoryId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.MessageReadAllResponse), global::AcFunDanmu.Im.Message.Types.MessageReadAllResponse.Parser, new[]{ "ReadAllTimestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.SesionStickyOnTopRequest), global::AcFunDanmu.Im.Message.Types.SesionStickyOnTopRequest.Parser, new[]{ "ChatTarget", "StickyOnTop" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.SessionStickyOnTopResponse), global::AcFunDanmu.Im.Message.Types.SessionStickyOnTopResponse.Parser, new[]{ "Session" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.SessionRaw), global::AcFunDanmu.Im.Message.Types.SessionRaw.Parser, new[]{ "Raw" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.MessageRecallRequest), global::AcFunDanmu.Im.Message.Types.MessageRecallRequest.Parser, new[]{ "ChatTarget", "SeqId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.MessageRecallResponse), global::AcFunDanmu.Im.Message.Types.MessageRecallResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.MessageReceiptRequest), global::AcFunDanmu.Im.Message.Types.MessageReceiptRequest.Parser, new[]{ "MessageReceiptInfo", "ChatTarget" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.MessageReceiptResponse), global::AcFunDanmu.Im.Message.Types.MessageReceiptResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.MessageReceiptInfo), global::AcFunDanmu.Im.Message.Types.MessageReceiptInfo.Parser, new[]{ "ReadSeq" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.MessageReceiptCountGetRequest), global::AcFunDanmu.Im.Message.Types.MessageReceiptCountGetRequest.Parser, new[]{ "SeqId", "ChatTarget" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.MessageReceiptCountGetResponse), global::AcFunDanmu.Im.Message.Types.MessageReceiptCountGetResponse.Parser, new[]{ "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.MessageReceiptStatus), global::AcFunDanmu.Im.Message.Types.MessageReceiptStatus.Parser, new[]{ "ReadCount", "UnreadCount", "SeqId", "ServerTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.MessageReceiptDetailGetRequest), global::AcFunDanmu.Im.Message.Types.MessageReceiptDetailGetRequest.Parser, new[]{ "SeqId", "ChatTarget" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.MessageReceiptDetailGetResponse), global::AcFunDanmu.Im.Message.Types.MessageReceiptDetailGetResponse.Parser, new[]{ "ReadUser", "UnreadUser" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.MessageBatchSendRequest), global::AcFunDanmu.Im.Message.Types.MessageBatchSendRequest.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.MessageBatchSendResponse), global::AcFunDanmu.Im.Message.Types.MessageBatchSendResponse.Parser, new[]{ "Response" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.ImageAttachment), global::AcFunDanmu.Im.Message.Types.ImageAttachment.Parser, new[]{ "MimeType", "Url", "Width", "Height", "LengthInBytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.AudioAttachment), global::AcFunDanmu.Im.Message.Types.AudioAttachment.Parser, new[]{ "MimeType", "Url", "Width", "Height", "LengthInBytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.GifAttachment), global::AcFunDanmu.Im.Message.Types.GifAttachment.Parser, new[]{ "MimeType", "Url", "Width", "Height", "ThumbaUrl", "Text" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.Attachment), global::AcFunDanmu.Im.Message.Types.Attachment.Parser, new[]{ "ImageAttachment", "AudioAttachment" }, new[]{ "Attacmnent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.Attachments), global::AcFunDanmu.Im.Message.Types.Attachments.Parser, new[]{ "Attachments_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.PlaceHolderMessage), global::AcFunDanmu.Im.Message.Types.PlaceHolderMessage.Parser, new[]{ "MinSeq", "MaxSeq" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.ImageTextMessage), global::AcFunDanmu.Im.Message.Types.ImageTextMessage.Parser, new[]{ "Title", "Description", "ImageUrl", "ActionUrl", "Width", "AspectRatio" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.RichTextMessage), global::AcFunDanmu.Im.Message.Types.RichTextMessage.Parser, new[]{ "RichTextMessage_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.NoticeMessage), global::AcFunDanmu.Im.Message.Types.NoticeMessage.Parser, new[]{ "RichTextNotice", "Msg", "I18NCopyWriting" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.RichTextNoticeMessage), global::AcFunDanmu.Im.Message.Types.RichTextNoticeMessage.Parser, new[]{ "Items" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Message.Types.RichTextNoticeMessage.Types.RichTextItem), global::AcFunDanmu.Im.Message.Types.RichTextNoticeMessage.Types.RichTextItem.Parser, new[]{ "Color", "Start", "Len", "ClickAction", "Underline" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud), global::AcFunDanmu.Im.Cloud.Parser, null, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel), global::AcFunDanmu.Im.Cloud.Types.Channel.Parser, null, null, new[]{ typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserAction) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelSubscribeRequest), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelSubscribeRequest.Parser, new[]{ "ChannelId", "SetBarrier" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelSubscribeResponse), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelSubscribeResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelUnsubscribeRequest), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelUnsubscribeRequest.Parser, new[]{ "ChannelId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelSubscribersGetRequest), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelSubscribersGetRequest.Parser, new[]{ "ChannelId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelSubscribersGetResposne), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelSubscribersGetResposne.Parser, new[]{ "Subscriber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfo), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfo.Parser, new[]{ "ChannelId", "SubscriberCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserActionInfo), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserActionInfo.Parser, new[]{ "User", "Action", "Timestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfoGetRequest), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfoGetRequest.Parser, new[]{ "ChannelId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfoGetResponse), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfoGetResponse.Parser, new[]{ "BasicInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelHeartbeatRequest), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelHeartbeatRequest.Parser, new[]{ "ChannelId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelHeartbeatResponse), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelHeartbeatResponse.Parser, new[]{ "NotExistChannelId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfoNotify), global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfoNotify.Parser, new[]{ "UserActionInfo", "BasicInfo" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Config), global::AcFunDanmu.Im.Cloud.Types.Config.Parser, null, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Config.Types.ClientConfigGetRequest), global::AcFunDanmu.Im.Cloud.Types.Config.Types.ClientConfigGetRequest.Parser, new[]{ "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Config.Types.ClientConfigGetResponse), global::AcFunDanmu.Im.Cloud.Types.Config.Types.ClientConfigGetResponse.Parser, new[]{ "Version", "ClientConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Config.Types.NetworkQualityDetectionConfig), global::AcFunDanmu.Im.Cloud.Types.Config.Types.NetworkQualityDetectionConfig.Parser, new[]{ "DetectionDomain", "DetectionInvervalSec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Config.Types.ClientConfig), global::AcFunDanmu.Im.Cloud.Types.Config.Types.ClientConfig.Parser, new[]{ "FetchUserStatusInterval", "ChannelUserHeartbeatInterval", "NetworkQualityDetectionConfig", "InputtingTipDisplayInterval", "BatchSendMessageMaxCount", "ResourceUploadingDomain" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Profile), global::AcFunDanmu.Im.Cloud.Types.Profile.Parser, null, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus), global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Parser, new[]{ "User", "LastOfflineTime", "Status" }, null, new[]{ typeof(global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Types.Status) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Profile.Types.ProfileBatchOnlineTimeRequest), global::AcFunDanmu.Im.Cloud.Types.Profile.Types.ProfileBatchOnlineTimeRequest.Parser, new[]{ "User" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Profile.Types.ProfileBatchOnlineTimeResponse), global::AcFunDanmu.Im.Cloud.Types.Profile.Types.ProfileBatchOnlineTimeResponse.Parser, new[]{ "UserOnlineStatus" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Data), global::AcFunDanmu.Im.Cloud.Types.Data.Parser, null, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update), global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Parser, null, null, new[]{ typeof(global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.KsImDataUpdateType) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.KsImDataUpdatePushPayload), global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.KsImDataUpdatePushPayload.Parser, new[]{ "Type", "Content" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.GroupInfoDataUpdate), global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.GroupInfoDataUpdate.Parser, new[]{ "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.GroupMemberListUpdate), global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.GroupMemberListUpdate.Parser, new[]{ "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.YouBeKicked), global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.YouBeKicked.Parser, new[]{ "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.MessageRead), global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.MessageRead.Parser, new[]{ "StrTargetId", "ReadSeq", "ChatTargetType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.MessageReceipt), global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.MessageReceipt.Parser, new[]{ "ChatTarget", "ReceiptStatus" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message), global::AcFunDanmu.Im.Cloud.Types.Message.Parser, null, null, new[]{ typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcMessageType), typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.NoticeMetaType), typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType), typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus), typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.InvitePermissionType), typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType), typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupStatus), typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupType), typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForbiddenState), typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.PassThroughType) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcRecalledMessage), global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcRecalledMessage.Parser, new[]{ "OriginMsg", "NoticeMsg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcReplaceMessage), global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcReplaceMessage.Parser, new[]{ "ReplaceMsg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.Text), global::AcFunDanmu.Im.Cloud.Types.Message.Types.Text.Parser, new[]{ "Text_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.Image), global::AcFunDanmu.Im.Cloud.Types.Message.Types.Image.Parser, new[]{ "Uri", "Width", "Height" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.Audio), global::AcFunDanmu.Im.Cloud.Types.Message.Types.Audio.Parser, new[]{ "Uri", "Duration", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.Video), global::AcFunDanmu.Im.Cloud.Types.Message.Types.Video.Parser, new[]{ "Uri", "Duration", "Width", "Height", "CoverUri", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.Custon), global::AcFunDanmu.Im.Cloud.Types.Message.Types.Custon.Parser, new[]{ "Payload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.PicUrl), global::AcFunDanmu.Im.Cloud.Types.Message.Types.PicUrl.Parser, new[]{ "Cdn", "Url", "UrlPattern", "Ip" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon), global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Parser, new[]{ "Id", "PackageId", "Name", "Type", "BigUrl", "Width", "Height", "EmoticonCOde" }, null, new[]{ typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Type) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Code), global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Code.Parser, new[]{ "Language", "Code_" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.File), global::AcFunDanmu.Im.Cloud.Types.Message.Types.File.Parser, new[]{ "Uri", "Name", "Ext", "Extra" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.Reference), global::AcFunDanmu.Im.Cloud.Types.Message.Types.Reference.Parser, new[]{ "OriginMsg", "ReferenceMsg" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.Reference.Types.ReferenceMessage), global::AcFunDanmu.Im.Cloud.Types.Message.Types.Reference.Types.ReferenceMessage.Parser, new[]{ "ContentType", "Content" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForwardMessageContent), global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForwardMessageContent.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.NoticePlaceholderMeta), global::AcFunDanmu.Im.Cloud.Types.Message.Types.NoticePlaceholderMeta.Parser, new[]{ "TargetId", "StartIndex", "Length" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcNoticeMessage), global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcNoticeMessage.Parser, new[]{ "Text", "NoticePlaceholderMeta", "NoticeMetaType", "NoticeMetaInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.LinkedProfileMetaInfo), global::AcFunDanmu.Im.Cloud.Types.Message.Types.LinkedProfileMetaInfo.Parser, new[]{ "UserId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.ConfirmInviteIntoGroupNoticeMetaInfo), global::AcFunDanmu.Im.Cloud.Types.Message.Types.ConfirmInviteIntoGroupNoticeMetaInfo.Parser, new[]{ "RequestId", "GroupId", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.ConfirmJoinIntoGroupNoticeMetaInfo), global::AcFunDanmu.Im.Cloud.Types.Message.Types.ConfirmJoinIntoGroupNoticeMetaInfo.Parser, new[]{ "RequestId", "GroupId", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupCreateRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupCreateRequest.Parser, new[]{ "Members" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupCreateReponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupCreateReponse.Parser, new[]{ "GroupId", "GroupInfo", "Members" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupDeleteRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupDeleteRequest.Parser, new[]{ "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupDeleteResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupDeleteResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInviteRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInviteRequest.Parser, new[]{ "GroupId", "Members", "DescContent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse.Parser, new[]{ "GroupId", "InviteStatus" }, null, new[]{ typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse.Types.InviteStatus) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequest.Parser, new[]{ "GroupId", "Inviter", "DescContent", "FindType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse.Parser, new[]{ "JoinStatus" }, null, new[]{ typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse.Types.JoinStatus) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest.Parser, new[]{ "ReqId", "GroupId", "GroupJoinAckType" }, null, new[]{ typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest.Types.GroupJoinAckType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestGetRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestGetRequest.Parser, new[]{ "ReqSeq", "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestGetResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestGetResponse.Parser, new[]{ "GroupId", "Inviter", "Invitees", "FindWay", "DescContent", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestCancelRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestCancelRequest.Parser, new[]{ "ReqSeq", "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestCancelResposne), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestCancelResposne.Parser, new[]{ "GroupId", "Inviter", "Invitees", "FindWay", "DescContent", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupQuitRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupQuitRequest.Parser, new[]{ "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupQuitResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupQuitResponse.Parser, new[]{ "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupKickRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupKickRequest.Parser, new[]{ "GroupId", "Target" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupKickResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupKickResponse.Parser, new[]{ "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingRequest.Parser, new[]{ "GroupId", "Rename", "Desc", "JoinNeedPermission", "InvitePermission" }, new[]{ "GroupSetting" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingRename), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingRename.Parser, new[]{ "GroupName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingDesc), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingDesc.Parser, new[]{ "Desc" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingJoinNeedPermission), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingJoinNeedPermission.Parser, new[]{ "JoinNeedPermission" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingInvitePermission), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingInvitePermission.Parser, new[]{ "InvitePermissionType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberSettingRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberSettingRequest.Parser, new[]{ "GroupId", "SetNickname", "SetAntiDisturbing" }, new[]{ "UserSetting" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserNickname), global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserNickname.Parser, new[]{ "Nickname" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserAntiDisturbing), global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserAntiDisturbing.Parser, new[]{ "AntiDisturbing" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberSettingResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberSettingResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberListGetRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberListGetRequest.Parser, new[]{ "GroupId", "SyncCookie" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberListGetResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberListGetResponse.Parser, new[]{ "Members", "SyncCookie" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberGetRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberGetRequest.Parser, new[]{ "GroupId", "User" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberGetResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberGetResponse.Parser, new[]{ "Member" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupListRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupListRequest.Parser, new[]{ "SyncCookie" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupListResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupListResponse.Parser, new[]{ "UserGroupInfo", "SyncCookie" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupRecord), global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupRecord.Parser, new[]{ "GroupId", "UpdateTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupGetRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupGetRequest.Parser, new[]{ "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupGetResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupGetResponse.Parser, new[]{ "UserGroupInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo), global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo.Parser, new[]{ "GroupInfo", "GroupMember" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Parser, new[]{ "User", "Nickname", "AntiDisturbing", "Status", "InviterId", "JoinTime", "CreateTime", "UpdateTime", "Role", "FindType" }, null, new[]{ typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberStatus), typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberRole) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInfo), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInfo.Parser, new[]{ "BasicInfo", "GroupMemberBriefInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupBasicInfo), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupBasicInfo.Parser, new[]{ "GroupId", "GroupName", "Admin", "GroupStatus", "Description", "JoinNeedPermission", "CreateTime", "UpdateTime", "GroupType", "ForbiddenState", "InvitePermissionType", "BizDefCode", "DefalutGroupName", "Extra" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberBriefInfo), global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberBriefInfo.Parser, new[]{ "MemberCount", "TopMembers", "LastUpdateTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcPassThroughRequest), global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcPassThroughRequest.Parser, new[]{ "ChatTarget", "Content", "ContentType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcPassThroughResponse), global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcPassThroughResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcPassThroughPush), global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcPassThroughPush.Parser, new[]{ "ChatTarget", "FromUser", "Content", "ContentType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.Im.Cloud.Types.Message.Types.InputtingContent), global::AcFunDanmu.Im.Cloud.Types.Message.Types.InputtingContent.Parser, new[]{ "DisplayInterval" }, null, null, null, null)})})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Basic : pb::IMessage<Basic> {
    private static readonly pb::MessageParser<Basic> _parser = new pb::MessageParser<Basic>(() => new Basic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Basic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AcFunDanmu.Im.ImReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Basic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Basic(Basic other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Basic Clone() {
      return new Basic(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Basic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Basic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Basic other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Basic message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum SharePlatform {
        [pbr::OriginalName("kSharePlatformInvalid")] KSharePlatformInvalid = 0,
        [pbr::OriginalName("kSharePlatformWechat")] KSharePlatformWechat = 1,
        [pbr::OriginalName("kSharePlatformWechatMoments")] KSharePlatformWechatMoments = 2,
        [pbr::OriginalName("kSharePlatformQQ")] KSharePlatformQq = 3,
        [pbr::OriginalName("kSharePlatformQzone")] KSharePlatformQzone = 4,
        [pbr::OriginalName("kSharePlatformWeibo")] KSharePlatformWeibo = 5,
        [pbr::OriginalName("kSharePlatformKuaishou")] KSharePlatformKuaishou = 6,
        [pbr::OriginalName("kSharePlatformFacebook")] KSharePlatformFacebook = 7,
        [pbr::OriginalName("kSharePlatformTwitter")] KSharePlatformTwitter = 8,
        [pbr::OriginalName("kSharePlatformGoogle")] KSharePlatformGoogle = 9,
        [pbr::OriginalName("kSharePlatformKakao")] KSharePlatformKakao = 10,
        [pbr::OriginalName("kSharePlatformZalo")] KSharePlatformZalo = 11,
      }

      public sealed partial class PacketHeader : pb::IMessage<PacketHeader> {
        private static readonly pb::MessageParser<PacketHeader> _parser = new pb::MessageParser<PacketHeader>(() => new PacketHeader());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PacketHeader> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PacketHeader() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PacketHeader(PacketHeader other) : this() {
          appId_ = other.appId_;
          uid_ = other.uid_;
          instanceId_ = other.instanceId_;
          flags_ = other.flags_;
          encodingType_ = other.encodingType_;
          decodedPayloadLen_ = other.decodedPayloadLen_;
          encryptionMode_ = other.encryptionMode_;
          tokenInfo_ = other.tokenInfo_ != null ? other.tokenInfo_.Clone() : null;
          seqId_ = other.seqId_;
          features_ = other.features_.Clone();
          kpn_ = other.kpn_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PacketHeader Clone() {
          return new PacketHeader(this);
        }

        /// <summary>Field number for the "appId" field.</summary>
        public const int AppIdFieldNumber = 1;
        private int appId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int AppId {
          get { return appId_; }
          set {
            appId_ = value;
          }
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 2;
        private long uid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Uid {
          get { return uid_; }
          set {
            uid_ = value;
          }
        }

        /// <summary>Field number for the "instanceId" field.</summary>
        public const int InstanceIdFieldNumber = 3;
        private long instanceId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long InstanceId {
          get { return instanceId_; }
          set {
            instanceId_ = value;
          }
        }

        /// <summary>Field number for the "flags" field.</summary>
        public const int FlagsFieldNumber = 5;
        private uint flags_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Flags {
          get { return flags_; }
          set {
            flags_ = value;
          }
        }

        /// <summary>Field number for the "encodingType" field.</summary>
        public const int EncodingTypeFieldNumber = 6;
        private global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncodingType encodingType_ = global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncodingType.KEncodingNone;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncodingType EncodingType {
          get { return encodingType_; }
          set {
            encodingType_ = value;
          }
        }

        /// <summary>Field number for the "decodedPayloadLen" field.</summary>
        public const int DecodedPayloadLenFieldNumber = 7;
        private int decodedPayloadLen_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int DecodedPayloadLen {
          get { return decodedPayloadLen_; }
          set {
            decodedPayloadLen_ = value;
          }
        }

        /// <summary>Field number for the "encryptionMode" field.</summary>
        public const int EncryptionModeFieldNumber = 8;
        private global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncryptionMode encryptionMode_ = global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncryptionMode.KEncryptionNone;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncryptionMode EncryptionMode {
          get { return encryptionMode_; }
          set {
            encryptionMode_ = value;
          }
        }

        /// <summary>Field number for the "tokenInfo" field.</summary>
        public const int TokenInfoFieldNumber = 9;
        private global::AcFunDanmu.Im.Basic.Types.TokenInfo tokenInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.TokenInfo TokenInfo {
          get { return tokenInfo_; }
          set {
            tokenInfo_ = value;
          }
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 10;
        private long seqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long SeqId {
          get { return seqId_; }
          set {
            seqId_ = value;
          }
        }

        /// <summary>Field number for the "features" field.</summary>
        public const int FeaturesFieldNumber = 11;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.Feature> _repeated_features_codec
            = pb::FieldCodec.ForEnum(90, x => (int) x, x => (global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.Feature) x);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.Feature> features_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.Feature>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.Feature> Features {
          get { return features_; }
        }

        /// <summary>Field number for the "kpn" field.</summary>
        public const int KpnFieldNumber = 12;
        private string kpn_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Kpn {
          get { return kpn_; }
          set {
            kpn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PacketHeader);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PacketHeader other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AppId != other.AppId) return false;
          if (Uid != other.Uid) return false;
          if (InstanceId != other.InstanceId) return false;
          if (Flags != other.Flags) return false;
          if (EncodingType != other.EncodingType) return false;
          if (DecodedPayloadLen != other.DecodedPayloadLen) return false;
          if (EncryptionMode != other.EncryptionMode) return false;
          if (!object.Equals(TokenInfo, other.TokenInfo)) return false;
          if (SeqId != other.SeqId) return false;
          if(!features_.Equals(other.features_)) return false;
          if (Kpn != other.Kpn) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (AppId != 0) hash ^= AppId.GetHashCode();
          if (Uid != 0L) hash ^= Uid.GetHashCode();
          if (InstanceId != 0L) hash ^= InstanceId.GetHashCode();
          if (Flags != 0) hash ^= Flags.GetHashCode();
          if (EncodingType != global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncodingType.KEncodingNone) hash ^= EncodingType.GetHashCode();
          if (DecodedPayloadLen != 0) hash ^= DecodedPayloadLen.GetHashCode();
          if (EncryptionMode != global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncryptionMode.KEncryptionNone) hash ^= EncryptionMode.GetHashCode();
          if (tokenInfo_ != null) hash ^= TokenInfo.GetHashCode();
          if (SeqId != 0L) hash ^= SeqId.GetHashCode();
          hash ^= features_.GetHashCode();
          if (Kpn.Length != 0) hash ^= Kpn.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (AppId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(AppId);
          }
          if (Uid != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Uid);
          }
          if (InstanceId != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(InstanceId);
          }
          if (Flags != 0) {
            output.WriteRawTag(40);
            output.WriteUInt32(Flags);
          }
          if (EncodingType != global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncodingType.KEncodingNone) {
            output.WriteRawTag(48);
            output.WriteEnum((int) EncodingType);
          }
          if (DecodedPayloadLen != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(DecodedPayloadLen);
          }
          if (EncryptionMode != global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncryptionMode.KEncryptionNone) {
            output.WriteRawTag(64);
            output.WriteEnum((int) EncryptionMode);
          }
          if (tokenInfo_ != null) {
            output.WriteRawTag(74);
            output.WriteMessage(TokenInfo);
          }
          if (SeqId != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(SeqId);
          }
          features_.WriteTo(output, _repeated_features_codec);
          if (Kpn.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(Kpn);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (AppId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(AppId);
          }
          if (Uid != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
          }
          if (InstanceId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(InstanceId);
          }
          if (Flags != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
          }
          if (EncodingType != global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncodingType.KEncodingNone) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EncodingType);
          }
          if (DecodedPayloadLen != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(DecodedPayloadLen);
          }
          if (EncryptionMode != global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncryptionMode.KEncryptionNone) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EncryptionMode);
          }
          if (tokenInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenInfo);
          }
          if (SeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeqId);
          }
          size += features_.CalculateSize(_repeated_features_codec);
          if (Kpn.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Kpn);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PacketHeader other) {
          if (other == null) {
            return;
          }
          if (other.AppId != 0) {
            AppId = other.AppId;
          }
          if (other.Uid != 0L) {
            Uid = other.Uid;
          }
          if (other.InstanceId != 0L) {
            InstanceId = other.InstanceId;
          }
          if (other.Flags != 0) {
            Flags = other.Flags;
          }
          if (other.EncodingType != global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncodingType.KEncodingNone) {
            EncodingType = other.EncodingType;
          }
          if (other.DecodedPayloadLen != 0) {
            DecodedPayloadLen = other.DecodedPayloadLen;
          }
          if (other.EncryptionMode != global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncryptionMode.KEncryptionNone) {
            EncryptionMode = other.EncryptionMode;
          }
          if (other.tokenInfo_ != null) {
            if (tokenInfo_ == null) {
              TokenInfo = new global::AcFunDanmu.Im.Basic.Types.TokenInfo();
            }
            TokenInfo.MergeFrom(other.TokenInfo);
          }
          if (other.SeqId != 0L) {
            SeqId = other.SeqId;
          }
          features_.Add(other.features_);
          if (other.Kpn.Length != 0) {
            Kpn = other.Kpn;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                AppId = input.ReadInt32();
                break;
              }
              case 16: {
                Uid = input.ReadInt64();
                break;
              }
              case 24: {
                InstanceId = input.ReadInt64();
                break;
              }
              case 40: {
                Flags = input.ReadUInt32();
                break;
              }
              case 48: {
                EncodingType = (global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncodingType) input.ReadEnum();
                break;
              }
              case 56: {
                DecodedPayloadLen = input.ReadInt32();
                break;
              }
              case 64: {
                EncryptionMode = (global::AcFunDanmu.Im.Basic.Types.PacketHeader.Types.EncryptionMode) input.ReadEnum();
                break;
              }
              case 74: {
                if (tokenInfo_ == null) {
                  TokenInfo = new global::AcFunDanmu.Im.Basic.Types.TokenInfo();
                }
                input.ReadMessage(TokenInfo);
                break;
              }
              case 80: {
                SeqId = input.ReadInt64();
                break;
              }
              case 90:
              case 88: {
                features_.AddEntriesFrom(input, _repeated_features_codec);
                break;
              }
              case 98: {
                Kpn = input.ReadString();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the PacketHeader message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum Flags {
            [pbr::OriginalName("kDirUpstream")] KDirUpstream = 0,
            [pbr::OriginalName("kDirDownstream")] KDirDownstream = 1,
            [pbr::OriginalName("kDirMask", PreferredAlias = false)] KDirMask = 1,
          }

          public enum EncodingType {
            [pbr::OriginalName("kEncodingNone")] KEncodingNone = 0,
            [pbr::OriginalName("kEncodingLz4")] KEncodingLz4 = 1,
          }

          public enum EncryptionMode {
            [pbr::OriginalName("kEncryptionNone")] KEncryptionNone = 0,
            [pbr::OriginalName("kEncryptionServiceToken")] KEncryptionServiceToken = 1,
            [pbr::OriginalName("kEncryptionSessionKey")] KEncryptionSessionKey = 2,
          }

          public enum Feature {
            [pbr::OriginalName("kReserve")] KReserve = 0,
            [pbr::OriginalName("kCompressLz4")] KCompressLz4 = 1,
          }

        }
        #endregion

      }

      public sealed partial class User : pb::IMessage<User> {
        private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<User> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public User() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public User(User other) : this() {
          appId_ = other.appId_;
          uid_ = other.uid_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public User Clone() {
          return new User(this);
        }

        /// <summary>Field number for the "appId" field.</summary>
        public const int AppIdFieldNumber = 1;
        private int appId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int AppId {
          get { return appId_; }
          set {
            appId_ = value;
          }
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 2;
        private long uid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Uid {
          get { return uid_; }
          set {
            uid_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as User);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(User other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AppId != other.AppId) return false;
          if (Uid != other.Uid) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (AppId != 0) hash ^= AppId.GetHashCode();
          if (Uid != 0L) hash ^= Uid.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (AppId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(AppId);
          }
          if (Uid != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Uid);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (AppId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(AppId);
          }
          if (Uid != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(User other) {
          if (other == null) {
            return;
          }
          if (other.AppId != 0) {
            AppId = other.AppId;
          }
          if (other.Uid != 0L) {
            Uid = other.Uid;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                AppId = input.ReadInt32();
                break;
              }
              case 16: {
                Uid = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

      public sealed partial class UserInstance : pb::IMessage<UserInstance> {
        private static readonly pb::MessageParser<UserInstance> _parser = new pb::MessageParser<UserInstance>(() => new UserInstance());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UserInstance> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UserInstance() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UserInstance(UserInstance other) : this() {
          user_ = other.user_ != null ? other.user_.Clone() : null;
          instanceId_ = other.instanceId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UserInstance Clone() {
          return new UserInstance(this);
        }

        /// <summary>Field number for the "user" field.</summary>
        public const int UserFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.User user_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.User User {
          get { return user_; }
          set {
            user_ = value;
          }
        }

        /// <summary>Field number for the "instanceId" field.</summary>
        public const int InstanceIdFieldNumber = 2;
        private long instanceId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long InstanceId {
          get { return instanceId_; }
          set {
            instanceId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UserInstance);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UserInstance other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(User, other.User)) return false;
          if (InstanceId != other.InstanceId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (user_ != null) hash ^= User.GetHashCode();
          if (InstanceId != 0L) hash ^= InstanceId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (user_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(User);
          }
          if (InstanceId != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(InstanceId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (user_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
          }
          if (InstanceId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(InstanceId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UserInstance other) {
          if (other == null) {
            return;
          }
          if (other.user_ != null) {
            if (user_ == null) {
              User = new global::AcFunDanmu.Im.Basic.Types.User();
            }
            User.MergeFrom(other.User);
          }
          if (other.InstanceId != 0L) {
            InstanceId = other.InstanceId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (user_ == null) {
                  User = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                input.ReadMessage(User);
                break;
              }
              case 16: {
                InstanceId = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

      public sealed partial class UpstreamPayload : pb::IMessage<UpstreamPayload> {
        private static readonly pb::MessageParser<UpstreamPayload> _parser = new pb::MessageParser<UpstreamPayload>(() => new UpstreamPayload());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UpstreamPayload> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpstreamPayload() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpstreamPayload(UpstreamPayload other) : this() {
          command_ = other.command_;
          seqId_ = other.seqId_;
          retryCount_ = other.retryCount_;
          payloadData_ = other.payloadData_;
          userInstance_ = other.userInstance_ != null ? other.userInstance_.Clone() : null;
          errorCode_ = other.errorCode_;
          settingInfo_ = other.settingInfo_ != null ? other.settingInfo_.Clone() : null;
          requestBasicInfo_ = other.requestBasicInfo_ != null ? other.requestBasicInfo_.Clone() : null;
          subBiz_ = other.subBiz_;
          frontendInfo_ = other.frontendInfo_ != null ? other.frontendInfo_.Clone() : null;
          kpn_ = other.kpn_;
          anonymouseUser_ = other.anonymouseUser_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpstreamPayload Clone() {
          return new UpstreamPayload(this);
        }

        /// <summary>Field number for the "command" field.</summary>
        public const int CommandFieldNumber = 1;
        private string command_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Command {
          get { return command_; }
          set {
            command_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 2;
        private long seqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long SeqId {
          get { return seqId_; }
          set {
            seqId_ = value;
          }
        }

        /// <summary>Field number for the "retryCount" field.</summary>
        public const int RetryCountFieldNumber = 3;
        private uint retryCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint RetryCount {
          get { return retryCount_; }
          set {
            retryCount_ = value;
          }
        }

        /// <summary>Field number for the "payloadData" field.</summary>
        public const int PayloadDataFieldNumber = 4;
        private pb::ByteString payloadData_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString PayloadData {
          get { return payloadData_; }
          set {
            payloadData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "userInstance" field.</summary>
        public const int UserInstanceFieldNumber = 5;
        private global::AcFunDanmu.Im.Basic.Types.UserInstance userInstance_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.UserInstance UserInstance {
          get { return userInstance_; }
          set {
            userInstance_ = value;
          }
        }

        /// <summary>Field number for the "errorCode" field.</summary>
        public const int ErrorCodeFieldNumber = 6;
        private int errorCode_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ErrorCode {
          get { return errorCode_; }
          set {
            errorCode_ = value;
          }
        }

        /// <summary>Field number for the "settingInfo" field.</summary>
        public const int SettingInfoFieldNumber = 7;
        private global::AcFunDanmu.Im.Basic.Types.SettingInfo settingInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.SettingInfo SettingInfo {
          get { return settingInfo_; }
          set {
            settingInfo_ = value;
          }
        }

        /// <summary>Field number for the "requestBasicInfo" field.</summary>
        public const int RequestBasicInfoFieldNumber = 8;
        private global::AcFunDanmu.Im.Basic.Types.RequestBasicInfo requestBasicInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.RequestBasicInfo RequestBasicInfo {
          get { return requestBasicInfo_; }
          set {
            requestBasicInfo_ = value;
          }
        }

        /// <summary>Field number for the "subBiz" field.</summary>
        public const int SubBizFieldNumber = 9;
        private string subBiz_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SubBiz {
          get { return subBiz_; }
          set {
            subBiz_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "frontendInfo" field.</summary>
        public const int FrontendInfoFieldNumber = 10;
        private global::AcFunDanmu.Im.Basic.Types.FrontendInfo frontendInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.FrontendInfo FrontendInfo {
          get { return frontendInfo_; }
          set {
            frontendInfo_ = value;
          }
        }

        /// <summary>Field number for the "kpn" field.</summary>
        public const int KpnFieldNumber = 11;
        private string kpn_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Kpn {
          get { return kpn_; }
          set {
            kpn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "anonymouseUser" field.</summary>
        public const int AnonymouseUserFieldNumber = 12;
        private bool anonymouseUser_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool AnonymouseUser {
          get { return anonymouseUser_; }
          set {
            anonymouseUser_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UpstreamPayload);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UpstreamPayload other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Command != other.Command) return false;
          if (SeqId != other.SeqId) return false;
          if (RetryCount != other.RetryCount) return false;
          if (PayloadData != other.PayloadData) return false;
          if (!object.Equals(UserInstance, other.UserInstance)) return false;
          if (ErrorCode != other.ErrorCode) return false;
          if (!object.Equals(SettingInfo, other.SettingInfo)) return false;
          if (!object.Equals(RequestBasicInfo, other.RequestBasicInfo)) return false;
          if (SubBiz != other.SubBiz) return false;
          if (!object.Equals(FrontendInfo, other.FrontendInfo)) return false;
          if (Kpn != other.Kpn) return false;
          if (AnonymouseUser != other.AnonymouseUser) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Command.Length != 0) hash ^= Command.GetHashCode();
          if (SeqId != 0L) hash ^= SeqId.GetHashCode();
          if (RetryCount != 0) hash ^= RetryCount.GetHashCode();
          if (PayloadData.Length != 0) hash ^= PayloadData.GetHashCode();
          if (userInstance_ != null) hash ^= UserInstance.GetHashCode();
          if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
          if (settingInfo_ != null) hash ^= SettingInfo.GetHashCode();
          if (requestBasicInfo_ != null) hash ^= RequestBasicInfo.GetHashCode();
          if (SubBiz.Length != 0) hash ^= SubBiz.GetHashCode();
          if (frontendInfo_ != null) hash ^= FrontendInfo.GetHashCode();
          if (Kpn.Length != 0) hash ^= Kpn.GetHashCode();
          if (AnonymouseUser != false) hash ^= AnonymouseUser.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Command.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Command);
          }
          if (SeqId != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(SeqId);
          }
          if (RetryCount != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(RetryCount);
          }
          if (PayloadData.Length != 0) {
            output.WriteRawTag(34);
            output.WriteBytes(PayloadData);
          }
          if (userInstance_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(UserInstance);
          }
          if (ErrorCode != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(ErrorCode);
          }
          if (settingInfo_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(SettingInfo);
          }
          if (requestBasicInfo_ != null) {
            output.WriteRawTag(66);
            output.WriteMessage(RequestBasicInfo);
          }
          if (SubBiz.Length != 0) {
            output.WriteRawTag(74);
            output.WriteString(SubBiz);
          }
          if (frontendInfo_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(FrontendInfo);
          }
          if (Kpn.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(Kpn);
          }
          if (AnonymouseUser != false) {
            output.WriteRawTag(96);
            output.WriteBool(AnonymouseUser);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Command.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Command);
          }
          if (SeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeqId);
          }
          if (RetryCount != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RetryCount);
          }
          if (PayloadData.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(PayloadData);
          }
          if (userInstance_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserInstance);
          }
          if (ErrorCode != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
          }
          if (settingInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SettingInfo);
          }
          if (requestBasicInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestBasicInfo);
          }
          if (SubBiz.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SubBiz);
          }
          if (frontendInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FrontendInfo);
          }
          if (Kpn.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Kpn);
          }
          if (AnonymouseUser != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UpstreamPayload other) {
          if (other == null) {
            return;
          }
          if (other.Command.Length != 0) {
            Command = other.Command;
          }
          if (other.SeqId != 0L) {
            SeqId = other.SeqId;
          }
          if (other.RetryCount != 0) {
            RetryCount = other.RetryCount;
          }
          if (other.PayloadData.Length != 0) {
            PayloadData = other.PayloadData;
          }
          if (other.userInstance_ != null) {
            if (userInstance_ == null) {
              UserInstance = new global::AcFunDanmu.Im.Basic.Types.UserInstance();
            }
            UserInstance.MergeFrom(other.UserInstance);
          }
          if (other.ErrorCode != 0) {
            ErrorCode = other.ErrorCode;
          }
          if (other.settingInfo_ != null) {
            if (settingInfo_ == null) {
              SettingInfo = new global::AcFunDanmu.Im.Basic.Types.SettingInfo();
            }
            SettingInfo.MergeFrom(other.SettingInfo);
          }
          if (other.requestBasicInfo_ != null) {
            if (requestBasicInfo_ == null) {
              RequestBasicInfo = new global::AcFunDanmu.Im.Basic.Types.RequestBasicInfo();
            }
            RequestBasicInfo.MergeFrom(other.RequestBasicInfo);
          }
          if (other.SubBiz.Length != 0) {
            SubBiz = other.SubBiz;
          }
          if (other.frontendInfo_ != null) {
            if (frontendInfo_ == null) {
              FrontendInfo = new global::AcFunDanmu.Im.Basic.Types.FrontendInfo();
            }
            FrontendInfo.MergeFrom(other.FrontendInfo);
          }
          if (other.Kpn.Length != 0) {
            Kpn = other.Kpn;
          }
          if (other.AnonymouseUser != false) {
            AnonymouseUser = other.AnonymouseUser;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Command = input.ReadString();
                break;
              }
              case 16: {
                SeqId = input.ReadInt64();
                break;
              }
              case 24: {
                RetryCount = input.ReadUInt32();
                break;
              }
              case 34: {
                PayloadData = input.ReadBytes();
                break;
              }
              case 42: {
                if (userInstance_ == null) {
                  UserInstance = new global::AcFunDanmu.Im.Basic.Types.UserInstance();
                }
                input.ReadMessage(UserInstance);
                break;
              }
              case 48: {
                ErrorCode = input.ReadInt32();
                break;
              }
              case 58: {
                if (settingInfo_ == null) {
                  SettingInfo = new global::AcFunDanmu.Im.Basic.Types.SettingInfo();
                }
                input.ReadMessage(SettingInfo);
                break;
              }
              case 66: {
                if (requestBasicInfo_ == null) {
                  RequestBasicInfo = new global::AcFunDanmu.Im.Basic.Types.RequestBasicInfo();
                }
                input.ReadMessage(RequestBasicInfo);
                break;
              }
              case 74: {
                SubBiz = input.ReadString();
                break;
              }
              case 82: {
                if (frontendInfo_ == null) {
                  FrontendInfo = new global::AcFunDanmu.Im.Basic.Types.FrontendInfo();
                }
                input.ReadMessage(FrontendInfo);
                break;
              }
              case 90: {
                Kpn = input.ReadString();
                break;
              }
              case 96: {
                AnonymouseUser = input.ReadBool();
                break;
              }
            }
          }
        }

      }

      public sealed partial class DownstreamPayload : pb::IMessage<DownstreamPayload> {
        private static readonly pb::MessageParser<DownstreamPayload> _parser = new pb::MessageParser<DownstreamPayload>(() => new DownstreamPayload());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DownstreamPayload> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DownstreamPayload() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DownstreamPayload(DownstreamPayload other) : this() {
          command_ = other.command_;
          seqId_ = other.seqId_;
          errorCode_ = other.errorCode_;
          payloadData_ = other.payloadData_;
          errorMsg_ = other.errorMsg_;
          errorData_ = other.errorData_;
          subBiz_ = other.subBiz_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DownstreamPayload Clone() {
          return new DownstreamPayload(this);
        }

        /// <summary>Field number for the "command" field.</summary>
        public const int CommandFieldNumber = 1;
        private string command_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Command {
          get { return command_; }
          set {
            command_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 2;
        private long seqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long SeqId {
          get { return seqId_; }
          set {
            seqId_ = value;
          }
        }

        /// <summary>Field number for the "errorCode" field.</summary>
        public const int ErrorCodeFieldNumber = 3;
        private int errorCode_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ErrorCode {
          get { return errorCode_; }
          set {
            errorCode_ = value;
          }
        }

        /// <summary>Field number for the "payloadData" field.</summary>
        public const int PayloadDataFieldNumber = 4;
        private pb::ByteString payloadData_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString PayloadData {
          get { return payloadData_; }
          set {
            payloadData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "errorMsg" field.</summary>
        public const int ErrorMsgFieldNumber = 5;
        private string errorMsg_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ErrorMsg {
          get { return errorMsg_; }
          set {
            errorMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "errorData" field.</summary>
        public const int ErrorDataFieldNumber = 6;
        private pb::ByteString errorData_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString ErrorData {
          get { return errorData_; }
          set {
            errorData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "subBiz" field.</summary>
        public const int SubBizFieldNumber = 7;
        private string subBiz_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SubBiz {
          get { return subBiz_; }
          set {
            subBiz_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DownstreamPayload);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DownstreamPayload other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Command != other.Command) return false;
          if (SeqId != other.SeqId) return false;
          if (ErrorCode != other.ErrorCode) return false;
          if (PayloadData != other.PayloadData) return false;
          if (ErrorMsg != other.ErrorMsg) return false;
          if (ErrorData != other.ErrorData) return false;
          if (SubBiz != other.SubBiz) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Command.Length != 0) hash ^= Command.GetHashCode();
          if (SeqId != 0L) hash ^= SeqId.GetHashCode();
          if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
          if (PayloadData.Length != 0) hash ^= PayloadData.GetHashCode();
          if (ErrorMsg.Length != 0) hash ^= ErrorMsg.GetHashCode();
          if (ErrorData.Length != 0) hash ^= ErrorData.GetHashCode();
          if (SubBiz.Length != 0) hash ^= SubBiz.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Command.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Command);
          }
          if (SeqId != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(SeqId);
          }
          if (ErrorCode != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(ErrorCode);
          }
          if (PayloadData.Length != 0) {
            output.WriteRawTag(34);
            output.WriteBytes(PayloadData);
          }
          if (ErrorMsg.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(ErrorMsg);
          }
          if (ErrorData.Length != 0) {
            output.WriteRawTag(50);
            output.WriteBytes(ErrorData);
          }
          if (SubBiz.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(SubBiz);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Command.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Command);
          }
          if (SeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeqId);
          }
          if (ErrorCode != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
          }
          if (PayloadData.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(PayloadData);
          }
          if (ErrorMsg.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMsg);
          }
          if (ErrorData.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(ErrorData);
          }
          if (SubBiz.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SubBiz);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DownstreamPayload other) {
          if (other == null) {
            return;
          }
          if (other.Command.Length != 0) {
            Command = other.Command;
          }
          if (other.SeqId != 0L) {
            SeqId = other.SeqId;
          }
          if (other.ErrorCode != 0) {
            ErrorCode = other.ErrorCode;
          }
          if (other.PayloadData.Length != 0) {
            PayloadData = other.PayloadData;
          }
          if (other.ErrorMsg.Length != 0) {
            ErrorMsg = other.ErrorMsg;
          }
          if (other.ErrorData.Length != 0) {
            ErrorData = other.ErrorData;
          }
          if (other.SubBiz.Length != 0) {
            SubBiz = other.SubBiz;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Command = input.ReadString();
                break;
              }
              case 16: {
                SeqId = input.ReadInt64();
                break;
              }
              case 24: {
                ErrorCode = input.ReadInt32();
                break;
              }
              case 34: {
                PayloadData = input.ReadBytes();
                break;
              }
              case 42: {
                ErrorMsg = input.ReadString();
                break;
              }
              case 50: {
                ErrorData = input.ReadBytes();
                break;
              }
              case 58: {
                SubBiz = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class PingRequest : pb::IMessage<PingRequest> {
        private static readonly pb::MessageParser<PingRequest> _parser = new pb::MessageParser<PingRequest>(() => new PingRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PingRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PingRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PingRequest(PingRequest other) : this() {
          pingType_ = other.pingType_;
          pingRound_ = other.pingRound_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PingRequest Clone() {
          return new PingRequest(this);
        }

        /// <summary>Field number for the "pingType" field.</summary>
        public const int PingTypeFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.PingRequest.Types.PingType pingType_ = global::AcFunDanmu.Im.Basic.Types.PingRequest.Types.PingType.KInvalid;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.PingRequest.Types.PingType PingType {
          get { return pingType_; }
          set {
            pingType_ = value;
          }
        }

        /// <summary>Field number for the "pingRound" field.</summary>
        public const int PingRoundFieldNumber = 2;
        private uint pingRound_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint PingRound {
          get { return pingRound_; }
          set {
            pingRound_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PingRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PingRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (PingType != other.PingType) return false;
          if (PingRound != other.PingRound) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (PingType != global::AcFunDanmu.Im.Basic.Types.PingRequest.Types.PingType.KInvalid) hash ^= PingType.GetHashCode();
          if (PingRound != 0) hash ^= PingRound.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (PingType != global::AcFunDanmu.Im.Basic.Types.PingRequest.Types.PingType.KInvalid) {
            output.WriteRawTag(8);
            output.WriteEnum((int) PingType);
          }
          if (PingRound != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(PingRound);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (PingType != global::AcFunDanmu.Im.Basic.Types.PingRequest.Types.PingType.KInvalid) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PingType);
          }
          if (PingRound != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PingRound);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PingRequest other) {
          if (other == null) {
            return;
          }
          if (other.PingType != global::AcFunDanmu.Im.Basic.Types.PingRequest.Types.PingType.KInvalid) {
            PingType = other.PingType;
          }
          if (other.PingRound != 0) {
            PingRound = other.PingRound;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                PingType = (global::AcFunDanmu.Im.Basic.Types.PingRequest.Types.PingType) input.ReadEnum();
                break;
              }
              case 16: {
                PingRound = input.ReadUInt32();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the PingRequest message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum PingType {
            [pbr::OriginalName("kInvalid")] KInvalid = 0,
            [pbr::OriginalName("kPriorRegister")] KPriorRegister = 1,
            [pbr::OriginalName("kPostRegister")] KPostRegister = 2,
          }

        }
        #endregion

      }

      public sealed partial class PingResponse : pb::IMessage<PingResponse> {
        private static readonly pb::MessageParser<PingResponse> _parser = new pb::MessageParser<PingResponse>(() => new PingResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PingResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PingResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PingResponse(PingResponse other) : this() {
          serverTimestamp_ = other.serverTimestamp_;
          clientIp_ = other.clientIp_;
          redirectIp_ = other.redirectIp_;
          redirectPort_ = other.redirectPort_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PingResponse Clone() {
          return new PingResponse(this);
        }

        /// <summary>Field number for the "serverTimestamp" field.</summary>
        public const int ServerTimestampFieldNumber = 1;
        private int serverTimestamp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ServerTimestamp {
          get { return serverTimestamp_; }
          set {
            serverTimestamp_ = value;
          }
        }

        /// <summary>Field number for the "clientIp" field.</summary>
        public const int ClientIpFieldNumber = 2;
        private uint clientIp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint ClientIp {
          get { return clientIp_; }
          set {
            clientIp_ = value;
          }
        }

        /// <summary>Field number for the "redirectIp" field.</summary>
        public const int RedirectIpFieldNumber = 3;
        private uint redirectIp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint RedirectIp {
          get { return redirectIp_; }
          set {
            redirectIp_ = value;
          }
        }

        /// <summary>Field number for the "redirectPort" field.</summary>
        public const int RedirectPortFieldNumber = 4;
        private uint redirectPort_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint RedirectPort {
          get { return redirectPort_; }
          set {
            redirectPort_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PingResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PingResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ServerTimestamp != other.ServerTimestamp) return false;
          if (ClientIp != other.ClientIp) return false;
          if (RedirectIp != other.RedirectIp) return false;
          if (RedirectPort != other.RedirectPort) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ServerTimestamp != 0) hash ^= ServerTimestamp.GetHashCode();
          if (ClientIp != 0) hash ^= ClientIp.GetHashCode();
          if (RedirectIp != 0) hash ^= RedirectIp.GetHashCode();
          if (RedirectPort != 0) hash ^= RedirectPort.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ServerTimestamp != 0) {
            output.WriteRawTag(13);
            output.WriteSFixed32(ServerTimestamp);
          }
          if (ClientIp != 0) {
            output.WriteRawTag(21);
            output.WriteFixed32(ClientIp);
          }
          if (RedirectIp != 0) {
            output.WriteRawTag(29);
            output.WriteFixed32(RedirectIp);
          }
          if (RedirectPort != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(RedirectPort);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ServerTimestamp != 0) {
            size += 1 + 4;
          }
          if (ClientIp != 0) {
            size += 1 + 4;
          }
          if (RedirectIp != 0) {
            size += 1 + 4;
          }
          if (RedirectPort != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RedirectPort);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PingResponse other) {
          if (other == null) {
            return;
          }
          if (other.ServerTimestamp != 0) {
            ServerTimestamp = other.ServerTimestamp;
          }
          if (other.ClientIp != 0) {
            ClientIp = other.ClientIp;
          }
          if (other.RedirectIp != 0) {
            RedirectIp = other.RedirectIp;
          }
          if (other.RedirectPort != 0) {
            RedirectPort = other.RedirectPort;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 13: {
                ServerTimestamp = input.ReadSFixed32();
                break;
              }
              case 21: {
                ClientIp = input.ReadFixed32();
                break;
              }
              case 29: {
                RedirectIp = input.ReadFixed32();
                break;
              }
              case 32: {
                RedirectPort = input.ReadUInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class RegisterRequest : pb::IMessage<RegisterRequest> {
        private static readonly pb::MessageParser<RegisterRequest> _parser = new pb::MessageParser<RegisterRequest>(() => new RegisterRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RegisterRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RegisterRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RegisterRequest(RegisterRequest other) : this() {
          appInfo_ = other.appInfo_ != null ? other.appInfo_.Clone() : null;
          deviceInfo_ = other.deviceInfo_ != null ? other.deviceInfo_.Clone() : null;
          envInfo_ = other.envInfo_ != null ? other.envInfo_.Clone() : null;
          presenceStatus_ = other.presenceStatus_;
          appActiveStatus_ = other.appActiveStatus_;
          appCustomStatus_ = other.appCustomStatus_;
          pushServiceToken_ = other.pushServiceToken_ != null ? other.pushServiceToken_.Clone() : null;
          instanceId_ = other.instanceId_;
          pushServiceTokenList_ = other.pushServiceTokenList_.Clone();
          keepaliveIntervalSec_ = other.keepaliveIntervalSec_;
          ztCommonInfo_ = other.ztCommonInfo_ != null ? other.ztCommonInfo_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RegisterRequest Clone() {
          return new RegisterRequest(this);
        }

        /// <summary>Field number for the "appInfo" field.</summary>
        public const int AppInfoFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.AppInfo appInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.AppInfo AppInfo {
          get { return appInfo_; }
          set {
            appInfo_ = value;
          }
        }

        /// <summary>Field number for the "deviceInfo" field.</summary>
        public const int DeviceInfoFieldNumber = 2;
        private global::AcFunDanmu.Im.Basic.Types.DeviceInfo deviceInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.DeviceInfo DeviceInfo {
          get { return deviceInfo_; }
          set {
            deviceInfo_ = value;
          }
        }

        /// <summary>Field number for the "envInfo" field.</summary>
        public const int EnvInfoFieldNumber = 3;
        private global::AcFunDanmu.Im.Basic.Types.EnvInfo envInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.EnvInfo EnvInfo {
          get { return envInfo_; }
          set {
            envInfo_ = value;
          }
        }

        /// <summary>Field number for the "presenceStatus" field.</summary>
        public const int PresenceStatusFieldNumber = 4;
        private global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus presenceStatus_ = global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus.KPresenceOffline;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus PresenceStatus {
          get { return presenceStatus_; }
          set {
            presenceStatus_ = value;
          }
        }

        /// <summary>Field number for the "appActiveStatus" field.</summary>
        public const int AppActiveStatusFieldNumber = 5;
        private global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus appActiveStatus_ = global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus.KInvalid;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus AppActiveStatus {
          get { return appActiveStatus_; }
          set {
            appActiveStatus_ = value;
          }
        }

        /// <summary>Field number for the "appCustomStatus" field.</summary>
        public const int AppCustomStatusFieldNumber = 6;
        private pb::ByteString appCustomStatus_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString AppCustomStatus {
          get { return appCustomStatus_; }
          set {
            appCustomStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "pushServiceToken" field.</summary>
        public const int PushServiceTokenFieldNumber = 7;
        private global::AcFunDanmu.Im.Basic.Types.PushServiceToken pushServiceToken_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.PushServiceToken PushServiceToken {
          get { return pushServiceToken_; }
          set {
            pushServiceToken_ = value;
          }
        }

        /// <summary>Field number for the "instanceId" field.</summary>
        public const int InstanceIdFieldNumber = 8;
        private long instanceId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long InstanceId {
          get { return instanceId_; }
          set {
            instanceId_ = value;
          }
        }

        /// <summary>Field number for the "pushServiceTokenList" field.</summary>
        public const int PushServiceTokenListFieldNumber = 9;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.PushServiceToken> _repeated_pushServiceTokenList_codec
            = pb::FieldCodec.ForMessage(74, global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.PushServiceToken> pushServiceTokenList_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.PushServiceToken>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.PushServiceToken> PushServiceTokenList {
          get { return pushServiceTokenList_; }
        }

        /// <summary>Field number for the "keepaliveIntervalSec" field.</summary>
        public const int KeepaliveIntervalSecFieldNumber = 10;
        private int keepaliveIntervalSec_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int KeepaliveIntervalSec {
          get { return keepaliveIntervalSec_; }
          set {
            keepaliveIntervalSec_ = value;
          }
        }

        /// <summary>Field number for the "ztCommonInfo" field.</summary>
        public const int ZtCommonInfoFieldNumber = 11;
        private global::AcFunDanmu.Im.Basic.Types.ZtCommonInfo ztCommonInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.ZtCommonInfo ZtCommonInfo {
          get { return ztCommonInfo_; }
          set {
            ztCommonInfo_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RegisterRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RegisterRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(AppInfo, other.AppInfo)) return false;
          if (!object.Equals(DeviceInfo, other.DeviceInfo)) return false;
          if (!object.Equals(EnvInfo, other.EnvInfo)) return false;
          if (PresenceStatus != other.PresenceStatus) return false;
          if (AppActiveStatus != other.AppActiveStatus) return false;
          if (AppCustomStatus != other.AppCustomStatus) return false;
          if (!object.Equals(PushServiceToken, other.PushServiceToken)) return false;
          if (InstanceId != other.InstanceId) return false;
          if(!pushServiceTokenList_.Equals(other.pushServiceTokenList_)) return false;
          if (KeepaliveIntervalSec != other.KeepaliveIntervalSec) return false;
          if (!object.Equals(ZtCommonInfo, other.ZtCommonInfo)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (appInfo_ != null) hash ^= AppInfo.GetHashCode();
          if (deviceInfo_ != null) hash ^= DeviceInfo.GetHashCode();
          if (envInfo_ != null) hash ^= EnvInfo.GetHashCode();
          if (PresenceStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus.KPresenceOffline) hash ^= PresenceStatus.GetHashCode();
          if (AppActiveStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus.KInvalid) hash ^= AppActiveStatus.GetHashCode();
          if (AppCustomStatus.Length != 0) hash ^= AppCustomStatus.GetHashCode();
          if (pushServiceToken_ != null) hash ^= PushServiceToken.GetHashCode();
          if (InstanceId != 0L) hash ^= InstanceId.GetHashCode();
          hash ^= pushServiceTokenList_.GetHashCode();
          if (KeepaliveIntervalSec != 0) hash ^= KeepaliveIntervalSec.GetHashCode();
          if (ztCommonInfo_ != null) hash ^= ZtCommonInfo.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (appInfo_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(AppInfo);
          }
          if (deviceInfo_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(DeviceInfo);
          }
          if (envInfo_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(EnvInfo);
          }
          if (PresenceStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
            output.WriteRawTag(32);
            output.WriteEnum((int) PresenceStatus);
          }
          if (AppActiveStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus.KInvalid) {
            output.WriteRawTag(40);
            output.WriteEnum((int) AppActiveStatus);
          }
          if (AppCustomStatus.Length != 0) {
            output.WriteRawTag(50);
            output.WriteBytes(AppCustomStatus);
          }
          if (pushServiceToken_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(PushServiceToken);
          }
          if (InstanceId != 0L) {
            output.WriteRawTag(64);
            output.WriteInt64(InstanceId);
          }
          pushServiceTokenList_.WriteTo(output, _repeated_pushServiceTokenList_codec);
          if (KeepaliveIntervalSec != 0) {
            output.WriteRawTag(80);
            output.WriteInt32(KeepaliveIntervalSec);
          }
          if (ztCommonInfo_ != null) {
            output.WriteRawTag(90);
            output.WriteMessage(ZtCommonInfo);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (appInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppInfo);
          }
          if (deviceInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceInfo);
          }
          if (envInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnvInfo);
          }
          if (PresenceStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PresenceStatus);
          }
          if (AppActiveStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus.KInvalid) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AppActiveStatus);
          }
          if (AppCustomStatus.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(AppCustomStatus);
          }
          if (pushServiceToken_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PushServiceToken);
          }
          if (InstanceId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(InstanceId);
          }
          size += pushServiceTokenList_.CalculateSize(_repeated_pushServiceTokenList_codec);
          if (KeepaliveIntervalSec != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(KeepaliveIntervalSec);
          }
          if (ztCommonInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ZtCommonInfo);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RegisterRequest other) {
          if (other == null) {
            return;
          }
          if (other.appInfo_ != null) {
            if (appInfo_ == null) {
              AppInfo = new global::AcFunDanmu.Im.Basic.Types.AppInfo();
            }
            AppInfo.MergeFrom(other.AppInfo);
          }
          if (other.deviceInfo_ != null) {
            if (deviceInfo_ == null) {
              DeviceInfo = new global::AcFunDanmu.Im.Basic.Types.DeviceInfo();
            }
            DeviceInfo.MergeFrom(other.DeviceInfo);
          }
          if (other.envInfo_ != null) {
            if (envInfo_ == null) {
              EnvInfo = new global::AcFunDanmu.Im.Basic.Types.EnvInfo();
            }
            EnvInfo.MergeFrom(other.EnvInfo);
          }
          if (other.PresenceStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
            PresenceStatus = other.PresenceStatus;
          }
          if (other.AppActiveStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus.KInvalid) {
            AppActiveStatus = other.AppActiveStatus;
          }
          if (other.AppCustomStatus.Length != 0) {
            AppCustomStatus = other.AppCustomStatus;
          }
          if (other.pushServiceToken_ != null) {
            if (pushServiceToken_ == null) {
              PushServiceToken = new global::AcFunDanmu.Im.Basic.Types.PushServiceToken();
            }
            PushServiceToken.MergeFrom(other.PushServiceToken);
          }
          if (other.InstanceId != 0L) {
            InstanceId = other.InstanceId;
          }
          pushServiceTokenList_.Add(other.pushServiceTokenList_);
          if (other.KeepaliveIntervalSec != 0) {
            KeepaliveIntervalSec = other.KeepaliveIntervalSec;
          }
          if (other.ztCommonInfo_ != null) {
            if (ztCommonInfo_ == null) {
              ZtCommonInfo = new global::AcFunDanmu.Im.Basic.Types.ZtCommonInfo();
            }
            ZtCommonInfo.MergeFrom(other.ZtCommonInfo);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (appInfo_ == null) {
                  AppInfo = new global::AcFunDanmu.Im.Basic.Types.AppInfo();
                }
                input.ReadMessage(AppInfo);
                break;
              }
              case 18: {
                if (deviceInfo_ == null) {
                  DeviceInfo = new global::AcFunDanmu.Im.Basic.Types.DeviceInfo();
                }
                input.ReadMessage(DeviceInfo);
                break;
              }
              case 26: {
                if (envInfo_ == null) {
                  EnvInfo = new global::AcFunDanmu.Im.Basic.Types.EnvInfo();
                }
                input.ReadMessage(EnvInfo);
                break;
              }
              case 32: {
                PresenceStatus = (global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus) input.ReadEnum();
                break;
              }
              case 40: {
                AppActiveStatus = (global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus) input.ReadEnum();
                break;
              }
              case 50: {
                AppCustomStatus = input.ReadBytes();
                break;
              }
              case 58: {
                if (pushServiceToken_ == null) {
                  PushServiceToken = new global::AcFunDanmu.Im.Basic.Types.PushServiceToken();
                }
                input.ReadMessage(PushServiceToken);
                break;
              }
              case 64: {
                InstanceId = input.ReadInt64();
                break;
              }
              case 74: {
                pushServiceTokenList_.AddEntriesFrom(input, _repeated_pushServiceTokenList_codec);
                break;
              }
              case 80: {
                KeepaliveIntervalSec = input.ReadInt32();
                break;
              }
              case 90: {
                if (ztCommonInfo_ == null) {
                  ZtCommonInfo = new global::AcFunDanmu.Im.Basic.Types.ZtCommonInfo();
                }
                input.ReadMessage(ZtCommonInfo);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the RegisterRequest message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum PresenceStatus {
            [pbr::OriginalName("kPresenceOffline")] KPresenceOffline = 0,
            [pbr::OriginalName("kPresenceOnline")] KPresenceOnline = 1,
          }

          public enum ActiveStatus {
            [pbr::OriginalName("kInvalid")] KInvalid = 0,
            [pbr::OriginalName("kAppInForeground")] KAppInForeground = 1,
            [pbr::OriginalName("kAppinBackground")] KAppinBackground = 2,
          }

        }
        #endregion

      }

      public sealed partial class RegisterResponse : pb::IMessage<RegisterResponse> {
        private static readonly pb::MessageParser<RegisterResponse> _parser = new pb::MessageParser<RegisterResponse>(() => new RegisterResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RegisterResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RegisterResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RegisterResponse(RegisterResponse other) : this() {
          accessPointsConfig_ = other.accessPointsConfig_ != null ? other.accessPointsConfig_.Clone() : null;
          sessKey_ = other.sessKey_;
          instanceId_ = other.instanceId_;
          sdkOption_ = other.sdkOption_ != null ? other.sdkOption_.Clone() : null;
          accessPointsCOnfigIpv6_ = other.accessPointsCOnfigIpv6_ != null ? other.accessPointsCOnfigIpv6_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RegisterResponse Clone() {
          return new RegisterResponse(this);
        }

        /// <summary>Field number for the "accessPointsConfig" field.</summary>
        public const int AccessPointsConfigFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig accessPointsConfig_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig AccessPointsConfig {
          get { return accessPointsConfig_; }
          set {
            accessPointsConfig_ = value;
          }
        }

        /// <summary>Field number for the "sessKey" field.</summary>
        public const int SessKeyFieldNumber = 2;
        private pb::ByteString sessKey_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString SessKey {
          get { return sessKey_; }
          set {
            sessKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "instanceId" field.</summary>
        public const int InstanceIdFieldNumber = 3;
        private long instanceId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long InstanceId {
          get { return instanceId_; }
          set {
            instanceId_ = value;
          }
        }

        /// <summary>Field number for the "sdkOption" field.</summary>
        public const int SdkOptionFieldNumber = 4;
        private global::AcFunDanmu.Im.Basic.Types.SdkOption sdkOption_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.SdkOption SdkOption {
          get { return sdkOption_; }
          set {
            sdkOption_ = value;
          }
        }

        /// <summary>Field number for the "accessPointsCOnfigIpv6" field.</summary>
        public const int AccessPointsCOnfigIpv6FieldNumber = 5;
        private global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig accessPointsCOnfigIpv6_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig AccessPointsCOnfigIpv6 {
          get { return accessPointsCOnfigIpv6_; }
          set {
            accessPointsCOnfigIpv6_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RegisterResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RegisterResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(AccessPointsConfig, other.AccessPointsConfig)) return false;
          if (SessKey != other.SessKey) return false;
          if (InstanceId != other.InstanceId) return false;
          if (!object.Equals(SdkOption, other.SdkOption)) return false;
          if (!object.Equals(AccessPointsCOnfigIpv6, other.AccessPointsCOnfigIpv6)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (accessPointsConfig_ != null) hash ^= AccessPointsConfig.GetHashCode();
          if (SessKey.Length != 0) hash ^= SessKey.GetHashCode();
          if (InstanceId != 0L) hash ^= InstanceId.GetHashCode();
          if (sdkOption_ != null) hash ^= SdkOption.GetHashCode();
          if (accessPointsCOnfigIpv6_ != null) hash ^= AccessPointsCOnfigIpv6.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (accessPointsConfig_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(AccessPointsConfig);
          }
          if (SessKey.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(SessKey);
          }
          if (InstanceId != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(InstanceId);
          }
          if (sdkOption_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(SdkOption);
          }
          if (accessPointsCOnfigIpv6_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(AccessPointsCOnfigIpv6);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (accessPointsConfig_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccessPointsConfig);
          }
          if (SessKey.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(SessKey);
          }
          if (InstanceId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(InstanceId);
          }
          if (sdkOption_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SdkOption);
          }
          if (accessPointsCOnfigIpv6_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccessPointsCOnfigIpv6);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RegisterResponse other) {
          if (other == null) {
            return;
          }
          if (other.accessPointsConfig_ != null) {
            if (accessPointsConfig_ == null) {
              AccessPointsConfig = new global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig();
            }
            AccessPointsConfig.MergeFrom(other.AccessPointsConfig);
          }
          if (other.SessKey.Length != 0) {
            SessKey = other.SessKey;
          }
          if (other.InstanceId != 0L) {
            InstanceId = other.InstanceId;
          }
          if (other.sdkOption_ != null) {
            if (sdkOption_ == null) {
              SdkOption = new global::AcFunDanmu.Im.Basic.Types.SdkOption();
            }
            SdkOption.MergeFrom(other.SdkOption);
          }
          if (other.accessPointsCOnfigIpv6_ != null) {
            if (accessPointsCOnfigIpv6_ == null) {
              AccessPointsCOnfigIpv6 = new global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig();
            }
            AccessPointsCOnfigIpv6.MergeFrom(other.AccessPointsCOnfigIpv6);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (accessPointsConfig_ == null) {
                  AccessPointsConfig = new global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig();
                }
                input.ReadMessage(AccessPointsConfig);
                break;
              }
              case 18: {
                SessKey = input.ReadBytes();
                break;
              }
              case 24: {
                InstanceId = input.ReadInt64();
                break;
              }
              case 34: {
                if (sdkOption_ == null) {
                  SdkOption = new global::AcFunDanmu.Im.Basic.Types.SdkOption();
                }
                input.ReadMessage(SdkOption);
                break;
              }
              case 42: {
                if (accessPointsCOnfigIpv6_ == null) {
                  AccessPointsCOnfigIpv6 = new global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig();
                }
                input.ReadMessage(AccessPointsCOnfigIpv6);
                break;
              }
            }
          }
        }

      }

      public sealed partial class AccessPointsConfig : pb::IMessage<AccessPointsConfig> {
        private static readonly pb::MessageParser<AccessPointsConfig> _parser = new pb::MessageParser<AccessPointsConfig>(() => new AccessPointsConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AccessPointsConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AccessPointsConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AccessPointsConfig(AccessPointsConfig other) : this() {
          optimalAps_ = other.optimalAps_.Clone();
          backupAps_ = other.backupAps_.Clone();
          availablePorts_ = other.availablePorts_.Clone();
          foreceLastConnectedAp_ = other.foreceLastConnectedAp_ != null ? other.foreceLastConnectedAp_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AccessPointsConfig Clone() {
          return new AccessPointsConfig(this);
        }

        /// <summary>Field number for the "optimalAps" field.</summary>
        public const int OptimalApsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.AccessPoint> _repeated_optimalAps_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Basic.Types.AccessPoint.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.AccessPoint> optimalAps_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.AccessPoint>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.AccessPoint> OptimalAps {
          get { return optimalAps_; }
        }

        /// <summary>Field number for the "backupAps" field.</summary>
        public const int BackupApsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.AccessPoint> _repeated_backupAps_codec
            = pb::FieldCodec.ForMessage(18, global::AcFunDanmu.Im.Basic.Types.AccessPoint.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.AccessPoint> backupAps_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.AccessPoint>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.AccessPoint> BackupAps {
          get { return backupAps_; }
        }

        /// <summary>Field number for the "availablePorts" field.</summary>
        public const int AvailablePortsFieldNumber = 3;
        private static readonly pb::FieldCodec<uint> _repeated_availablePorts_codec
            = pb::FieldCodec.ForUInt32(26);
        private readonly pbc::RepeatedField<uint> availablePorts_ = new pbc::RepeatedField<uint>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<uint> AvailablePorts {
          get { return availablePorts_; }
        }

        /// <summary>Field number for the "foreceLastConnectedAp" field.</summary>
        public const int ForeceLastConnectedApFieldNumber = 4;
        private global::AcFunDanmu.Im.Basic.Types.AccessPoint foreceLastConnectedAp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.AccessPoint ForeceLastConnectedAp {
          get { return foreceLastConnectedAp_; }
          set {
            foreceLastConnectedAp_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AccessPointsConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AccessPointsConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!optimalAps_.Equals(other.optimalAps_)) return false;
          if(!backupAps_.Equals(other.backupAps_)) return false;
          if(!availablePorts_.Equals(other.availablePorts_)) return false;
          if (!object.Equals(ForeceLastConnectedAp, other.ForeceLastConnectedAp)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= optimalAps_.GetHashCode();
          hash ^= backupAps_.GetHashCode();
          hash ^= availablePorts_.GetHashCode();
          if (foreceLastConnectedAp_ != null) hash ^= ForeceLastConnectedAp.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          optimalAps_.WriteTo(output, _repeated_optimalAps_codec);
          backupAps_.WriteTo(output, _repeated_backupAps_codec);
          availablePorts_.WriteTo(output, _repeated_availablePorts_codec);
          if (foreceLastConnectedAp_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(ForeceLastConnectedAp);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += optimalAps_.CalculateSize(_repeated_optimalAps_codec);
          size += backupAps_.CalculateSize(_repeated_backupAps_codec);
          size += availablePorts_.CalculateSize(_repeated_availablePorts_codec);
          if (foreceLastConnectedAp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ForeceLastConnectedAp);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AccessPointsConfig other) {
          if (other == null) {
            return;
          }
          optimalAps_.Add(other.optimalAps_);
          backupAps_.Add(other.backupAps_);
          availablePorts_.Add(other.availablePorts_);
          if (other.foreceLastConnectedAp_ != null) {
            if (foreceLastConnectedAp_ == null) {
              ForeceLastConnectedAp = new global::AcFunDanmu.Im.Basic.Types.AccessPoint();
            }
            ForeceLastConnectedAp.MergeFrom(other.ForeceLastConnectedAp);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                optimalAps_.AddEntriesFrom(input, _repeated_optimalAps_codec);
                break;
              }
              case 18: {
                backupAps_.AddEntriesFrom(input, _repeated_backupAps_codec);
                break;
              }
              case 26:
              case 24: {
                availablePorts_.AddEntriesFrom(input, _repeated_availablePorts_codec);
                break;
              }
              case 34: {
                if (foreceLastConnectedAp_ == null) {
                  ForeceLastConnectedAp = new global::AcFunDanmu.Im.Basic.Types.AccessPoint();
                }
                input.ReadMessage(ForeceLastConnectedAp);
                break;
              }
            }
          }
        }

      }

      public sealed partial class UnregisterRequest : pb::IMessage<UnregisterRequest> {
        private static readonly pb::MessageParser<UnregisterRequest> _parser = new pb::MessageParser<UnregisterRequest>(() => new UnregisterRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UnregisterRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UnregisterRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UnregisterRequest(UnregisterRequest other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UnregisterRequest Clone() {
          return new UnregisterRequest(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UnregisterRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UnregisterRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UnregisterRequest other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class UnregisterResponse : pb::IMessage<UnregisterResponse> {
        private static readonly pb::MessageParser<UnregisterResponse> _parser = new pb::MessageParser<UnregisterResponse>(() => new UnregisterResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UnregisterResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[11]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UnregisterResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UnregisterResponse(UnregisterResponse other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UnregisterResponse Clone() {
          return new UnregisterResponse(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UnregisterResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UnregisterResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UnregisterResponse other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class KeepAliveRequest : pb::IMessage<KeepAliveRequest> {
        private static readonly pb::MessageParser<KeepAliveRequest> _parser = new pb::MessageParser<KeepAliveRequest>(() => new KeepAliveRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<KeepAliveRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[12]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KeepAliveRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KeepAliveRequest(KeepAliveRequest other) : this() {
          presenceStatus_ = other.presenceStatus_;
          appActiveStatus_ = other.appActiveStatus_;
          pushServiceToken_ = other.pushServiceToken_ != null ? other.pushServiceToken_.Clone() : null;
          pushServiceTokenList_ = other.pushServiceTokenList_.Clone();
          keepaliveIntervalSec_ = other.keepaliveIntervalSec_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KeepAliveRequest Clone() {
          return new KeepAliveRequest(this);
        }

        /// <summary>Field number for the "presenceStatus" field.</summary>
        public const int PresenceStatusFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus presenceStatus_ = global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus.KPresenceOffline;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus PresenceStatus {
          get { return presenceStatus_; }
          set {
            presenceStatus_ = value;
          }
        }

        /// <summary>Field number for the "appActiveStatus" field.</summary>
        public const int AppActiveStatusFieldNumber = 2;
        private global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus appActiveStatus_ = global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus.KInvalid;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus AppActiveStatus {
          get { return appActiveStatus_; }
          set {
            appActiveStatus_ = value;
          }
        }

        /// <summary>Field number for the "pushServiceToken" field.</summary>
        public const int PushServiceTokenFieldNumber = 3;
        private global::AcFunDanmu.Im.Basic.Types.PushServiceToken pushServiceToken_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.PushServiceToken PushServiceToken {
          get { return pushServiceToken_; }
          set {
            pushServiceToken_ = value;
          }
        }

        /// <summary>Field number for the "pushServiceTokenList" field.</summary>
        public const int PushServiceTokenListFieldNumber = 4;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.PushServiceToken> _repeated_pushServiceTokenList_codec
            = pb::FieldCodec.ForMessage(34, global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.PushServiceToken> pushServiceTokenList_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.PushServiceToken>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.PushServiceToken> PushServiceTokenList {
          get { return pushServiceTokenList_; }
        }

        /// <summary>Field number for the "keepaliveIntervalSec" field.</summary>
        public const int KeepaliveIntervalSecFieldNumber = 5;
        private int keepaliveIntervalSec_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int KeepaliveIntervalSec {
          get { return keepaliveIntervalSec_; }
          set {
            keepaliveIntervalSec_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as KeepAliveRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(KeepAliveRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (PresenceStatus != other.PresenceStatus) return false;
          if (AppActiveStatus != other.AppActiveStatus) return false;
          if (!object.Equals(PushServiceToken, other.PushServiceToken)) return false;
          if(!pushServiceTokenList_.Equals(other.pushServiceTokenList_)) return false;
          if (KeepaliveIntervalSec != other.KeepaliveIntervalSec) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (PresenceStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus.KPresenceOffline) hash ^= PresenceStatus.GetHashCode();
          if (AppActiveStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus.KInvalid) hash ^= AppActiveStatus.GetHashCode();
          if (pushServiceToken_ != null) hash ^= PushServiceToken.GetHashCode();
          hash ^= pushServiceTokenList_.GetHashCode();
          if (KeepaliveIntervalSec != 0) hash ^= KeepaliveIntervalSec.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (PresenceStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
            output.WriteRawTag(8);
            output.WriteEnum((int) PresenceStatus);
          }
          if (AppActiveStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus.KInvalid) {
            output.WriteRawTag(16);
            output.WriteEnum((int) AppActiveStatus);
          }
          if (pushServiceToken_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(PushServiceToken);
          }
          pushServiceTokenList_.WriteTo(output, _repeated_pushServiceTokenList_codec);
          if (KeepaliveIntervalSec != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(KeepaliveIntervalSec);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (PresenceStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PresenceStatus);
          }
          if (AppActiveStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus.KInvalid) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AppActiveStatus);
          }
          if (pushServiceToken_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PushServiceToken);
          }
          size += pushServiceTokenList_.CalculateSize(_repeated_pushServiceTokenList_codec);
          if (KeepaliveIntervalSec != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(KeepaliveIntervalSec);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(KeepAliveRequest other) {
          if (other == null) {
            return;
          }
          if (other.PresenceStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
            PresenceStatus = other.PresenceStatus;
          }
          if (other.AppActiveStatus != global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus.KInvalid) {
            AppActiveStatus = other.AppActiveStatus;
          }
          if (other.pushServiceToken_ != null) {
            if (pushServiceToken_ == null) {
              PushServiceToken = new global::AcFunDanmu.Im.Basic.Types.PushServiceToken();
            }
            PushServiceToken.MergeFrom(other.PushServiceToken);
          }
          pushServiceTokenList_.Add(other.pushServiceTokenList_);
          if (other.KeepaliveIntervalSec != 0) {
            KeepaliveIntervalSec = other.KeepaliveIntervalSec;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                PresenceStatus = (global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.PresenceStatus) input.ReadEnum();
                break;
              }
              case 16: {
                AppActiveStatus = (global::AcFunDanmu.Im.Basic.Types.RegisterRequest.Types.ActiveStatus) input.ReadEnum();
                break;
              }
              case 26: {
                if (pushServiceToken_ == null) {
                  PushServiceToken = new global::AcFunDanmu.Im.Basic.Types.PushServiceToken();
                }
                input.ReadMessage(PushServiceToken);
                break;
              }
              case 34: {
                pushServiceTokenList_.AddEntriesFrom(input, _repeated_pushServiceTokenList_codec);
                break;
              }
              case 40: {
                KeepaliveIntervalSec = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class KeepAliveResponse : pb::IMessage<KeepAliveResponse> {
        private static readonly pb::MessageParser<KeepAliveResponse> _parser = new pb::MessageParser<KeepAliveResponse>(() => new KeepAliveResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<KeepAliveResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[13]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KeepAliveResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KeepAliveResponse(KeepAliveResponse other) : this() {
          accessPointsConfig_ = other.accessPointsConfig_ != null ? other.accessPointsConfig_.Clone() : null;
          serverMsec_ = other.serverMsec_;
          accessPointsConfigIpv6_ = other.accessPointsConfigIpv6_ != null ? other.accessPointsConfigIpv6_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KeepAliveResponse Clone() {
          return new KeepAliveResponse(this);
        }

        /// <summary>Field number for the "accessPointsConfig" field.</summary>
        public const int AccessPointsConfigFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig accessPointsConfig_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig AccessPointsConfig {
          get { return accessPointsConfig_; }
          set {
            accessPointsConfig_ = value;
          }
        }

        /// <summary>Field number for the "serverMsec" field.</summary>
        public const int ServerMsecFieldNumber = 2;
        private long serverMsec_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ServerMsec {
          get { return serverMsec_; }
          set {
            serverMsec_ = value;
          }
        }

        /// <summary>Field number for the "accessPointsConfigIpv6" field.</summary>
        public const int AccessPointsConfigIpv6FieldNumber = 3;
        private global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig accessPointsConfigIpv6_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig AccessPointsConfigIpv6 {
          get { return accessPointsConfigIpv6_; }
          set {
            accessPointsConfigIpv6_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as KeepAliveResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(KeepAliveResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(AccessPointsConfig, other.AccessPointsConfig)) return false;
          if (ServerMsec != other.ServerMsec) return false;
          if (!object.Equals(AccessPointsConfigIpv6, other.AccessPointsConfigIpv6)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (accessPointsConfig_ != null) hash ^= AccessPointsConfig.GetHashCode();
          if (ServerMsec != 0L) hash ^= ServerMsec.GetHashCode();
          if (accessPointsConfigIpv6_ != null) hash ^= AccessPointsConfigIpv6.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (accessPointsConfig_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(AccessPointsConfig);
          }
          if (ServerMsec != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(ServerMsec);
          }
          if (accessPointsConfigIpv6_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(AccessPointsConfigIpv6);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (accessPointsConfig_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccessPointsConfig);
          }
          if (ServerMsec != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ServerMsec);
          }
          if (accessPointsConfigIpv6_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccessPointsConfigIpv6);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(KeepAliveResponse other) {
          if (other == null) {
            return;
          }
          if (other.accessPointsConfig_ != null) {
            if (accessPointsConfig_ == null) {
              AccessPointsConfig = new global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig();
            }
            AccessPointsConfig.MergeFrom(other.AccessPointsConfig);
          }
          if (other.ServerMsec != 0L) {
            ServerMsec = other.ServerMsec;
          }
          if (other.accessPointsConfigIpv6_ != null) {
            if (accessPointsConfigIpv6_ == null) {
              AccessPointsConfigIpv6 = new global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig();
            }
            AccessPointsConfigIpv6.MergeFrom(other.AccessPointsConfigIpv6);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (accessPointsConfig_ == null) {
                  AccessPointsConfig = new global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig();
                }
                input.ReadMessage(AccessPointsConfig);
                break;
              }
              case 16: {
                ServerMsec = input.ReadInt64();
                break;
              }
              case 26: {
                if (accessPointsConfigIpv6_ == null) {
                  AccessPointsConfigIpv6 = new global::AcFunDanmu.Im.Basic.Types.AccessPointsConfig();
                }
                input.ReadMessage(AccessPointsConfigIpv6);
                break;
              }
            }
          }
        }

      }

      public sealed partial class AccessPoint : pb::IMessage<AccessPoint> {
        private static readonly pb::MessageParser<AccessPoint> _parser = new pb::MessageParser<AccessPoint>(() => new AccessPoint());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AccessPoint> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[14]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AccessPoint() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AccessPoint(AccessPoint other) : this() {
          addressType_ = other.addressType_;
          port_ = other.port_;
          ipV4_ = other.ipV4_;
          ipV6_ = other.ipV6_;
          domain_ = other.domain_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AccessPoint Clone() {
          return new AccessPoint(this);
        }

        /// <summary>Field number for the "addressType" field.</summary>
        public const int AddressTypeFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.AccessPoint.Types.AddressType addressType_ = global::AcFunDanmu.Im.Basic.Types.AccessPoint.Types.AddressType.KIpv4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.AccessPoint.Types.AddressType AddressType {
          get { return addressType_; }
          set {
            addressType_ = value;
          }
        }

        /// <summary>Field number for the "port" field.</summary>
        public const int PortFieldNumber = 2;
        private uint port_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Port {
          get { return port_; }
          set {
            port_ = value;
          }
        }

        /// <summary>Field number for the "ipV4" field.</summary>
        public const int IpV4FieldNumber = 3;
        private uint ipV4_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint IpV4 {
          get { return ipV4_; }
          set {
            ipV4_ = value;
          }
        }

        /// <summary>Field number for the "ipV6" field.</summary>
        public const int IpV6FieldNumber = 4;
        private pb::ByteString ipV6_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString IpV6 {
          get { return ipV6_; }
          set {
            ipV6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "domain" field.</summary>
        public const int DomainFieldNumber = 5;
        private string domain_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Domain {
          get { return domain_; }
          set {
            domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AccessPoint);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AccessPoint other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AddressType != other.AddressType) return false;
          if (Port != other.Port) return false;
          if (IpV4 != other.IpV4) return false;
          if (IpV6 != other.IpV6) return false;
          if (Domain != other.Domain) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (AddressType != global::AcFunDanmu.Im.Basic.Types.AccessPoint.Types.AddressType.KIpv4) hash ^= AddressType.GetHashCode();
          if (Port != 0) hash ^= Port.GetHashCode();
          if (IpV4 != 0) hash ^= IpV4.GetHashCode();
          if (IpV6.Length != 0) hash ^= IpV6.GetHashCode();
          if (Domain.Length != 0) hash ^= Domain.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (AddressType != global::AcFunDanmu.Im.Basic.Types.AccessPoint.Types.AddressType.KIpv4) {
            output.WriteRawTag(8);
            output.WriteEnum((int) AddressType);
          }
          if (Port != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(Port);
          }
          if (IpV4 != 0) {
            output.WriteRawTag(29);
            output.WriteFixed32(IpV4);
          }
          if (IpV6.Length != 0) {
            output.WriteRawTag(34);
            output.WriteBytes(IpV6);
          }
          if (Domain.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Domain);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (AddressType != global::AcFunDanmu.Im.Basic.Types.AccessPoint.Types.AddressType.KIpv4) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AddressType);
          }
          if (Port != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
          }
          if (IpV4 != 0) {
            size += 1 + 4;
          }
          if (IpV6.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(IpV6);
          }
          if (Domain.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AccessPoint other) {
          if (other == null) {
            return;
          }
          if (other.AddressType != global::AcFunDanmu.Im.Basic.Types.AccessPoint.Types.AddressType.KIpv4) {
            AddressType = other.AddressType;
          }
          if (other.Port != 0) {
            Port = other.Port;
          }
          if (other.IpV4 != 0) {
            IpV4 = other.IpV4;
          }
          if (other.IpV6.Length != 0) {
            IpV6 = other.IpV6;
          }
          if (other.Domain.Length != 0) {
            Domain = other.Domain;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                AddressType = (global::AcFunDanmu.Im.Basic.Types.AccessPoint.Types.AddressType) input.ReadEnum();
                break;
              }
              case 16: {
                Port = input.ReadUInt32();
                break;
              }
              case 29: {
                IpV4 = input.ReadFixed32();
                break;
              }
              case 34: {
                IpV6 = input.ReadBytes();
                break;
              }
              case 42: {
                Domain = input.ReadString();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the AccessPoint message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum AddressType {
            [pbr::OriginalName("kIPV4")] KIpv4 = 0,
            [pbr::OriginalName("kIPV6")] KIpv6 = 1,
            [pbr::OriginalName("kDomain")] KDomain = 2,
          }

        }
        #endregion

      }

      public sealed partial class TokenInfo : pb::IMessage<TokenInfo> {
        private static readonly pb::MessageParser<TokenInfo> _parser = new pb::MessageParser<TokenInfo>(() => new TokenInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TokenInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[15]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TokenInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TokenInfo(TokenInfo other) : this() {
          tokenType_ = other.tokenType_;
          token_ = other.token_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TokenInfo Clone() {
          return new TokenInfo(this);
        }

        /// <summary>Field number for the "tokenType" field.</summary>
        public const int TokenTypeFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.TokenInfo.Types.TokenType tokenType_ = global::AcFunDanmu.Im.Basic.Types.TokenInfo.Types.TokenType.KInvalid;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.TokenInfo.Types.TokenType TokenType {
          get { return tokenType_; }
          set {
            tokenType_ = value;
          }
        }

        /// <summary>Field number for the "token" field.</summary>
        public const int TokenFieldNumber = 2;
        private pb::ByteString token_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Token {
          get { return token_; }
          set {
            token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TokenInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TokenInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TokenType != other.TokenType) return false;
          if (Token != other.Token) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TokenType != global::AcFunDanmu.Im.Basic.Types.TokenInfo.Types.TokenType.KInvalid) hash ^= TokenType.GetHashCode();
          if (Token.Length != 0) hash ^= Token.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TokenType != global::AcFunDanmu.Im.Basic.Types.TokenInfo.Types.TokenType.KInvalid) {
            output.WriteRawTag(8);
            output.WriteEnum((int) TokenType);
          }
          if (Token.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Token);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TokenType != global::AcFunDanmu.Im.Basic.Types.TokenInfo.Types.TokenType.KInvalid) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TokenType);
          }
          if (Token.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Token);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TokenInfo other) {
          if (other == null) {
            return;
          }
          if (other.TokenType != global::AcFunDanmu.Im.Basic.Types.TokenInfo.Types.TokenType.KInvalid) {
            TokenType = other.TokenType;
          }
          if (other.Token.Length != 0) {
            Token = other.Token;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                TokenType = (global::AcFunDanmu.Im.Basic.Types.TokenInfo.Types.TokenType) input.ReadEnum();
                break;
              }
              case 18: {
                Token = input.ReadBytes();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the TokenInfo message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum TokenType {
            [pbr::OriginalName("kInvalid")] KInvalid = 0,
            [pbr::OriginalName("kServiceToken")] KServiceToken = 1,
          }

        }
        #endregion

      }

      public sealed partial class PushServiceToken : pb::IMessage<PushServiceToken> {
        private static readonly pb::MessageParser<PushServiceToken> _parser = new pb::MessageParser<PushServiceToken>(() => new PushServiceToken());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PushServiceToken> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[16]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PushServiceToken() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PushServiceToken(PushServiceToken other) : this() {
          pushType_ = other.pushType_;
          token_ = other.token_;
          isPassThrough_ = other.isPassThrough_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PushServiceToken Clone() {
          return new PushServiceToken(this);
        }

        /// <summary>Field number for the "pushType" field.</summary>
        public const int PushTypeFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Types.PushType pushType_ = global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Types.PushType.KPushTypeInvalid;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Types.PushType PushType {
          get { return pushType_; }
          set {
            pushType_ = value;
          }
        }

        /// <summary>Field number for the "token" field.</summary>
        public const int TokenFieldNumber = 2;
        private pb::ByteString token_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Token {
          get { return token_; }
          set {
            token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "isPassThrough" field.</summary>
        public const int IsPassThroughFieldNumber = 3;
        private bool isPassThrough_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsPassThrough {
          get { return isPassThrough_; }
          set {
            isPassThrough_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PushServiceToken);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PushServiceToken other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (PushType != other.PushType) return false;
          if (Token != other.Token) return false;
          if (IsPassThrough != other.IsPassThrough) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (PushType != global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Types.PushType.KPushTypeInvalid) hash ^= PushType.GetHashCode();
          if (Token.Length != 0) hash ^= Token.GetHashCode();
          if (IsPassThrough != false) hash ^= IsPassThrough.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (PushType != global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Types.PushType.KPushTypeInvalid) {
            output.WriteRawTag(8);
            output.WriteEnum((int) PushType);
          }
          if (Token.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Token);
          }
          if (IsPassThrough != false) {
            output.WriteRawTag(24);
            output.WriteBool(IsPassThrough);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (PushType != global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Types.PushType.KPushTypeInvalid) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PushType);
          }
          if (Token.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Token);
          }
          if (IsPassThrough != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PushServiceToken other) {
          if (other == null) {
            return;
          }
          if (other.PushType != global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Types.PushType.KPushTypeInvalid) {
            PushType = other.PushType;
          }
          if (other.Token.Length != 0) {
            Token = other.Token;
          }
          if (other.IsPassThrough != false) {
            IsPassThrough = other.IsPassThrough;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                PushType = (global::AcFunDanmu.Im.Basic.Types.PushServiceToken.Types.PushType) input.ReadEnum();
                break;
              }
              case 18: {
                Token = input.ReadBytes();
                break;
              }
              case 24: {
                IsPassThrough = input.ReadBool();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the PushServiceToken message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum PushType {
            [pbr::OriginalName("kPushTypeInvalid")] KPushTypeInvalid = 0,
            [pbr::OriginalName("kPushTypeAPNS")] KPushTypeApns = 1,
            [pbr::OriginalName("kPushTypeXmPush")] KPushTypeXmPush = 2,
            [pbr::OriginalName("kPushTypeJgPush")] KPushTypeJgPush = 3,
            [pbr::OriginalName("kPushTypeGtPUsh")] KPushTypeGtPush = 4,
            [pbr::OriginalName("kPushTypeOpPush")] KPushTypeOpPush = 5,
            [pbr::OriginalName("kPushTYpeVvPush")] KPushTypeVvPush = 6,
            [pbr::OriginalName("kPushTypeHwPush")] KPushTypeHwPush = 7,
            [pbr::OriginalName("kPushTYpeFcm")] KPushTypeFcm = 8,
          }

        }
        #endregion

      }

      public sealed partial class SettingInfo : pb::IMessage<SettingInfo> {
        private static readonly pb::MessageParser<SettingInfo> _parser = new pb::MessageParser<SettingInfo>(() => new SettingInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SettingInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[17]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SettingInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SettingInfo(SettingInfo other) : this() {
          locale_ = other.locale_;
          timezone_ = other.timezone_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SettingInfo Clone() {
          return new SettingInfo(this);
        }

        /// <summary>Field number for the "locale" field.</summary>
        public const int LocaleFieldNumber = 1;
        private string locale_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Locale {
          get { return locale_; }
          set {
            locale_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "timezone" field.</summary>
        public const int TimezoneFieldNumber = 2;
        private int timezone_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Timezone {
          get { return timezone_; }
          set {
            timezone_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SettingInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SettingInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Locale != other.Locale) return false;
          if (Timezone != other.Timezone) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Locale.Length != 0) hash ^= Locale.GetHashCode();
          if (Timezone != 0) hash ^= Timezone.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Locale.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Locale);
          }
          if (Timezone != 0) {
            output.WriteRawTag(16);
            output.WriteSInt32(Timezone);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Locale.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Locale);
          }
          if (Timezone != 0) {
            size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Timezone);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SettingInfo other) {
          if (other == null) {
            return;
          }
          if (other.Locale.Length != 0) {
            Locale = other.Locale;
          }
          if (other.Timezone != 0) {
            Timezone = other.Timezone;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Locale = input.ReadString();
                break;
              }
              case 16: {
                Timezone = input.ReadSInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class AppInfo : pb::IMessage<AppInfo> {
        private static readonly pb::MessageParser<AppInfo> _parser = new pb::MessageParser<AppInfo>(() => new AppInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AppInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[18]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AppInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AppInfo(AppInfo other) : this() {
          appName_ = other.appName_;
          appVersion_ = other.appVersion_;
          appChannel_ = other.appChannel_;
          sdkVersion_ = other.sdkVersion_;
          extensionInfo_ = other.extensionInfo_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AppInfo Clone() {
          return new AppInfo(this);
        }

        /// <summary>Field number for the "appName" field.</summary>
        public const int AppNameFieldNumber = 1;
        private string appName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AppName {
          get { return appName_; }
          set {
            appName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "appVersion" field.</summary>
        public const int AppVersionFieldNumber = 2;
        private string appVersion_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AppVersion {
          get { return appVersion_; }
          set {
            appVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "appChannel" field.</summary>
        public const int AppChannelFieldNumber = 3;
        private string appChannel_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AppChannel {
          get { return appChannel_; }
          set {
            appChannel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "sdkVersion" field.</summary>
        public const int SdkVersionFieldNumber = 4;
        private string sdkVersion_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SdkVersion {
          get { return sdkVersion_; }
          set {
            sdkVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "extensionInfo" field.</summary>
        public const int ExtensionInfoFieldNumber = 11;
        private string extensionInfo_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ExtensionInfo {
          get { return extensionInfo_; }
          set {
            extensionInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AppInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AppInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AppName != other.AppName) return false;
          if (AppVersion != other.AppVersion) return false;
          if (AppChannel != other.AppChannel) return false;
          if (SdkVersion != other.SdkVersion) return false;
          if (ExtensionInfo != other.ExtensionInfo) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (AppName.Length != 0) hash ^= AppName.GetHashCode();
          if (AppVersion.Length != 0) hash ^= AppVersion.GetHashCode();
          if (AppChannel.Length != 0) hash ^= AppChannel.GetHashCode();
          if (SdkVersion.Length != 0) hash ^= SdkVersion.GetHashCode();
          if (ExtensionInfo.Length != 0) hash ^= ExtensionInfo.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (AppName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(AppName);
          }
          if (AppVersion.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AppVersion);
          }
          if (AppChannel.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AppChannel);
          }
          if (SdkVersion.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(SdkVersion);
          }
          if (ExtensionInfo.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(ExtensionInfo);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (AppName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AppName);
          }
          if (AppVersion.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AppVersion);
          }
          if (AppChannel.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AppChannel);
          }
          if (SdkVersion.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SdkVersion);
          }
          if (ExtensionInfo.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ExtensionInfo);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AppInfo other) {
          if (other == null) {
            return;
          }
          if (other.AppName.Length != 0) {
            AppName = other.AppName;
          }
          if (other.AppVersion.Length != 0) {
            AppVersion = other.AppVersion;
          }
          if (other.AppChannel.Length != 0) {
            AppChannel = other.AppChannel;
          }
          if (other.SdkVersion.Length != 0) {
            SdkVersion = other.SdkVersion;
          }
          if (other.ExtensionInfo.Length != 0) {
            ExtensionInfo = other.ExtensionInfo;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                AppName = input.ReadString();
                break;
              }
              case 18: {
                AppVersion = input.ReadString();
                break;
              }
              case 26: {
                AppChannel = input.ReadString();
                break;
              }
              case 34: {
                SdkVersion = input.ReadString();
                break;
              }
              case 90: {
                ExtensionInfo = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class DeviceInfo : pb::IMessage<DeviceInfo> {
        private static readonly pb::MessageParser<DeviceInfo> _parser = new pb::MessageParser<DeviceInfo>(() => new DeviceInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DeviceInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[19]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeviceInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeviceInfo(DeviceInfo other) : this() {
          platformType_ = other.platformType_;
          osVersion_ = other.osVersion_;
          deviceModel_ = other.deviceModel_;
          imeiMd5_ = other.imeiMd5_;
          deviceId_ = other.deviceId_;
          softDid_ = other.softDid_;
          kwaiDid_ = other.kwaiDid_;
          manufacturer_ = other.manufacturer_;
          deviceName_ = other.deviceName_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeviceInfo Clone() {
          return new DeviceInfo(this);
        }

        /// <summary>Field number for the "platformType" field.</summary>
        public const int PlatformTypeFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType platformType_ = global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType.KInvalid;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType PlatformType {
          get { return platformType_; }
          set {
            platformType_ = value;
          }
        }

        /// <summary>Field number for the "osVersion" field.</summary>
        public const int OsVersionFieldNumber = 2;
        private string osVersion_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OsVersion {
          get { return osVersion_; }
          set {
            osVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "deviceModel" field.</summary>
        public const int DeviceModelFieldNumber = 3;
        private string deviceModel_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeviceModel {
          get { return deviceModel_; }
          set {
            deviceModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "imeiMd5" field.</summary>
        public const int ImeiMd5FieldNumber = 4;
        private pb::ByteString imeiMd5_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString ImeiMd5 {
          get { return imeiMd5_; }
          set {
            imeiMd5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "deviceId" field.</summary>
        public const int DeviceIdFieldNumber = 5;
        private string deviceId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeviceId {
          get { return deviceId_; }
          set {
            deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "softDid" field.</summary>
        public const int SoftDidFieldNumber = 6;
        private string softDid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SoftDid {
          get { return softDid_; }
          set {
            softDid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "kwaiDid" field.</summary>
        public const int KwaiDidFieldNumber = 7;
        private string kwaiDid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string KwaiDid {
          get { return kwaiDid_; }
          set {
            kwaiDid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "manufacturer" field.</summary>
        public const int ManufacturerFieldNumber = 8;
        private string manufacturer_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Manufacturer {
          get { return manufacturer_; }
          set {
            manufacturer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "deviceName" field.</summary>
        public const int DeviceNameFieldNumber = 9;
        private string deviceName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeviceName {
          get { return deviceName_; }
          set {
            deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DeviceInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DeviceInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (PlatformType != other.PlatformType) return false;
          if (OsVersion != other.OsVersion) return false;
          if (DeviceModel != other.DeviceModel) return false;
          if (ImeiMd5 != other.ImeiMd5) return false;
          if (DeviceId != other.DeviceId) return false;
          if (SoftDid != other.SoftDid) return false;
          if (KwaiDid != other.KwaiDid) return false;
          if (Manufacturer != other.Manufacturer) return false;
          if (DeviceName != other.DeviceName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (PlatformType != global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType.KInvalid) hash ^= PlatformType.GetHashCode();
          if (OsVersion.Length != 0) hash ^= OsVersion.GetHashCode();
          if (DeviceModel.Length != 0) hash ^= DeviceModel.GetHashCode();
          if (ImeiMd5.Length != 0) hash ^= ImeiMd5.GetHashCode();
          if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
          if (SoftDid.Length != 0) hash ^= SoftDid.GetHashCode();
          if (KwaiDid.Length != 0) hash ^= KwaiDid.GetHashCode();
          if (Manufacturer.Length != 0) hash ^= Manufacturer.GetHashCode();
          if (DeviceName.Length != 0) hash ^= DeviceName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (PlatformType != global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType.KInvalid) {
            output.WriteRawTag(8);
            output.WriteEnum((int) PlatformType);
          }
          if (OsVersion.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(OsVersion);
          }
          if (DeviceModel.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(DeviceModel);
          }
          if (ImeiMd5.Length != 0) {
            output.WriteRawTag(34);
            output.WriteBytes(ImeiMd5);
          }
          if (DeviceId.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(DeviceId);
          }
          if (SoftDid.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(SoftDid);
          }
          if (KwaiDid.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(KwaiDid);
          }
          if (Manufacturer.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(Manufacturer);
          }
          if (DeviceName.Length != 0) {
            output.WriteRawTag(74);
            output.WriteString(DeviceName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (PlatformType != global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType.KInvalid) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PlatformType);
          }
          if (OsVersion.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OsVersion);
          }
          if (DeviceModel.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceModel);
          }
          if (ImeiMd5.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(ImeiMd5);
          }
          if (DeviceId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
          }
          if (SoftDid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SoftDid);
          }
          if (KwaiDid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(KwaiDid);
          }
          if (Manufacturer.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Manufacturer);
          }
          if (DeviceName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DeviceInfo other) {
          if (other == null) {
            return;
          }
          if (other.PlatformType != global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType.KInvalid) {
            PlatformType = other.PlatformType;
          }
          if (other.OsVersion.Length != 0) {
            OsVersion = other.OsVersion;
          }
          if (other.DeviceModel.Length != 0) {
            DeviceModel = other.DeviceModel;
          }
          if (other.ImeiMd5.Length != 0) {
            ImeiMd5 = other.ImeiMd5;
          }
          if (other.DeviceId.Length != 0) {
            DeviceId = other.DeviceId;
          }
          if (other.SoftDid.Length != 0) {
            SoftDid = other.SoftDid;
          }
          if (other.KwaiDid.Length != 0) {
            KwaiDid = other.KwaiDid;
          }
          if (other.Manufacturer.Length != 0) {
            Manufacturer = other.Manufacturer;
          }
          if (other.DeviceName.Length != 0) {
            DeviceName = other.DeviceName;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                PlatformType = (global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType) input.ReadEnum();
                break;
              }
              case 18: {
                OsVersion = input.ReadString();
                break;
              }
              case 26: {
                DeviceModel = input.ReadString();
                break;
              }
              case 34: {
                ImeiMd5 = input.ReadBytes();
                break;
              }
              case 42: {
                DeviceId = input.ReadString();
                break;
              }
              case 50: {
                SoftDid = input.ReadString();
                break;
              }
              case 58: {
                KwaiDid = input.ReadString();
                break;
              }
              case 66: {
                Manufacturer = input.ReadString();
                break;
              }
              case 74: {
                DeviceName = input.ReadString();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the DeviceInfo message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum PlatformType {
            [pbr::OriginalName("kInvalid")] KInvalid = 0,
            [pbr::OriginalName("kAndroid")] KAndroid = 1,
            [pbr::OriginalName("kiOS")] KiOs = 2,
            [pbr::OriginalName("kWindows")] KWindows = 3,
            [pbr::OriginalName("WECHAT_ANDROID")] WechatAndroid = 4,
            [pbr::OriginalName("WECHAT_IOS")] WechatIos = 5,
            [pbr::OriginalName("H5")] H5 = 6,
            [pbr::OriginalName("kPlatformNum")] KPlatformNum = 7,
          }

        }
        #endregion

      }

      public sealed partial class EnvInfo : pb::IMessage<EnvInfo> {
        private static readonly pb::MessageParser<EnvInfo> _parser = new pb::MessageParser<EnvInfo>(() => new EnvInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EnvInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[20]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnvInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnvInfo(EnvInfo other) : this() {
          networkType_ = other.networkType_;
          appName_ = other.appName_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnvInfo Clone() {
          return new EnvInfo(this);
        }

        /// <summary>Field number for the "networkType" field.</summary>
        public const int NetworkTypeFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.EnvInfo.Types.NetworkType networkType_ = global::AcFunDanmu.Im.Basic.Types.EnvInfo.Types.NetworkType.KInvalid;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.EnvInfo.Types.NetworkType NetworkType {
          get { return networkType_; }
          set {
            networkType_ = value;
          }
        }

        /// <summary>Field number for the "appName" field.</summary>
        public const int AppNameFieldNumber = 2;
        private pb::ByteString appName_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString AppName {
          get { return appName_; }
          set {
            appName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EnvInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EnvInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (NetworkType != other.NetworkType) return false;
          if (AppName != other.AppName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (NetworkType != global::AcFunDanmu.Im.Basic.Types.EnvInfo.Types.NetworkType.KInvalid) hash ^= NetworkType.GetHashCode();
          if (AppName.Length != 0) hash ^= AppName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (NetworkType != global::AcFunDanmu.Im.Basic.Types.EnvInfo.Types.NetworkType.KInvalid) {
            output.WriteRawTag(8);
            output.WriteEnum((int) NetworkType);
          }
          if (AppName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(AppName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (NetworkType != global::AcFunDanmu.Im.Basic.Types.EnvInfo.Types.NetworkType.KInvalid) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NetworkType);
          }
          if (AppName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(AppName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EnvInfo other) {
          if (other == null) {
            return;
          }
          if (other.NetworkType != global::AcFunDanmu.Im.Basic.Types.EnvInfo.Types.NetworkType.KInvalid) {
            NetworkType = other.NetworkType;
          }
          if (other.AppName.Length != 0) {
            AppName = other.AppName;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                NetworkType = (global::AcFunDanmu.Im.Basic.Types.EnvInfo.Types.NetworkType) input.ReadEnum();
                break;
              }
              case 18: {
                AppName = input.ReadBytes();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the EnvInfo message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum NetworkType {
            [pbr::OriginalName("kInvalid")] KInvalid = 0,
            [pbr::OriginalName("kWIFI")] KWifi = 1,
            [pbr::OriginalName("kCellular")] KCellular = 2,
          }

        }
        #endregion

      }

      public sealed partial class RequestBasicInfo : pb::IMessage<RequestBasicInfo> {
        private static readonly pb::MessageParser<RequestBasicInfo> _parser = new pb::MessageParser<RequestBasicInfo>(() => new RequestBasicInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RequestBasicInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[21]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RequestBasicInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RequestBasicInfo(RequestBasicInfo other) : this() {
          clientType_ = other.clientType_;
          deviceId_ = other.deviceId_;
          clientIp_ = other.clientIp_;
          appVersion_ = other.appVersion_;
          channel_ = other.channel_;
          appInfo_ = other.appInfo_ != null ? other.appInfo_.Clone() : null;
          deviceInfo_ = other.deviceInfo_ != null ? other.deviceInfo_.Clone() : null;
          envInfo_ = other.envInfo_ != null ? other.envInfo_.Clone() : null;
          clientPort_ = other.clientPort_;
          location_ = other.location_;
          kpf_ = other.kpf_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RequestBasicInfo Clone() {
          return new RequestBasicInfo(this);
        }

        /// <summary>Field number for the "clientType" field.</summary>
        public const int ClientTypeFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType clientType_ = global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType.KInvalid;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType ClientType {
          get { return clientType_; }
          set {
            clientType_ = value;
          }
        }

        /// <summary>Field number for the "deviceId" field.</summary>
        public const int DeviceIdFieldNumber = 2;
        private string deviceId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeviceId {
          get { return deviceId_; }
          set {
            deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "clientIp" field.</summary>
        public const int ClientIpFieldNumber = 3;
        private string clientIp_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ClientIp {
          get { return clientIp_; }
          set {
            clientIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "appVersion" field.</summary>
        public const int AppVersionFieldNumber = 4;
        private string appVersion_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AppVersion {
          get { return appVersion_; }
          set {
            appVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "channel" field.</summary>
        public const int ChannelFieldNumber = 5;
        private string channel_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Channel {
          get { return channel_; }
          set {
            channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "appInfo" field.</summary>
        public const int AppInfoFieldNumber = 6;
        private global::AcFunDanmu.Im.Basic.Types.AppInfo appInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.AppInfo AppInfo {
          get { return appInfo_; }
          set {
            appInfo_ = value;
          }
        }

        /// <summary>Field number for the "deviceInfo" field.</summary>
        public const int DeviceInfoFieldNumber = 7;
        private global::AcFunDanmu.Im.Basic.Types.DeviceInfo deviceInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.DeviceInfo DeviceInfo {
          get { return deviceInfo_; }
          set {
            deviceInfo_ = value;
          }
        }

        /// <summary>Field number for the "envInfo" field.</summary>
        public const int EnvInfoFieldNumber = 8;
        private global::AcFunDanmu.Im.Basic.Types.EnvInfo envInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.EnvInfo EnvInfo {
          get { return envInfo_; }
          set {
            envInfo_ = value;
          }
        }

        /// <summary>Field number for the "clientPort" field.</summary>
        public const int ClientPortFieldNumber = 9;
        private int clientPort_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ClientPort {
          get { return clientPort_; }
          set {
            clientPort_ = value;
          }
        }

        /// <summary>Field number for the "location" field.</summary>
        public const int LocationFieldNumber = 10;
        private string location_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Location {
          get { return location_; }
          set {
            location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "kpf" field.</summary>
        public const int KpfFieldNumber = 11;
        private string kpf_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Kpf {
          get { return kpf_; }
          set {
            kpf_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RequestBasicInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RequestBasicInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ClientType != other.ClientType) return false;
          if (DeviceId != other.DeviceId) return false;
          if (ClientIp != other.ClientIp) return false;
          if (AppVersion != other.AppVersion) return false;
          if (Channel != other.Channel) return false;
          if (!object.Equals(AppInfo, other.AppInfo)) return false;
          if (!object.Equals(DeviceInfo, other.DeviceInfo)) return false;
          if (!object.Equals(EnvInfo, other.EnvInfo)) return false;
          if (ClientPort != other.ClientPort) return false;
          if (Location != other.Location) return false;
          if (Kpf != other.Kpf) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ClientType != global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType.KInvalid) hash ^= ClientType.GetHashCode();
          if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
          if (ClientIp.Length != 0) hash ^= ClientIp.GetHashCode();
          if (AppVersion.Length != 0) hash ^= AppVersion.GetHashCode();
          if (Channel.Length != 0) hash ^= Channel.GetHashCode();
          if (appInfo_ != null) hash ^= AppInfo.GetHashCode();
          if (deviceInfo_ != null) hash ^= DeviceInfo.GetHashCode();
          if (envInfo_ != null) hash ^= EnvInfo.GetHashCode();
          if (ClientPort != 0) hash ^= ClientPort.GetHashCode();
          if (Location.Length != 0) hash ^= Location.GetHashCode();
          if (Kpf.Length != 0) hash ^= Kpf.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ClientType != global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType.KInvalid) {
            output.WriteRawTag(8);
            output.WriteEnum((int) ClientType);
          }
          if (DeviceId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(DeviceId);
          }
          if (ClientIp.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ClientIp);
          }
          if (AppVersion.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(AppVersion);
          }
          if (Channel.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Channel);
          }
          if (appInfo_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(AppInfo);
          }
          if (deviceInfo_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(DeviceInfo);
          }
          if (envInfo_ != null) {
            output.WriteRawTag(66);
            output.WriteMessage(EnvInfo);
          }
          if (ClientPort != 0) {
            output.WriteRawTag(72);
            output.WriteInt32(ClientPort);
          }
          if (Location.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(Location);
          }
          if (Kpf.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(Kpf);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ClientType != global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType.KInvalid) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ClientType);
          }
          if (DeviceId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
          }
          if (ClientIp.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientIp);
          }
          if (AppVersion.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AppVersion);
          }
          if (Channel.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
          }
          if (appInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppInfo);
          }
          if (deviceInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceInfo);
          }
          if (envInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnvInfo);
          }
          if (ClientPort != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientPort);
          }
          if (Location.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
          }
          if (Kpf.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Kpf);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RequestBasicInfo other) {
          if (other == null) {
            return;
          }
          if (other.ClientType != global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType.KInvalid) {
            ClientType = other.ClientType;
          }
          if (other.DeviceId.Length != 0) {
            DeviceId = other.DeviceId;
          }
          if (other.ClientIp.Length != 0) {
            ClientIp = other.ClientIp;
          }
          if (other.AppVersion.Length != 0) {
            AppVersion = other.AppVersion;
          }
          if (other.Channel.Length != 0) {
            Channel = other.Channel;
          }
          if (other.appInfo_ != null) {
            if (appInfo_ == null) {
              AppInfo = new global::AcFunDanmu.Im.Basic.Types.AppInfo();
            }
            AppInfo.MergeFrom(other.AppInfo);
          }
          if (other.deviceInfo_ != null) {
            if (deviceInfo_ == null) {
              DeviceInfo = new global::AcFunDanmu.Im.Basic.Types.DeviceInfo();
            }
            DeviceInfo.MergeFrom(other.DeviceInfo);
          }
          if (other.envInfo_ != null) {
            if (envInfo_ == null) {
              EnvInfo = new global::AcFunDanmu.Im.Basic.Types.EnvInfo();
            }
            EnvInfo.MergeFrom(other.EnvInfo);
          }
          if (other.ClientPort != 0) {
            ClientPort = other.ClientPort;
          }
          if (other.Location.Length != 0) {
            Location = other.Location;
          }
          if (other.Kpf.Length != 0) {
            Kpf = other.Kpf;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ClientType = (global::AcFunDanmu.Im.Basic.Types.DeviceInfo.Types.PlatformType) input.ReadEnum();
                break;
              }
              case 18: {
                DeviceId = input.ReadString();
                break;
              }
              case 26: {
                ClientIp = input.ReadString();
                break;
              }
              case 34: {
                AppVersion = input.ReadString();
                break;
              }
              case 42: {
                Channel = input.ReadString();
                break;
              }
              case 50: {
                if (appInfo_ == null) {
                  AppInfo = new global::AcFunDanmu.Im.Basic.Types.AppInfo();
                }
                input.ReadMessage(AppInfo);
                break;
              }
              case 58: {
                if (deviceInfo_ == null) {
                  DeviceInfo = new global::AcFunDanmu.Im.Basic.Types.DeviceInfo();
                }
                input.ReadMessage(DeviceInfo);
                break;
              }
              case 66: {
                if (envInfo_ == null) {
                  EnvInfo = new global::AcFunDanmu.Im.Basic.Types.EnvInfo();
                }
                input.ReadMessage(EnvInfo);
                break;
              }
              case 72: {
                ClientPort = input.ReadInt32();
                break;
              }
              case 82: {
                Location = input.ReadString();
                break;
              }
              case 90: {
                Kpf = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class SyncCookie : pb::IMessage<SyncCookie> {
        private static readonly pb::MessageParser<SyncCookie> _parser = new pb::MessageParser<SyncCookie>(() => new SyncCookie());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SyncCookie> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[22]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SyncCookie() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SyncCookie(SyncCookie other) : this() {
          syncOffset_ = other.syncOffset_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SyncCookie Clone() {
          return new SyncCookie(this);
        }

        /// <summary>Field number for the "syncOffset" field.</summary>
        public const int SyncOffsetFieldNumber = 1;
        private long syncOffset_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long SyncOffset {
          get { return syncOffset_; }
          set {
            syncOffset_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SyncCookie);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SyncCookie other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SyncOffset != other.SyncOffset) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (SyncOffset != 0L) hash ^= SyncOffset.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (SyncOffset != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(SyncOffset);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (SyncOffset != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(SyncOffset);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SyncCookie other) {
          if (other == null) {
            return;
          }
          if (other.SyncOffset != 0L) {
            SyncOffset = other.SyncOffset;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                SyncOffset = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

      public sealed partial class I18nCopyWriting : pb::IMessage<I18nCopyWriting> {
        private static readonly pb::MessageParser<I18nCopyWriting> _parser = new pb::MessageParser<I18nCopyWriting>(() => new I18nCopyWriting());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<I18nCopyWriting> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[23]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public I18nCopyWriting() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public I18nCopyWriting(I18nCopyWriting other) : this() {
          formatKey_ = other.formatKey_;
          formatParam_ = other.formatParam_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public I18nCopyWriting Clone() {
          return new I18nCopyWriting(this);
        }

        /// <summary>Field number for the "formatKey" field.</summary>
        public const int FormatKeyFieldNumber = 1;
        private string formatKey_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FormatKey {
          get { return formatKey_; }
          set {
            formatKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "formatParam" field.</summary>
        public const int FormatParamFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _repeated_formatParam_codec
            = pb::FieldCodec.ForString(18);
        private readonly pbc::RepeatedField<string> formatParam_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> FormatParam {
          get { return formatParam_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as I18nCopyWriting);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(I18nCopyWriting other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (FormatKey != other.FormatKey) return false;
          if(!formatParam_.Equals(other.formatParam_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (FormatKey.Length != 0) hash ^= FormatKey.GetHashCode();
          hash ^= formatParam_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (FormatKey.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(FormatKey);
          }
          formatParam_.WriteTo(output, _repeated_formatParam_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (FormatKey.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FormatKey);
          }
          size += formatParam_.CalculateSize(_repeated_formatParam_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(I18nCopyWriting other) {
          if (other == null) {
            return;
          }
          if (other.FormatKey.Length != 0) {
            FormatKey = other.FormatKey;
          }
          formatParam_.Add(other.formatParam_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                FormatKey = input.ReadString();
                break;
              }
              case 18: {
                formatParam_.AddEntriesFrom(input, _repeated_formatParam_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class SdkOption : pb::IMessage<SdkOption> {
        private static readonly pb::MessageParser<SdkOption> _parser = new pb::MessageParser<SdkOption>(() => new SdkOption());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SdkOption> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[24]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SdkOption() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SdkOption(SdkOption other) : this() {
          reportIntervalSeconds_ = other.reportIntervalSeconds_;
          reportSecurity_ = other.reportSecurity_;
          lz4CompressionThresholdBytes_ = other.lz4CompressionThresholdBytes_;
          netCheckServers_ = other.netCheckServers_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SdkOption Clone() {
          return new SdkOption(this);
        }

        /// <summary>Field number for the "reportIntervalSeconds" field.</summary>
        public const int ReportIntervalSecondsFieldNumber = 1;
        private int reportIntervalSeconds_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ReportIntervalSeconds {
          get { return reportIntervalSeconds_; }
          set {
            reportIntervalSeconds_ = value;
          }
        }

        /// <summary>Field number for the "reportSecurity" field.</summary>
        public const int ReportSecurityFieldNumber = 2;
        private string reportSecurity_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ReportSecurity {
          get { return reportSecurity_; }
          set {
            reportSecurity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "lz4CompressionThresholdBytes" field.</summary>
        public const int Lz4CompressionThresholdBytesFieldNumber = 3;
        private int lz4CompressionThresholdBytes_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Lz4CompressionThresholdBytes {
          get { return lz4CompressionThresholdBytes_; }
          set {
            lz4CompressionThresholdBytes_ = value;
          }
        }

        /// <summary>Field number for the "netCheckServers" field.</summary>
        public const int NetCheckServersFieldNumber = 4;
        private static readonly pb::FieldCodec<string> _repeated_netCheckServers_codec
            = pb::FieldCodec.ForString(34);
        private readonly pbc::RepeatedField<string> netCheckServers_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> NetCheckServers {
          get { return netCheckServers_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SdkOption);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SdkOption other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReportIntervalSeconds != other.ReportIntervalSeconds) return false;
          if (ReportSecurity != other.ReportSecurity) return false;
          if (Lz4CompressionThresholdBytes != other.Lz4CompressionThresholdBytes) return false;
          if(!netCheckServers_.Equals(other.netCheckServers_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReportIntervalSeconds != 0) hash ^= ReportIntervalSeconds.GetHashCode();
          if (ReportSecurity.Length != 0) hash ^= ReportSecurity.GetHashCode();
          if (Lz4CompressionThresholdBytes != 0) hash ^= Lz4CompressionThresholdBytes.GetHashCode();
          hash ^= netCheckServers_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ReportIntervalSeconds != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(ReportIntervalSeconds);
          }
          if (ReportSecurity.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ReportSecurity);
          }
          if (Lz4CompressionThresholdBytes != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Lz4CompressionThresholdBytes);
          }
          netCheckServers_.WriteTo(output, _repeated_netCheckServers_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReportIntervalSeconds != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReportIntervalSeconds);
          }
          if (ReportSecurity.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ReportSecurity);
          }
          if (Lz4CompressionThresholdBytes != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lz4CompressionThresholdBytes);
          }
          size += netCheckServers_.CalculateSize(_repeated_netCheckServers_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SdkOption other) {
          if (other == null) {
            return;
          }
          if (other.ReportIntervalSeconds != 0) {
            ReportIntervalSeconds = other.ReportIntervalSeconds;
          }
          if (other.ReportSecurity.Length != 0) {
            ReportSecurity = other.ReportSecurity;
          }
          if (other.Lz4CompressionThresholdBytes != 0) {
            Lz4CompressionThresholdBytes = other.Lz4CompressionThresholdBytes;
          }
          netCheckServers_.Add(other.netCheckServers_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReportIntervalSeconds = input.ReadInt32();
                break;
              }
              case 18: {
                ReportSecurity = input.ReadString();
                break;
              }
              case 24: {
                Lz4CompressionThresholdBytes = input.ReadInt32();
                break;
              }
              case 34: {
                netCheckServers_.AddEntriesFrom(input, _repeated_netCheckServers_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class ZtCommonInfo : pb::IMessage<ZtCommonInfo> {
        private static readonly pb::MessageParser<ZtCommonInfo> _parser = new pb::MessageParser<ZtCommonInfo>(() => new ZtCommonInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ZtCommonInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[25]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ZtCommonInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ZtCommonInfo(ZtCommonInfo other) : this() {
          kpn_ = other.kpn_;
          kpf_ = other.kpf_;
          subBiz_ = other.subBiz_;
          uid_ = other.uid_;
          did_ = other.did_;
          clientIp_ = other.clientIp_;
          appVer_ = other.appVer_;
          ver_ = other.ver_;
          lat_ = other.lat_;
          lon_ = other.lon_;
          mond_ = other.mond_;
          net_ = other.net_;
          sys_ = other.sys_;
          c_ = other.c_;
          language_ = other.language_;
          countryCode_ = other.countryCode_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ZtCommonInfo Clone() {
          return new ZtCommonInfo(this);
        }

        /// <summary>Field number for the "kpn" field.</summary>
        public const int KpnFieldNumber = 1;
        private string kpn_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Kpn {
          get { return kpn_; }
          set {
            kpn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "kpf" field.</summary>
        public const int KpfFieldNumber = 2;
        private string kpf_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Kpf {
          get { return kpf_; }
          set {
            kpf_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "subBiz" field.</summary>
        public const int SubBizFieldNumber = 3;
        private string subBiz_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SubBiz {
          get { return subBiz_; }
          set {
            subBiz_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 4;
        private long uid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Uid {
          get { return uid_; }
          set {
            uid_ = value;
          }
        }

        /// <summary>Field number for the "did" field.</summary>
        public const int DidFieldNumber = 5;
        private string did_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Did {
          get { return did_; }
          set {
            did_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "clientIp" field.</summary>
        public const int ClientIpFieldNumber = 6;
        private long clientIp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ClientIp {
          get { return clientIp_; }
          set {
            clientIp_ = value;
          }
        }

        /// <summary>Field number for the "appVer" field.</summary>
        public const int AppVerFieldNumber = 7;
        private string appVer_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AppVer {
          get { return appVer_; }
          set {
            appVer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ver" field.</summary>
        public const int VerFieldNumber = 8;
        private string ver_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Ver {
          get { return ver_; }
          set {
            ver_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "lat" field.</summary>
        public const int LatFieldNumber = 9;
        private string lat_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Lat {
          get { return lat_; }
          set {
            lat_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "lon" field.</summary>
        public const int LonFieldNumber = 10;
        private string lon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Lon {
          get { return lon_; }
          set {
            lon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "mond" field.</summary>
        public const int MondFieldNumber = 11;
        private string mond_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Mond {
          get { return mond_; }
          set {
            mond_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "net" field.</summary>
        public const int NetFieldNumber = 12;
        private string net_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Net {
          get { return net_; }
          set {
            net_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "sys" field.</summary>
        public const int SysFieldNumber = 13;
        private string sys_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Sys {
          get { return sys_; }
          set {
            sys_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "c" field.</summary>
        public const int CFieldNumber = 14;
        private string c_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string C {
          get { return c_; }
          set {
            c_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "language" field.</summary>
        public const int LanguageFieldNumber = 15;
        private string language_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Language {
          get { return language_; }
          set {
            language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "countryCode" field.</summary>
        public const int CountryCodeFieldNumber = 16;
        private string countryCode_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CountryCode {
          get { return countryCode_; }
          set {
            countryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ZtCommonInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ZtCommonInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Kpn != other.Kpn) return false;
          if (Kpf != other.Kpf) return false;
          if (SubBiz != other.SubBiz) return false;
          if (Uid != other.Uid) return false;
          if (Did != other.Did) return false;
          if (ClientIp != other.ClientIp) return false;
          if (AppVer != other.AppVer) return false;
          if (Ver != other.Ver) return false;
          if (Lat != other.Lat) return false;
          if (Lon != other.Lon) return false;
          if (Mond != other.Mond) return false;
          if (Net != other.Net) return false;
          if (Sys != other.Sys) return false;
          if (C != other.C) return false;
          if (Language != other.Language) return false;
          if (CountryCode != other.CountryCode) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Kpn.Length != 0) hash ^= Kpn.GetHashCode();
          if (Kpf.Length != 0) hash ^= Kpf.GetHashCode();
          if (SubBiz.Length != 0) hash ^= SubBiz.GetHashCode();
          if (Uid != 0L) hash ^= Uid.GetHashCode();
          if (Did.Length != 0) hash ^= Did.GetHashCode();
          if (ClientIp != 0L) hash ^= ClientIp.GetHashCode();
          if (AppVer.Length != 0) hash ^= AppVer.GetHashCode();
          if (Ver.Length != 0) hash ^= Ver.GetHashCode();
          if (Lat.Length != 0) hash ^= Lat.GetHashCode();
          if (Lon.Length != 0) hash ^= Lon.GetHashCode();
          if (Mond.Length != 0) hash ^= Mond.GetHashCode();
          if (Net.Length != 0) hash ^= Net.GetHashCode();
          if (Sys.Length != 0) hash ^= Sys.GetHashCode();
          if (C.Length != 0) hash ^= C.GetHashCode();
          if (Language.Length != 0) hash ^= Language.GetHashCode();
          if (CountryCode.Length != 0) hash ^= CountryCode.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Kpn.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Kpn);
          }
          if (Kpf.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Kpf);
          }
          if (SubBiz.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(SubBiz);
          }
          if (Uid != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(Uid);
          }
          if (Did.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Did);
          }
          if (ClientIp != 0L) {
            output.WriteRawTag(48);
            output.WriteInt64(ClientIp);
          }
          if (AppVer.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(AppVer);
          }
          if (Ver.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(Ver);
          }
          if (Lat.Length != 0) {
            output.WriteRawTag(74);
            output.WriteString(Lat);
          }
          if (Lon.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(Lon);
          }
          if (Mond.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(Mond);
          }
          if (Net.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(Net);
          }
          if (Sys.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(Sys);
          }
          if (C.Length != 0) {
            output.WriteRawTag(114);
            output.WriteString(C);
          }
          if (Language.Length != 0) {
            output.WriteRawTag(122);
            output.WriteString(Language);
          }
          if (CountryCode.Length != 0) {
            output.WriteRawTag(130, 1);
            output.WriteString(CountryCode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Kpn.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Kpn);
          }
          if (Kpf.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Kpf);
          }
          if (SubBiz.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SubBiz);
          }
          if (Uid != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
          }
          if (Did.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Did);
          }
          if (ClientIp != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClientIp);
          }
          if (AppVer.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AppVer);
          }
          if (Ver.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Ver);
          }
          if (Lat.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Lat);
          }
          if (Lon.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Lon);
          }
          if (Mond.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Mond);
          }
          if (Net.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Net);
          }
          if (Sys.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Sys);
          }
          if (C.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(C);
          }
          if (Language.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
          }
          if (CountryCode.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(CountryCode);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ZtCommonInfo other) {
          if (other == null) {
            return;
          }
          if (other.Kpn.Length != 0) {
            Kpn = other.Kpn;
          }
          if (other.Kpf.Length != 0) {
            Kpf = other.Kpf;
          }
          if (other.SubBiz.Length != 0) {
            SubBiz = other.SubBiz;
          }
          if (other.Uid != 0L) {
            Uid = other.Uid;
          }
          if (other.Did.Length != 0) {
            Did = other.Did;
          }
          if (other.ClientIp != 0L) {
            ClientIp = other.ClientIp;
          }
          if (other.AppVer.Length != 0) {
            AppVer = other.AppVer;
          }
          if (other.Ver.Length != 0) {
            Ver = other.Ver;
          }
          if (other.Lat.Length != 0) {
            Lat = other.Lat;
          }
          if (other.Lon.Length != 0) {
            Lon = other.Lon;
          }
          if (other.Mond.Length != 0) {
            Mond = other.Mond;
          }
          if (other.Net.Length != 0) {
            Net = other.Net;
          }
          if (other.Sys.Length != 0) {
            Sys = other.Sys;
          }
          if (other.C.Length != 0) {
            C = other.C;
          }
          if (other.Language.Length != 0) {
            Language = other.Language;
          }
          if (other.CountryCode.Length != 0) {
            CountryCode = other.CountryCode;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Kpn = input.ReadString();
                break;
              }
              case 18: {
                Kpf = input.ReadString();
                break;
              }
              case 26: {
                SubBiz = input.ReadString();
                break;
              }
              case 32: {
                Uid = input.ReadInt64();
                break;
              }
              case 42: {
                Did = input.ReadString();
                break;
              }
              case 48: {
                ClientIp = input.ReadInt64();
                break;
              }
              case 58: {
                AppVer = input.ReadString();
                break;
              }
              case 66: {
                Ver = input.ReadString();
                break;
              }
              case 74: {
                Lat = input.ReadString();
                break;
              }
              case 82: {
                Lon = input.ReadString();
                break;
              }
              case 90: {
                Mond = input.ReadString();
                break;
              }
              case 98: {
                Net = input.ReadString();
                break;
              }
              case 106: {
                Sys = input.ReadString();
                break;
              }
              case 114: {
                C = input.ReadString();
                break;
              }
              case 122: {
                Language = input.ReadString();
                break;
              }
              case 130: {
                CountryCode = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class FrontendInfo : pb::IMessage<FrontendInfo> {
        private static readonly pb::MessageParser<FrontendInfo> _parser = new pb::MessageParser<FrontendInfo>(() => new FrontendInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FrontendInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Basic.Descriptor.NestedTypes[26]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FrontendInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FrontendInfo(FrontendInfo other) : this() {
          ip_ = other.ip_;
          port_ = other.port_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FrontendInfo Clone() {
          return new FrontendInfo(this);
        }

        /// <summary>Field number for the "ip" field.</summary>
        public const int IpFieldNumber = 1;
        private string ip_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Ip {
          get { return ip_; }
          set {
            ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "port" field.</summary>
        public const int PortFieldNumber = 2;
        private int port_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Port {
          get { return port_; }
          set {
            port_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FrontendInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FrontendInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Ip != other.Ip) return false;
          if (Port != other.Port) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Ip.Length != 0) hash ^= Ip.GetHashCode();
          if (Port != 0) hash ^= Port.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Ip.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Ip);
          }
          if (Port != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Port);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Ip.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
          }
          if (Port != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FrontendInfo other) {
          if (other == null) {
            return;
          }
          if (other.Ip.Length != 0) {
            Ip = other.Ip;
          }
          if (other.Port != 0) {
            Port = other.Port;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Ip = input.ReadString();
                break;
              }
              case 16: {
                Port = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class Message : pb::IMessage<Message> {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AcFunDanmu.Im.ImReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message(Message other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message Clone() {
      return new Message(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Message message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum KsUserRelationShip {
        [pbr::OriginalName("kUNKNOW")] KUnknow = 0,
        [pbr::OriginalName("FOLLOW_EACH_OTHER")] FollowEachOther = 1,
        [pbr::OriginalName("TO_FOLLOW_FROM")] ToFollowFrom = 2,
        [pbr::OriginalName("FROM_FOLLOW_TO")] FromFollowTo = 3,
      }

      public enum AccountType {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("OFFICIAL")] Official = 1,
        [pbr::OriginalName("NORMAL")] Normal = 2,
        [pbr::OriginalName("STRANGER")] Stranger = 3,
      }

      public enum ChatTargetType {
        [pbr::OriginalName("CTT_USER")] CttUser = 0,
        [pbr::OriginalName("CTT_CHAT_ROOM")] CttChatRoom = 2,
        [pbr::OriginalName("CTT_MULTI_PLAYER_ROOM")] CttMultiPlayerRoom = 3,
        [pbr::OriginalName("CTT_GROUP")] CttGroup = 4,
        [pbr::OriginalName("CTT_CHANNEL")] CttChannel = 5,
        [pbr::OriginalName("CTT_AGGREGATE")] CttAggregate = 6,
      }

      public enum SystemUser {
        [pbr::OriginalName("kSystemUserInvalid")] KSystemUserInvalid = 0,
        [pbr::OriginalName("SYSTEM_USER_ID")] Id = 10000,
      }

      public sealed partial class Message : pb::IMessage<Message> {
        private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Message> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Message() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Message(Message other) : this() {
          seqId_ = other.seqId_;
          clientSeqId_ = other.clientSeqId_;
          timestampMs_ = other.timestampMs_;
          fromUser_ = other.fromUser_ != null ? other.fromUser_.Clone() : null;
          targetId_ = other.targetId_;
          toUser_ = other.toUser_ != null ? other.toUser_.Clone() : null;
          title_ = other.title_;
          contentType_ = other.contentType_;
          content_ = other.content_;
          buckupTips_ = other.buckupTips_;
          receivers_ = other.receivers_.Clone();
          notContentUnread_ = other.notContentUnread_;
          sessionPriority_ = other.sessionPriority_;
          sessionCategoryId_ = other.sessionCategoryId_;
          sessionAccountType_ = other.sessionAccountType_;
          notAutoCreateSession_ = other.notAutoCreateSession_;
          userRelationship_ = other.userRelationship_;
          strTargetId_ = other.strTargetId_;
          excludeReceivers_ = other.excludeReceivers_.Clone();
          markDelte_ = other.markDelte_;
          reminder_ = other.reminder_ != null ? other.reminder_.Clone() : null;
          extra_ = other.extra_;
          receiptRequired_ = other.receiptRequired_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Message Clone() {
          return new Message(this);
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 1;
        private long seqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long SeqId {
          get { return seqId_; }
          set {
            seqId_ = value;
          }
        }

        /// <summary>Field number for the "clientSeqId" field.</summary>
        public const int ClientSeqIdFieldNumber = 2;
        private long clientSeqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ClientSeqId {
          get { return clientSeqId_; }
          set {
            clientSeqId_ = value;
          }
        }

        /// <summary>Field number for the "timestampMs" field.</summary>
        public const int TimestampMsFieldNumber = 3;
        private long timestampMs_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TimestampMs {
          get { return timestampMs_; }
          set {
            timestampMs_ = value;
          }
        }

        /// <summary>Field number for the "fromUser" field.</summary>
        public const int FromUserFieldNumber = 4;
        private global::AcFunDanmu.Im.Basic.Types.User fromUser_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.User FromUser {
          get { return fromUser_; }
          set {
            fromUser_ = value;
          }
        }

        /// <summary>Field number for the "targetId" field.</summary>
        public const int TargetIdFieldNumber = 5;
        private long targetId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TargetId {
          get { return targetId_; }
          set {
            targetId_ = value;
          }
        }

        /// <summary>Field number for the "toUser" field.</summary>
        public const int ToUserFieldNumber = 6;
        private global::AcFunDanmu.Im.Basic.Types.User toUser_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.User ToUser {
          get { return toUser_; }
          set {
            toUser_ = value;
          }
        }

        /// <summary>Field number for the "title" field.</summary>
        public const int TitleFieldNumber = 7;
        private string title_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Title {
          get { return title_; }
          set {
            title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "contentType" field.</summary>
        public const int ContentTypeFieldNumber = 8;
        private int contentType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ContentType {
          get { return contentType_; }
          set {
            contentType_ = value;
          }
        }

        /// <summary>Field number for the "content" field.</summary>
        public const int ContentFieldNumber = 9;
        private pb::ByteString content_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Content {
          get { return content_; }
          set {
            content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "buckupTips" field.</summary>
        public const int BuckupTipsFieldNumber = 10;
        private string buckupTips_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string BuckupTips {
          get { return buckupTips_; }
          set {
            buckupTips_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "receivers" field.</summary>
        public const int ReceiversFieldNumber = 11;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_receivers_codec
            = pb::FieldCodec.ForMessage(90, global::AcFunDanmu.Im.Basic.Types.User.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> receivers_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> Receivers {
          get { return receivers_; }
        }

        /// <summary>Field number for the "notContentUnread" field.</summary>
        public const int NotContentUnreadFieldNumber = 12;
        private bool notContentUnread_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool NotContentUnread {
          get { return notContentUnread_; }
          set {
            notContentUnread_ = value;
          }
        }

        /// <summary>Field number for the "sessionPriority" field.</summary>
        public const int SessionPriorityFieldNumber = 13;
        private int sessionPriority_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int SessionPriority {
          get { return sessionPriority_; }
          set {
            sessionPriority_ = value;
          }
        }

        /// <summary>Field number for the "sessionCategoryId" field.</summary>
        public const int SessionCategoryIdFieldNumber = 14;
        private int sessionCategoryId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int SessionCategoryId {
          get { return sessionCategoryId_; }
          set {
            sessionCategoryId_ = value;
          }
        }

        /// <summary>Field number for the "sessionAccountType" field.</summary>
        public const int SessionAccountTypeFieldNumber = 15;
        private int sessionAccountType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int SessionAccountType {
          get { return sessionAccountType_; }
          set {
            sessionAccountType_ = value;
          }
        }

        /// <summary>Field number for the "notAutoCreateSession" field.</summary>
        public const int NotAutoCreateSessionFieldNumber = 16;
        private bool notAutoCreateSession_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool NotAutoCreateSession {
          get { return notAutoCreateSession_; }
          set {
            notAutoCreateSession_ = value;
          }
        }

        /// <summary>Field number for the "userRelationship" field.</summary>
        public const int UserRelationshipFieldNumber = 17;
        private int userRelationship_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UserRelationship {
          get { return userRelationship_; }
          set {
            userRelationship_ = value;
          }
        }

        /// <summary>Field number for the "strTargetId" field.</summary>
        public const int StrTargetIdFieldNumber = 18;
        private string strTargetId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StrTargetId {
          get { return strTargetId_; }
          set {
            strTargetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "excludeReceivers" field.</summary>
        public const int ExcludeReceiversFieldNumber = 19;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_excludeReceivers_codec
            = pb::FieldCodec.ForMessage(154, global::AcFunDanmu.Im.Basic.Types.User.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> excludeReceivers_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> ExcludeReceivers {
          get { return excludeReceivers_; }
        }

        /// <summary>Field number for the "markDelte" field.</summary>
        public const int MarkDelteFieldNumber = 20;
        private bool markDelte_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool MarkDelte {
          get { return markDelte_; }
          set {
            markDelte_ = value;
          }
        }

        /// <summary>Field number for the "reminder" field.</summary>
        public const int ReminderFieldNumber = 21;
        private global::AcFunDanmu.Im.Message.Types.Reminder reminder_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Message.Types.Reminder Reminder {
          get { return reminder_; }
          set {
            reminder_ = value;
          }
        }

        /// <summary>Field number for the "extra" field.</summary>
        public const int ExtraFieldNumber = 22;
        private pb::ByteString extra_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Extra {
          get { return extra_; }
          set {
            extra_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "receiptRequired" field.</summary>
        public const int ReceiptRequiredFieldNumber = 23;
        private bool receiptRequired_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ReceiptRequired {
          get { return receiptRequired_; }
          set {
            receiptRequired_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Message);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Message other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SeqId != other.SeqId) return false;
          if (ClientSeqId != other.ClientSeqId) return false;
          if (TimestampMs != other.TimestampMs) return false;
          if (!object.Equals(FromUser, other.FromUser)) return false;
          if (TargetId != other.TargetId) return false;
          if (!object.Equals(ToUser, other.ToUser)) return false;
          if (Title != other.Title) return false;
          if (ContentType != other.ContentType) return false;
          if (Content != other.Content) return false;
          if (BuckupTips != other.BuckupTips) return false;
          if(!receivers_.Equals(other.receivers_)) return false;
          if (NotContentUnread != other.NotContentUnread) return false;
          if (SessionPriority != other.SessionPriority) return false;
          if (SessionCategoryId != other.SessionCategoryId) return false;
          if (SessionAccountType != other.SessionAccountType) return false;
          if (NotAutoCreateSession != other.NotAutoCreateSession) return false;
          if (UserRelationship != other.UserRelationship) return false;
          if (StrTargetId != other.StrTargetId) return false;
          if(!excludeReceivers_.Equals(other.excludeReceivers_)) return false;
          if (MarkDelte != other.MarkDelte) return false;
          if (!object.Equals(Reminder, other.Reminder)) return false;
          if (Extra != other.Extra) return false;
          if (ReceiptRequired != other.ReceiptRequired) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (SeqId != 0L) hash ^= SeqId.GetHashCode();
          if (ClientSeqId != 0L) hash ^= ClientSeqId.GetHashCode();
          if (TimestampMs != 0L) hash ^= TimestampMs.GetHashCode();
          if (fromUser_ != null) hash ^= FromUser.GetHashCode();
          if (TargetId != 0L) hash ^= TargetId.GetHashCode();
          if (toUser_ != null) hash ^= ToUser.GetHashCode();
          if (Title.Length != 0) hash ^= Title.GetHashCode();
          if (ContentType != 0) hash ^= ContentType.GetHashCode();
          if (Content.Length != 0) hash ^= Content.GetHashCode();
          if (BuckupTips.Length != 0) hash ^= BuckupTips.GetHashCode();
          hash ^= receivers_.GetHashCode();
          if (NotContentUnread != false) hash ^= NotContentUnread.GetHashCode();
          if (SessionPriority != 0) hash ^= SessionPriority.GetHashCode();
          if (SessionCategoryId != 0) hash ^= SessionCategoryId.GetHashCode();
          if (SessionAccountType != 0) hash ^= SessionAccountType.GetHashCode();
          if (NotAutoCreateSession != false) hash ^= NotAutoCreateSession.GetHashCode();
          if (UserRelationship != 0) hash ^= UserRelationship.GetHashCode();
          if (StrTargetId.Length != 0) hash ^= StrTargetId.GetHashCode();
          hash ^= excludeReceivers_.GetHashCode();
          if (MarkDelte != false) hash ^= MarkDelte.GetHashCode();
          if (reminder_ != null) hash ^= Reminder.GetHashCode();
          if (Extra.Length != 0) hash ^= Extra.GetHashCode();
          if (ReceiptRequired != false) hash ^= ReceiptRequired.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (SeqId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(SeqId);
          }
          if (ClientSeqId != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(ClientSeqId);
          }
          if (TimestampMs != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(TimestampMs);
          }
          if (fromUser_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(FromUser);
          }
          if (TargetId != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(TargetId);
          }
          if (toUser_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(ToUser);
          }
          if (Title.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(Title);
          }
          if (ContentType != 0) {
            output.WriteRawTag(64);
            output.WriteInt32(ContentType);
          }
          if (Content.Length != 0) {
            output.WriteRawTag(74);
            output.WriteBytes(Content);
          }
          if (BuckupTips.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(BuckupTips);
          }
          receivers_.WriteTo(output, _repeated_receivers_codec);
          if (NotContentUnread != false) {
            output.WriteRawTag(96);
            output.WriteBool(NotContentUnread);
          }
          if (SessionPriority != 0) {
            output.WriteRawTag(104);
            output.WriteInt32(SessionPriority);
          }
          if (SessionCategoryId != 0) {
            output.WriteRawTag(112);
            output.WriteInt32(SessionCategoryId);
          }
          if (SessionAccountType != 0) {
            output.WriteRawTag(120);
            output.WriteInt32(SessionAccountType);
          }
          if (NotAutoCreateSession != false) {
            output.WriteRawTag(128, 1);
            output.WriteBool(NotAutoCreateSession);
          }
          if (UserRelationship != 0) {
            output.WriteRawTag(136, 1);
            output.WriteInt32(UserRelationship);
          }
          if (StrTargetId.Length != 0) {
            output.WriteRawTag(146, 1);
            output.WriteString(StrTargetId);
          }
          excludeReceivers_.WriteTo(output, _repeated_excludeReceivers_codec);
          if (MarkDelte != false) {
            output.WriteRawTag(160, 1);
            output.WriteBool(MarkDelte);
          }
          if (reminder_ != null) {
            output.WriteRawTag(170, 1);
            output.WriteMessage(Reminder);
          }
          if (Extra.Length != 0) {
            output.WriteRawTag(178, 1);
            output.WriteBytes(Extra);
          }
          if (ReceiptRequired != false) {
            output.WriteRawTag(184, 1);
            output.WriteBool(ReceiptRequired);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (SeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeqId);
          }
          if (ClientSeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClientSeqId);
          }
          if (TimestampMs != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimestampMs);
          }
          if (fromUser_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromUser);
          }
          if (TargetId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetId);
          }
          if (toUser_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ToUser);
          }
          if (Title.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
          }
          if (ContentType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContentType);
          }
          if (Content.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
          }
          if (BuckupTips.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(BuckupTips);
          }
          size += receivers_.CalculateSize(_repeated_receivers_codec);
          if (NotContentUnread != false) {
            size += 1 + 1;
          }
          if (SessionPriority != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionPriority);
          }
          if (SessionCategoryId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionCategoryId);
          }
          if (SessionAccountType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionAccountType);
          }
          if (NotAutoCreateSession != false) {
            size += 2 + 1;
          }
          if (UserRelationship != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(UserRelationship);
          }
          if (StrTargetId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(StrTargetId);
          }
          size += excludeReceivers_.CalculateSize(_repeated_excludeReceivers_codec);
          if (MarkDelte != false) {
            size += 2 + 1;
          }
          if (reminder_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(Reminder);
          }
          if (Extra.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeBytesSize(Extra);
          }
          if (ReceiptRequired != false) {
            size += 2 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Message other) {
          if (other == null) {
            return;
          }
          if (other.SeqId != 0L) {
            SeqId = other.SeqId;
          }
          if (other.ClientSeqId != 0L) {
            ClientSeqId = other.ClientSeqId;
          }
          if (other.TimestampMs != 0L) {
            TimestampMs = other.TimestampMs;
          }
          if (other.fromUser_ != null) {
            if (fromUser_ == null) {
              FromUser = new global::AcFunDanmu.Im.Basic.Types.User();
            }
            FromUser.MergeFrom(other.FromUser);
          }
          if (other.TargetId != 0L) {
            TargetId = other.TargetId;
          }
          if (other.toUser_ != null) {
            if (toUser_ == null) {
              ToUser = new global::AcFunDanmu.Im.Basic.Types.User();
            }
            ToUser.MergeFrom(other.ToUser);
          }
          if (other.Title.Length != 0) {
            Title = other.Title;
          }
          if (other.ContentType != 0) {
            ContentType = other.ContentType;
          }
          if (other.Content.Length != 0) {
            Content = other.Content;
          }
          if (other.BuckupTips.Length != 0) {
            BuckupTips = other.BuckupTips;
          }
          receivers_.Add(other.receivers_);
          if (other.NotContentUnread != false) {
            NotContentUnread = other.NotContentUnread;
          }
          if (other.SessionPriority != 0) {
            SessionPriority = other.SessionPriority;
          }
          if (other.SessionCategoryId != 0) {
            SessionCategoryId = other.SessionCategoryId;
          }
          if (other.SessionAccountType != 0) {
            SessionAccountType = other.SessionAccountType;
          }
          if (other.NotAutoCreateSession != false) {
            NotAutoCreateSession = other.NotAutoCreateSession;
          }
          if (other.UserRelationship != 0) {
            UserRelationship = other.UserRelationship;
          }
          if (other.StrTargetId.Length != 0) {
            StrTargetId = other.StrTargetId;
          }
          excludeReceivers_.Add(other.excludeReceivers_);
          if (other.MarkDelte != false) {
            MarkDelte = other.MarkDelte;
          }
          if (other.reminder_ != null) {
            if (reminder_ == null) {
              Reminder = new global::AcFunDanmu.Im.Message.Types.Reminder();
            }
            Reminder.MergeFrom(other.Reminder);
          }
          if (other.Extra.Length != 0) {
            Extra = other.Extra;
          }
          if (other.ReceiptRequired != false) {
            ReceiptRequired = other.ReceiptRequired;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                SeqId = input.ReadInt64();
                break;
              }
              case 16: {
                ClientSeqId = input.ReadInt64();
                break;
              }
              case 24: {
                TimestampMs = input.ReadInt64();
                break;
              }
              case 34: {
                if (fromUser_ == null) {
                  FromUser = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                input.ReadMessage(FromUser);
                break;
              }
              case 40: {
                TargetId = input.ReadInt64();
                break;
              }
              case 50: {
                if (toUser_ == null) {
                  ToUser = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                input.ReadMessage(ToUser);
                break;
              }
              case 58: {
                Title = input.ReadString();
                break;
              }
              case 64: {
                ContentType = input.ReadInt32();
                break;
              }
              case 74: {
                Content = input.ReadBytes();
                break;
              }
              case 82: {
                BuckupTips = input.ReadString();
                break;
              }
              case 90: {
                receivers_.AddEntriesFrom(input, _repeated_receivers_codec);
                break;
              }
              case 96: {
                NotContentUnread = input.ReadBool();
                break;
              }
              case 104: {
                SessionPriority = input.ReadInt32();
                break;
              }
              case 112: {
                SessionCategoryId = input.ReadInt32();
                break;
              }
              case 120: {
                SessionAccountType = input.ReadInt32();
                break;
              }
              case 128: {
                NotAutoCreateSession = input.ReadBool();
                break;
              }
              case 136: {
                UserRelationship = input.ReadInt32();
                break;
              }
              case 146: {
                StrTargetId = input.ReadString();
                break;
              }
              case 154: {
                excludeReceivers_.AddEntriesFrom(input, _repeated_excludeReceivers_codec);
                break;
              }
              case 160: {
                MarkDelte = input.ReadBool();
                break;
              }
              case 170: {
                if (reminder_ == null) {
                  Reminder = new global::AcFunDanmu.Im.Message.Types.Reminder();
                }
                input.ReadMessage(Reminder);
                break;
              }
              case 178: {
                Extra = input.ReadBytes();
                break;
              }
              case 184: {
                ReceiptRequired = input.ReadBool();
                break;
              }
            }
          }
        }

      }

      public sealed partial class SendMessageResponse : pb::IMessage<SendMessageResponse> {
        private static readonly pb::MessageParser<SendMessageResponse> _parser = new pb::MessageParser<SendMessageResponse>(() => new SendMessageResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SendMessageResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SendMessageResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SendMessageResponse(SendMessageResponse other) : this() {
          clientSeqId_ = other.clientSeqId_;
          messageTimestamp_ = other.messageTimestamp_;
          seqId_ = other.seqId_;
          sessionAccountType_ = other.sessionAccountType_;
          sessionPriority_ = other.sessionPriority_;
          sessionCategoryId_ = other.sessionCategoryId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SendMessageResponse Clone() {
          return new SendMessageResponse(this);
        }

        /// <summary>Field number for the "clientSeqId" field.</summary>
        public const int ClientSeqIdFieldNumber = 1;
        private long clientSeqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ClientSeqId {
          get { return clientSeqId_; }
          set {
            clientSeqId_ = value;
          }
        }

        /// <summary>Field number for the "messageTimestamp" field.</summary>
        public const int MessageTimestampFieldNumber = 2;
        private long messageTimestamp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MessageTimestamp {
          get { return messageTimestamp_; }
          set {
            messageTimestamp_ = value;
          }
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 3;
        private long seqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long SeqId {
          get { return seqId_; }
          set {
            seqId_ = value;
          }
        }

        /// <summary>Field number for the "sessionAccountType" field.</summary>
        public const int SessionAccountTypeFieldNumber = 4;
        private int sessionAccountType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int SessionAccountType {
          get { return sessionAccountType_; }
          set {
            sessionAccountType_ = value;
          }
        }

        /// <summary>Field number for the "sessionPriority" field.</summary>
        public const int SessionPriorityFieldNumber = 5;
        private int sessionPriority_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int SessionPriority {
          get { return sessionPriority_; }
          set {
            sessionPriority_ = value;
          }
        }

        /// <summary>Field number for the "sessionCategoryId" field.</summary>
        public const int SessionCategoryIdFieldNumber = 6;
        private int sessionCategoryId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int SessionCategoryId {
          get { return sessionCategoryId_; }
          set {
            sessionCategoryId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SendMessageResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SendMessageResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ClientSeqId != other.ClientSeqId) return false;
          if (MessageTimestamp != other.MessageTimestamp) return false;
          if (SeqId != other.SeqId) return false;
          if (SessionAccountType != other.SessionAccountType) return false;
          if (SessionPriority != other.SessionPriority) return false;
          if (SessionCategoryId != other.SessionCategoryId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ClientSeqId != 0L) hash ^= ClientSeqId.GetHashCode();
          if (MessageTimestamp != 0L) hash ^= MessageTimestamp.GetHashCode();
          if (SeqId != 0L) hash ^= SeqId.GetHashCode();
          if (SessionAccountType != 0) hash ^= SessionAccountType.GetHashCode();
          if (SessionPriority != 0) hash ^= SessionPriority.GetHashCode();
          if (SessionCategoryId != 0) hash ^= SessionCategoryId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ClientSeqId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(ClientSeqId);
          }
          if (MessageTimestamp != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(MessageTimestamp);
          }
          if (SeqId != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(SeqId);
          }
          if (SessionAccountType != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(SessionAccountType);
          }
          if (SessionPriority != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(SessionPriority);
          }
          if (SessionCategoryId != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(SessionCategoryId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ClientSeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClientSeqId);
          }
          if (MessageTimestamp != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MessageTimestamp);
          }
          if (SeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeqId);
          }
          if (SessionAccountType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionAccountType);
          }
          if (SessionPriority != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionPriority);
          }
          if (SessionCategoryId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionCategoryId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SendMessageResponse other) {
          if (other == null) {
            return;
          }
          if (other.ClientSeqId != 0L) {
            ClientSeqId = other.ClientSeqId;
          }
          if (other.MessageTimestamp != 0L) {
            MessageTimestamp = other.MessageTimestamp;
          }
          if (other.SeqId != 0L) {
            SeqId = other.SeqId;
          }
          if (other.SessionAccountType != 0) {
            SessionAccountType = other.SessionAccountType;
          }
          if (other.SessionPriority != 0) {
            SessionPriority = other.SessionPriority;
          }
          if (other.SessionCategoryId != 0) {
            SessionCategoryId = other.SessionCategoryId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ClientSeqId = input.ReadInt64();
                break;
              }
              case 16: {
                MessageTimestamp = input.ReadInt64();
                break;
              }
              case 24: {
                SeqId = input.ReadInt64();
                break;
              }
              case 32: {
                SessionAccountType = input.ReadInt32();
                break;
              }
              case 40: {
                SessionPriority = input.ReadInt32();
                break;
              }
              case 48: {
                SessionCategoryId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class PullOldRequest : pb::IMessage<PullOldRequest> {
        private static readonly pb::MessageParser<PullOldRequest> _parser = new pb::MessageParser<PullOldRequest>(() => new PullOldRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PullOldRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullOldRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullOldRequest(PullOldRequest other) : this() {
          target_ = other.target_ != null ? other.target_.Clone() : null;
          minSeq_ = other.minSeq_;
          maxSeq_ = other.maxSeq_;
          count_ = other.count_;
          targetId_ = other.targetId_;
          strTargetId_ = other.strTargetId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullOldRequest Clone() {
          return new PullOldRequest(this);
        }

        /// <summary>Field number for the "target" field.</summary>
        public const int TargetFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.User target_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.User Target {
          get { return target_; }
          set {
            target_ = value;
          }
        }

        /// <summary>Field number for the "minSeq" field.</summary>
        public const int MinSeqFieldNumber = 2;
        private long minSeq_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MinSeq {
          get { return minSeq_; }
          set {
            minSeq_ = value;
          }
        }

        /// <summary>Field number for the "maxSeq" field.</summary>
        public const int MaxSeqFieldNumber = 3;
        private long maxSeq_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MaxSeq {
          get { return maxSeq_; }
          set {
            maxSeq_ = value;
          }
        }

        /// <summary>Field number for the "count" field.</summary>
        public const int CountFieldNumber = 4;
        private int count_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Count {
          get { return count_; }
          set {
            count_ = value;
          }
        }

        /// <summary>Field number for the "targetId" field.</summary>
        public const int TargetIdFieldNumber = 5;
        private long targetId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TargetId {
          get { return targetId_; }
          set {
            targetId_ = value;
          }
        }

        /// <summary>Field number for the "strTargetId" field.</summary>
        public const int StrTargetIdFieldNumber = 6;
        private string strTargetId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StrTargetId {
          get { return strTargetId_; }
          set {
            strTargetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PullOldRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PullOldRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Target, other.Target)) return false;
          if (MinSeq != other.MinSeq) return false;
          if (MaxSeq != other.MaxSeq) return false;
          if (Count != other.Count) return false;
          if (TargetId != other.TargetId) return false;
          if (StrTargetId != other.StrTargetId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (target_ != null) hash ^= Target.GetHashCode();
          if (MinSeq != 0L) hash ^= MinSeq.GetHashCode();
          if (MaxSeq != 0L) hash ^= MaxSeq.GetHashCode();
          if (Count != 0) hash ^= Count.GetHashCode();
          if (TargetId != 0L) hash ^= TargetId.GetHashCode();
          if (StrTargetId.Length != 0) hash ^= StrTargetId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (target_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Target);
          }
          if (MinSeq != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(MinSeq);
          }
          if (MaxSeq != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(MaxSeq);
          }
          if (Count != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Count);
          }
          if (TargetId != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(TargetId);
          }
          if (StrTargetId.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(StrTargetId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (target_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
          }
          if (MinSeq != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinSeq);
          }
          if (MaxSeq != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxSeq);
          }
          if (Count != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
          }
          if (TargetId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetId);
          }
          if (StrTargetId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StrTargetId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PullOldRequest other) {
          if (other == null) {
            return;
          }
          if (other.target_ != null) {
            if (target_ == null) {
              Target = new global::AcFunDanmu.Im.Basic.Types.User();
            }
            Target.MergeFrom(other.Target);
          }
          if (other.MinSeq != 0L) {
            MinSeq = other.MinSeq;
          }
          if (other.MaxSeq != 0L) {
            MaxSeq = other.MaxSeq;
          }
          if (other.Count != 0) {
            Count = other.Count;
          }
          if (other.TargetId != 0L) {
            TargetId = other.TargetId;
          }
          if (other.StrTargetId.Length != 0) {
            StrTargetId = other.StrTargetId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (target_ == null) {
                  Target = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                input.ReadMessage(Target);
                break;
              }
              case 16: {
                MinSeq = input.ReadInt64();
                break;
              }
              case 24: {
                MaxSeq = input.ReadInt64();
                break;
              }
              case 32: {
                Count = input.ReadInt32();
                break;
              }
              case 40: {
                TargetId = input.ReadInt64();
                break;
              }
              case 50: {
                StrTargetId = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class PullOldResponse : pb::IMessage<PullOldResponse> {
        private static readonly pb::MessageParser<PullOldResponse> _parser = new pb::MessageParser<PullOldResponse>(() => new PullOldResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PullOldResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullOldResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullOldResponse(PullOldResponse other) : this() {
          messages_ = other.messages_.Clone();
          serverTime_ = other.serverTime_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullOldResponse Clone() {
          return new PullOldResponse(this);
        }

        /// <summary>Field number for the "messages" field.</summary>
        public const int MessagesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Message.Types.Message> _repeated_messages_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Message.Types.Message.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.Message> messages_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.Message>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.Message> Messages {
          get { return messages_; }
        }

        /// <summary>Field number for the "serverTime" field.</summary>
        public const int ServerTimeFieldNumber = 2;
        private long serverTime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ServerTime {
          get { return serverTime_; }
          set {
            serverTime_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PullOldResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PullOldResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!messages_.Equals(other.messages_)) return false;
          if (ServerTime != other.ServerTime) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= messages_.GetHashCode();
          if (ServerTime != 0L) hash ^= ServerTime.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          messages_.WriteTo(output, _repeated_messages_codec);
          if (ServerTime != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(ServerTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += messages_.CalculateSize(_repeated_messages_codec);
          if (ServerTime != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ServerTime);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PullOldResponse other) {
          if (other == null) {
            return;
          }
          messages_.Add(other.messages_);
          if (other.ServerTime != 0L) {
            ServerTime = other.ServerTime;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                messages_.AddEntriesFrom(input, _repeated_messages_codec);
                break;
              }
              case 16: {
                ServerTime = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

      public sealed partial class PullNewRequest : pb::IMessage<PullNewRequest> {
        private static readonly pb::MessageParser<PullNewRequest> _parser = new pb::MessageParser<PullNewRequest>(() => new PullNewRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PullNewRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullNewRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullNewRequest(PullNewRequest other) : this() {
          target_ = other.target_ != null ? other.target_.Clone() : null;
          minSeq_ = other.minSeq_;
          count_ = other.count_;
          targetId_ = other.targetId_;
          strTargetId_ = other.strTargetId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullNewRequest Clone() {
          return new PullNewRequest(this);
        }

        /// <summary>Field number for the "target" field.</summary>
        public const int TargetFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.User target_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.User Target {
          get { return target_; }
          set {
            target_ = value;
          }
        }

        /// <summary>Field number for the "minSeq" field.</summary>
        public const int MinSeqFieldNumber = 2;
        private long minSeq_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MinSeq {
          get { return minSeq_; }
          set {
            minSeq_ = value;
          }
        }

        /// <summary>Field number for the "count" field.</summary>
        public const int CountFieldNumber = 3;
        private int count_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Count {
          get { return count_; }
          set {
            count_ = value;
          }
        }

        /// <summary>Field number for the "targetId" field.</summary>
        public const int TargetIdFieldNumber = 4;
        private long targetId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TargetId {
          get { return targetId_; }
          set {
            targetId_ = value;
          }
        }

        /// <summary>Field number for the "strTargetId" field.</summary>
        public const int StrTargetIdFieldNumber = 5;
        private string strTargetId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StrTargetId {
          get { return strTargetId_; }
          set {
            strTargetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PullNewRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PullNewRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Target, other.Target)) return false;
          if (MinSeq != other.MinSeq) return false;
          if (Count != other.Count) return false;
          if (TargetId != other.TargetId) return false;
          if (StrTargetId != other.StrTargetId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (target_ != null) hash ^= Target.GetHashCode();
          if (MinSeq != 0L) hash ^= MinSeq.GetHashCode();
          if (Count != 0) hash ^= Count.GetHashCode();
          if (TargetId != 0L) hash ^= TargetId.GetHashCode();
          if (StrTargetId.Length != 0) hash ^= StrTargetId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (target_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Target);
          }
          if (MinSeq != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(MinSeq);
          }
          if (Count != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Count);
          }
          if (TargetId != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(TargetId);
          }
          if (StrTargetId.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(StrTargetId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (target_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
          }
          if (MinSeq != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinSeq);
          }
          if (Count != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
          }
          if (TargetId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetId);
          }
          if (StrTargetId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StrTargetId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PullNewRequest other) {
          if (other == null) {
            return;
          }
          if (other.target_ != null) {
            if (target_ == null) {
              Target = new global::AcFunDanmu.Im.Basic.Types.User();
            }
            Target.MergeFrom(other.Target);
          }
          if (other.MinSeq != 0L) {
            MinSeq = other.MinSeq;
          }
          if (other.Count != 0) {
            Count = other.Count;
          }
          if (other.TargetId != 0L) {
            TargetId = other.TargetId;
          }
          if (other.StrTargetId.Length != 0) {
            StrTargetId = other.StrTargetId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (target_ == null) {
                  Target = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                input.ReadMessage(Target);
                break;
              }
              case 16: {
                MinSeq = input.ReadInt64();
                break;
              }
              case 24: {
                Count = input.ReadInt32();
                break;
              }
              case 32: {
                TargetId = input.ReadInt64();
                break;
              }
              case 42: {
                StrTargetId = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class PullNewResponse : pb::IMessage<PullNewResponse> {
        private static readonly pb::MessageParser<PullNewResponse> _parser = new pb::MessageParser<PullNewResponse>(() => new PullNewResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PullNewResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullNewResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullNewResponse(PullNewResponse other) : this() {
          messages_ = other.messages_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PullNewResponse Clone() {
          return new PullNewResponse(this);
        }

        /// <summary>Field number for the "messages" field.</summary>
        public const int MessagesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Message.Types.Message> _repeated_messages_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Message.Types.Message.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.Message> messages_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.Message>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.Message> Messages {
          get { return messages_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PullNewResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PullNewResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!messages_.Equals(other.messages_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= messages_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          messages_.WriteTo(output, _repeated_messages_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += messages_.CalculateSize(_repeated_messages_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PullNewResponse other) {
          if (other == null) {
            return;
          }
          messages_.Add(other.messages_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                messages_.AddEntriesFrom(input, _repeated_messages_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class SessionListRequest : pb::IMessage<SessionListRequest> {
        private static readonly pb::MessageParser<SessionListRequest> _parser = new pb::MessageParser<SessionListRequest>(() => new SessionListRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionListRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionListRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionListRequest(SessionListRequest other) : this() {
          syncCookie_ = other.syncCookie_ != null ? other.syncCookie_.Clone() : null;
          categoryId_ = other.categoryId_;
          localDataStatus_ = other.localDataStatus_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionListRequest Clone() {
          return new SessionListRequest(this);
        }

        /// <summary>Field number for the "syncCookie" field.</summary>
        public const int SyncCookieFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.SyncCookie syncCookie_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.SyncCookie SyncCookie {
          get { return syncCookie_; }
          set {
            syncCookie_ = value;
          }
        }

        /// <summary>Field number for the "categoryId" field.</summary>
        public const int CategoryIdFieldNumber = 2;
        private int categoryId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CategoryId {
          get { return categoryId_; }
          set {
            categoryId_ = value;
          }
        }

        /// <summary>Field number for the "localDataStatus" field.</summary>
        public const int LocalDataStatusFieldNumber = 3;
        private int localDataStatus_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int LocalDataStatus {
          get { return localDataStatus_; }
          set {
            localDataStatus_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionListRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionListRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(SyncCookie, other.SyncCookie)) return false;
          if (CategoryId != other.CategoryId) return false;
          if (LocalDataStatus != other.LocalDataStatus) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (syncCookie_ != null) hash ^= SyncCookie.GetHashCode();
          if (CategoryId != 0) hash ^= CategoryId.GetHashCode();
          if (LocalDataStatus != 0) hash ^= LocalDataStatus.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (syncCookie_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(SyncCookie);
          }
          if (CategoryId != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(CategoryId);
          }
          if (LocalDataStatus != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(LocalDataStatus);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (syncCookie_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SyncCookie);
          }
          if (CategoryId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(CategoryId);
          }
          if (LocalDataStatus != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(LocalDataStatus);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionListRequest other) {
          if (other == null) {
            return;
          }
          if (other.syncCookie_ != null) {
            if (syncCookie_ == null) {
              SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
            }
            SyncCookie.MergeFrom(other.SyncCookie);
          }
          if (other.CategoryId != 0) {
            CategoryId = other.CategoryId;
          }
          if (other.LocalDataStatus != 0) {
            LocalDataStatus = other.LocalDataStatus;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (syncCookie_ == null) {
                  SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                }
                input.ReadMessage(SyncCookie);
                break;
              }
              case 16: {
                CategoryId = input.ReadInt32();
                break;
              }
              case 24: {
                LocalDataStatus = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ChatSession : pb::IMessage<ChatSession> {
        private static readonly pb::MessageParser<ChatSession> _parser = new pb::MessageParser<ChatSession>(() => new ChatSession());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ChatSession> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChatSession() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChatSession(ChatSession other) : this() {
          target_ = other.target_ != null ? other.target_.Clone() : null;
          maxSeqId_ = other.maxSeqId_;
          readSeqId_ = other.readSeqId_;
          unreadMsgCount_ = other.unreadMsgCount_;
          latestMessage_ = other.latestMessage_.Clone();
          chatTargetType_ = other.chatTargetType_;
          targetId_ = other.targetId_;
          activeTime_ = other.activeTime_;
          priority_ = other.priority_;
          categoryId_ = other.categoryId_;
          cursor_ = other.cursor_;
          accountType_ = other.accountType_;
          aggregateSession_ = other.aggregateSession_;
          jumpCategoryId_ = other.jumpCategoryId_;
          expireAt_ = other.expireAt_;
          effectiveFrom_ = other.effectiveFrom_;
          strTargetId_ = other.strTargetId_;
          remindBody_ = other.remindBody_.Clone();
          targetReadSeqId_ = other.targetReadSeqId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChatSession Clone() {
          return new ChatSession(this);
        }

        /// <summary>Field number for the "target" field.</summary>
        public const int TargetFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.User target_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.User Target {
          get { return target_; }
          set {
            target_ = value;
          }
        }

        /// <summary>Field number for the "maxSeqId" field.</summary>
        public const int MaxSeqIdFieldNumber = 2;
        private long maxSeqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MaxSeqId {
          get { return maxSeqId_; }
          set {
            maxSeqId_ = value;
          }
        }

        /// <summary>Field number for the "readSeqId" field.</summary>
        public const int ReadSeqIdFieldNumber = 3;
        private long readSeqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ReadSeqId {
          get { return readSeqId_; }
          set {
            readSeqId_ = value;
          }
        }

        /// <summary>Field number for the "unreadMsgCount" field.</summary>
        public const int UnreadMsgCountFieldNumber = 4;
        private int unreadMsgCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnreadMsgCount {
          get { return unreadMsgCount_; }
          set {
            unreadMsgCount_ = value;
          }
        }

        /// <summary>Field number for the "latestMessage" field.</summary>
        public const int LatestMessageFieldNumber = 5;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Message.Types.Message> _repeated_latestMessage_codec
            = pb::FieldCodec.ForMessage(42, global::AcFunDanmu.Im.Message.Types.Message.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.Message> latestMessage_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.Message>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.Message> LatestMessage {
          get { return latestMessage_; }
        }

        /// <summary>Field number for the "chatTargetType" field.</summary>
        public const int ChatTargetTypeFieldNumber = 8;
        private global::AcFunDanmu.Im.Message.Types.ChatTargetType chatTargetType_ = global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Message.Types.ChatTargetType ChatTargetType {
          get { return chatTargetType_; }
          set {
            chatTargetType_ = value;
          }
        }

        /// <summary>Field number for the "targetId" field.</summary>
        public const int TargetIdFieldNumber = 9;
        private long targetId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TargetId {
          get { return targetId_; }
          set {
            targetId_ = value;
          }
        }

        /// <summary>Field number for the "activeTime" field.</summary>
        public const int ActiveTimeFieldNumber = 10;
        private long activeTime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ActiveTime {
          get { return activeTime_; }
          set {
            activeTime_ = value;
          }
        }

        /// <summary>Field number for the "priority" field.</summary>
        public const int PriorityFieldNumber = 11;
        private int priority_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Priority {
          get { return priority_; }
          set {
            priority_ = value;
          }
        }

        /// <summary>Field number for the "categoryId" field.</summary>
        public const int CategoryIdFieldNumber = 12;
        private int categoryId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CategoryId {
          get { return categoryId_; }
          set {
            categoryId_ = value;
          }
        }

        /// <summary>Field number for the "cursor" field.</summary>
        public const int CursorFieldNumber = 13;
        private string cursor_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Cursor {
          get { return cursor_; }
          set {
            cursor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "accountType" field.</summary>
        public const int AccountTypeFieldNumber = 14;
        private int accountType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int AccountType {
          get { return accountType_; }
          set {
            accountType_ = value;
          }
        }

        /// <summary>Field number for the "aggregateSession" field.</summary>
        public const int AggregateSessionFieldNumber = 15;
        private bool aggregateSession_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool AggregateSession {
          get { return aggregateSession_; }
          set {
            aggregateSession_ = value;
          }
        }

        /// <summary>Field number for the "jumpCategoryId" field.</summary>
        public const int JumpCategoryIdFieldNumber = 16;
        private int jumpCategoryId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int JumpCategoryId {
          get { return jumpCategoryId_; }
          set {
            jumpCategoryId_ = value;
          }
        }

        /// <summary>Field number for the "expireAt" field.</summary>
        public const int ExpireAtFieldNumber = 17;
        private long expireAt_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ExpireAt {
          get { return expireAt_; }
          set {
            expireAt_ = value;
          }
        }

        /// <summary>Field number for the "effectiveFrom" field.</summary>
        public const int EffectiveFromFieldNumber = 18;
        private long effectiveFrom_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long EffectiveFrom {
          get { return effectiveFrom_; }
          set {
            effectiveFrom_ = value;
          }
        }

        /// <summary>Field number for the "strTargetId" field.</summary>
        public const int StrTargetIdFieldNumber = 19;
        private string strTargetId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StrTargetId {
          get { return strTargetId_; }
          set {
            strTargetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "remindBody" field.</summary>
        public const int RemindBodyFieldNumber = 20;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Message.Types.RemindBody> _repeated_remindBody_codec
            = pb::FieldCodec.ForMessage(162, global::AcFunDanmu.Im.Message.Types.RemindBody.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.RemindBody> remindBody_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.RemindBody>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.RemindBody> RemindBody {
          get { return remindBody_; }
        }

        /// <summary>Field number for the "targetReadSeqId" field.</summary>
        public const int TargetReadSeqIdFieldNumber = 21;
        private long targetReadSeqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TargetReadSeqId {
          get { return targetReadSeqId_; }
          set {
            targetReadSeqId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ChatSession);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ChatSession other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Target, other.Target)) return false;
          if (MaxSeqId != other.MaxSeqId) return false;
          if (ReadSeqId != other.ReadSeqId) return false;
          if (UnreadMsgCount != other.UnreadMsgCount) return false;
          if(!latestMessage_.Equals(other.latestMessage_)) return false;
          if (ChatTargetType != other.ChatTargetType) return false;
          if (TargetId != other.TargetId) return false;
          if (ActiveTime != other.ActiveTime) return false;
          if (Priority != other.Priority) return false;
          if (CategoryId != other.CategoryId) return false;
          if (Cursor != other.Cursor) return false;
          if (AccountType != other.AccountType) return false;
          if (AggregateSession != other.AggregateSession) return false;
          if (JumpCategoryId != other.JumpCategoryId) return false;
          if (ExpireAt != other.ExpireAt) return false;
          if (EffectiveFrom != other.EffectiveFrom) return false;
          if (StrTargetId != other.StrTargetId) return false;
          if(!remindBody_.Equals(other.remindBody_)) return false;
          if (TargetReadSeqId != other.TargetReadSeqId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (target_ != null) hash ^= Target.GetHashCode();
          if (MaxSeqId != 0L) hash ^= MaxSeqId.GetHashCode();
          if (ReadSeqId != 0L) hash ^= ReadSeqId.GetHashCode();
          if (UnreadMsgCount != 0) hash ^= UnreadMsgCount.GetHashCode();
          hash ^= latestMessage_.GetHashCode();
          if (ChatTargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) hash ^= ChatTargetType.GetHashCode();
          if (TargetId != 0L) hash ^= TargetId.GetHashCode();
          if (ActiveTime != 0L) hash ^= ActiveTime.GetHashCode();
          if (Priority != 0) hash ^= Priority.GetHashCode();
          if (CategoryId != 0) hash ^= CategoryId.GetHashCode();
          if (Cursor.Length != 0) hash ^= Cursor.GetHashCode();
          if (AccountType != 0) hash ^= AccountType.GetHashCode();
          if (AggregateSession != false) hash ^= AggregateSession.GetHashCode();
          if (JumpCategoryId != 0) hash ^= JumpCategoryId.GetHashCode();
          if (ExpireAt != 0L) hash ^= ExpireAt.GetHashCode();
          if (EffectiveFrom != 0L) hash ^= EffectiveFrom.GetHashCode();
          if (StrTargetId.Length != 0) hash ^= StrTargetId.GetHashCode();
          hash ^= remindBody_.GetHashCode();
          if (TargetReadSeqId != 0L) hash ^= TargetReadSeqId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (target_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Target);
          }
          if (MaxSeqId != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(MaxSeqId);
          }
          if (ReadSeqId != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(ReadSeqId);
          }
          if (UnreadMsgCount != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(UnreadMsgCount);
          }
          latestMessage_.WriteTo(output, _repeated_latestMessage_codec);
          if (ChatTargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) {
            output.WriteRawTag(64);
            output.WriteEnum((int) ChatTargetType);
          }
          if (TargetId != 0L) {
            output.WriteRawTag(72);
            output.WriteInt64(TargetId);
          }
          if (ActiveTime != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(ActiveTime);
          }
          if (Priority != 0) {
            output.WriteRawTag(88);
            output.WriteInt32(Priority);
          }
          if (CategoryId != 0) {
            output.WriteRawTag(96);
            output.WriteInt32(CategoryId);
          }
          if (Cursor.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(Cursor);
          }
          if (AccountType != 0) {
            output.WriteRawTag(112);
            output.WriteInt32(AccountType);
          }
          if (AggregateSession != false) {
            output.WriteRawTag(120);
            output.WriteBool(AggregateSession);
          }
          if (JumpCategoryId != 0) {
            output.WriteRawTag(128, 1);
            output.WriteInt32(JumpCategoryId);
          }
          if (ExpireAt != 0L) {
            output.WriteRawTag(136, 1);
            output.WriteInt64(ExpireAt);
          }
          if (EffectiveFrom != 0L) {
            output.WriteRawTag(144, 1);
            output.WriteInt64(EffectiveFrom);
          }
          if (StrTargetId.Length != 0) {
            output.WriteRawTag(154, 1);
            output.WriteString(StrTargetId);
          }
          remindBody_.WriteTo(output, _repeated_remindBody_codec);
          if (TargetReadSeqId != 0L) {
            output.WriteRawTag(168, 1);
            output.WriteInt64(TargetReadSeqId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (target_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
          }
          if (MaxSeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxSeqId);
          }
          if (ReadSeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReadSeqId);
          }
          if (UnreadMsgCount != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnreadMsgCount);
          }
          size += latestMessage_.CalculateSize(_repeated_latestMessage_codec);
          if (ChatTargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChatTargetType);
          }
          if (TargetId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetId);
          }
          if (ActiveTime != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ActiveTime);
          }
          if (Priority != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
          }
          if (CategoryId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(CategoryId);
          }
          if (Cursor.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Cursor);
          }
          if (AccountType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(AccountType);
          }
          if (AggregateSession != false) {
            size += 1 + 1;
          }
          if (JumpCategoryId != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(JumpCategoryId);
          }
          if (ExpireAt != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(ExpireAt);
          }
          if (EffectiveFrom != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(EffectiveFrom);
          }
          if (StrTargetId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(StrTargetId);
          }
          size += remindBody_.CalculateSize(_repeated_remindBody_codec);
          if (TargetReadSeqId != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(TargetReadSeqId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ChatSession other) {
          if (other == null) {
            return;
          }
          if (other.target_ != null) {
            if (target_ == null) {
              Target = new global::AcFunDanmu.Im.Basic.Types.User();
            }
            Target.MergeFrom(other.Target);
          }
          if (other.MaxSeqId != 0L) {
            MaxSeqId = other.MaxSeqId;
          }
          if (other.ReadSeqId != 0L) {
            ReadSeqId = other.ReadSeqId;
          }
          if (other.UnreadMsgCount != 0) {
            UnreadMsgCount = other.UnreadMsgCount;
          }
          latestMessage_.Add(other.latestMessage_);
          if (other.ChatTargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) {
            ChatTargetType = other.ChatTargetType;
          }
          if (other.TargetId != 0L) {
            TargetId = other.TargetId;
          }
          if (other.ActiveTime != 0L) {
            ActiveTime = other.ActiveTime;
          }
          if (other.Priority != 0) {
            Priority = other.Priority;
          }
          if (other.CategoryId != 0) {
            CategoryId = other.CategoryId;
          }
          if (other.Cursor.Length != 0) {
            Cursor = other.Cursor;
          }
          if (other.AccountType != 0) {
            AccountType = other.AccountType;
          }
          if (other.AggregateSession != false) {
            AggregateSession = other.AggregateSession;
          }
          if (other.JumpCategoryId != 0) {
            JumpCategoryId = other.JumpCategoryId;
          }
          if (other.ExpireAt != 0L) {
            ExpireAt = other.ExpireAt;
          }
          if (other.EffectiveFrom != 0L) {
            EffectiveFrom = other.EffectiveFrom;
          }
          if (other.StrTargetId.Length != 0) {
            StrTargetId = other.StrTargetId;
          }
          remindBody_.Add(other.remindBody_);
          if (other.TargetReadSeqId != 0L) {
            TargetReadSeqId = other.TargetReadSeqId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (target_ == null) {
                  Target = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                input.ReadMessage(Target);
                break;
              }
              case 16: {
                MaxSeqId = input.ReadInt64();
                break;
              }
              case 24: {
                ReadSeqId = input.ReadInt64();
                break;
              }
              case 32: {
                UnreadMsgCount = input.ReadInt32();
                break;
              }
              case 42: {
                latestMessage_.AddEntriesFrom(input, _repeated_latestMessage_codec);
                break;
              }
              case 64: {
                ChatTargetType = (global::AcFunDanmu.Im.Message.Types.ChatTargetType) input.ReadEnum();
                break;
              }
              case 72: {
                TargetId = input.ReadInt64();
                break;
              }
              case 80: {
                ActiveTime = input.ReadInt64();
                break;
              }
              case 88: {
                Priority = input.ReadInt32();
                break;
              }
              case 96: {
                CategoryId = input.ReadInt32();
                break;
              }
              case 106: {
                Cursor = input.ReadString();
                break;
              }
              case 112: {
                AccountType = input.ReadInt32();
                break;
              }
              case 120: {
                AggregateSession = input.ReadBool();
                break;
              }
              case 128: {
                JumpCategoryId = input.ReadInt32();
                break;
              }
              case 136: {
                ExpireAt = input.ReadInt64();
                break;
              }
              case 144: {
                EffectiveFrom = input.ReadInt64();
                break;
              }
              case 154: {
                StrTargetId = input.ReadString();
                break;
              }
              case 162: {
                remindBody_.AddEntriesFrom(input, _repeated_remindBody_codec);
                break;
              }
              case 168: {
                TargetReadSeqId = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Reminder : pb::IMessage<Reminder> {
        private static readonly pb::MessageParser<Reminder> _parser = new pb::MessageParser<Reminder>(() => new Reminder());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Reminder> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Reminder() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Reminder(Reminder other) : this() {
          originText_ = other.originText_;
          remindBody_ = other.remindBody_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Reminder Clone() {
          return new Reminder(this);
        }

        /// <summary>Field number for the "originText" field.</summary>
        public const int OriginTextFieldNumber = 1;
        private string originText_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OriginText {
          get { return originText_; }
          set {
            originText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "remindBody" field.</summary>
        public const int RemindBodyFieldNumber = 2;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Message.Types.RemindBody> _repeated_remindBody_codec
            = pb::FieldCodec.ForMessage(18, global::AcFunDanmu.Im.Message.Types.RemindBody.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.RemindBody> remindBody_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.RemindBody>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.RemindBody> RemindBody {
          get { return remindBody_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Reminder);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Reminder other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OriginText != other.OriginText) return false;
          if(!remindBody_.Equals(other.remindBody_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OriginText.Length != 0) hash ^= OriginText.GetHashCode();
          hash ^= remindBody_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OriginText.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(OriginText);
          }
          remindBody_.WriteTo(output, _repeated_remindBody_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OriginText.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginText);
          }
          size += remindBody_.CalculateSize(_repeated_remindBody_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Reminder other) {
          if (other == null) {
            return;
          }
          if (other.OriginText.Length != 0) {
            OriginText = other.OriginText;
          }
          remindBody_.Add(other.remindBody_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                OriginText = input.ReadString();
                break;
              }
              case 18: {
                remindBody_.AddEntriesFrom(input, _repeated_remindBody_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class RemindBody : pb::IMessage<RemindBody> {
        private static readonly pb::MessageParser<RemindBody> _parser = new pb::MessageParser<RemindBody>(() => new RemindBody());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RemindBody> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RemindBody() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RemindBody(RemindBody other) : this() {
          remindType_ = other.remindType_;
          seqId_ = other.seqId_;
          targetId_ = other.targetId_;
          userName_ = other.userName_;
          startIndex_ = other.startIndex_;
          length_ = other.length_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RemindBody Clone() {
          return new RemindBody(this);
        }

        /// <summary>Field number for the "remindType" field.</summary>
        public const int RemindTypeFieldNumber = 1;
        private global::AcFunDanmu.Im.Message.Types.RemindBody.Types.RemindType remindType_ = global::AcFunDanmu.Im.Message.Types.RemindBody.Types.RemindType.Unknown;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Message.Types.RemindBody.Types.RemindType RemindType {
          get { return remindType_; }
          set {
            remindType_ = value;
          }
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 2;
        private long seqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long SeqId {
          get { return seqId_; }
          set {
            seqId_ = value;
          }
        }

        /// <summary>Field number for the "targetId" field.</summary>
        public const int TargetIdFieldNumber = 3;
        private long targetId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TargetId {
          get { return targetId_; }
          set {
            targetId_ = value;
          }
        }

        /// <summary>Field number for the "userName" field.</summary>
        public const int UserNameFieldNumber = 4;
        private string userName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UserName {
          get { return userName_; }
          set {
            userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "startIndex" field.</summary>
        public const int StartIndexFieldNumber = 5;
        private int startIndex_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int StartIndex {
          get { return startIndex_; }
          set {
            startIndex_ = value;
          }
        }

        /// <summary>Field number for the "length" field.</summary>
        public const int LengthFieldNumber = 6;
        private int length_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Length {
          get { return length_; }
          set {
            length_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RemindBody);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RemindBody other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RemindType != other.RemindType) return false;
          if (SeqId != other.SeqId) return false;
          if (TargetId != other.TargetId) return false;
          if (UserName != other.UserName) return false;
          if (StartIndex != other.StartIndex) return false;
          if (Length != other.Length) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (RemindType != global::AcFunDanmu.Im.Message.Types.RemindBody.Types.RemindType.Unknown) hash ^= RemindType.GetHashCode();
          if (SeqId != 0L) hash ^= SeqId.GetHashCode();
          if (TargetId != 0L) hash ^= TargetId.GetHashCode();
          if (UserName.Length != 0) hash ^= UserName.GetHashCode();
          if (StartIndex != 0) hash ^= StartIndex.GetHashCode();
          if (Length != 0) hash ^= Length.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (RemindType != global::AcFunDanmu.Im.Message.Types.RemindBody.Types.RemindType.Unknown) {
            output.WriteRawTag(8);
            output.WriteEnum((int) RemindType);
          }
          if (SeqId != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(SeqId);
          }
          if (TargetId != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(TargetId);
          }
          if (UserName.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(UserName);
          }
          if (StartIndex != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(StartIndex);
          }
          if (Length != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(Length);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (RemindType != global::AcFunDanmu.Im.Message.Types.RemindBody.Types.RemindType.Unknown) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RemindType);
          }
          if (SeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeqId);
          }
          if (TargetId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetId);
          }
          if (UserName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
          }
          if (StartIndex != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
          }
          if (Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RemindBody other) {
          if (other == null) {
            return;
          }
          if (other.RemindType != global::AcFunDanmu.Im.Message.Types.RemindBody.Types.RemindType.Unknown) {
            RemindType = other.RemindType;
          }
          if (other.SeqId != 0L) {
            SeqId = other.SeqId;
          }
          if (other.TargetId != 0L) {
            TargetId = other.TargetId;
          }
          if (other.UserName.Length != 0) {
            UserName = other.UserName;
          }
          if (other.StartIndex != 0) {
            StartIndex = other.StartIndex;
          }
          if (other.Length != 0) {
            Length = other.Length;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                RemindType = (global::AcFunDanmu.Im.Message.Types.RemindBody.Types.RemindType) input.ReadEnum();
                break;
              }
              case 16: {
                SeqId = input.ReadInt64();
                break;
              }
              case 24: {
                TargetId = input.ReadInt64();
                break;
              }
              case 34: {
                UserName = input.ReadString();
                break;
              }
              case 40: {
                StartIndex = input.ReadInt32();
                break;
              }
              case 48: {
                Length = input.ReadInt32();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the RemindBody message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum RemindType {
            [pbr::OriginalName("UNKNOWN")] Unknown = 0,
            [pbr::OriginalName("AT_ALL")] AtAll = 1,
            [pbr::OriginalName("AT_USER")] AtUser = 2,
            [pbr::OriginalName("GROUP_BULLETIN")] GroupBulletin = 3,
            [pbr::OriginalName("RECEIPT_MESSAGE")] ReceiptMessage = 4,
            [pbr::OriginalName("GROUP_JOIN_REQUEST")] GroupJoinRequest = 5,
          }

        }
        #endregion

      }

      public sealed partial class ChatTarget : pb::IMessage<ChatTarget> {
        private static readonly pb::MessageParser<ChatTarget> _parser = new pb::MessageParser<ChatTarget>(() => new ChatTarget());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ChatTarget> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChatTarget() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChatTarget(ChatTarget other) : this() {
          targetId_ = other.targetId_;
          targetType_ = other.targetType_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChatTarget Clone() {
          return new ChatTarget(this);
        }

        /// <summary>Field number for the "targetId" field.</summary>
        public const int TargetIdFieldNumber = 1;
        private string targetId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TargetId {
          get { return targetId_; }
          set {
            targetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "targetType" field.</summary>
        public const int TargetTypeFieldNumber = 2;
        private global::AcFunDanmu.Im.Message.Types.ChatTargetType targetType_ = global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Message.Types.ChatTargetType TargetType {
          get { return targetType_; }
          set {
            targetType_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ChatTarget);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ChatTarget other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TargetId != other.TargetId) return false;
          if (TargetType != other.TargetType) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TargetId.Length != 0) hash ^= TargetId.GetHashCode();
          if (TargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) hash ^= TargetType.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TargetId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TargetId);
          }
          if (TargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) {
            output.WriteRawTag(16);
            output.WriteEnum((int) TargetType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TargetId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetId);
          }
          if (TargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TargetType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ChatTarget other) {
          if (other == null) {
            return;
          }
          if (other.TargetId.Length != 0) {
            TargetId = other.TargetId;
          }
          if (other.TargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) {
            TargetType = other.TargetType;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TargetId = input.ReadString();
                break;
              }
              case 16: {
                TargetType = (global::AcFunDanmu.Im.Message.Types.ChatTargetType) input.ReadEnum();
                break;
              }
            }
          }
        }

      }

      public sealed partial class SessionListResponse : pb::IMessage<SessionListResponse> {
        private static readonly pb::MessageParser<SessionListResponse> _parser = new pb::MessageParser<SessionListResponse>(() => new SessionListResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionListResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[11]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionListResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionListResponse(SessionListResponse other) : this() {
          syncCookie_ = other.syncCookie_ != null ? other.syncCookie_.Clone() : null;
          sessions_ = other.sessions_.Clone();
          notFullFetch_ = other.notFullFetch_;
          serverTime_ = other.serverTime_;
          clearLocalData_ = other.clearLocalData_;
          categoryId_ = other.categoryId_;
          clientDataStatus_ = other.clientDataStatus_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionListResponse Clone() {
          return new SessionListResponse(this);
        }

        /// <summary>Field number for the "syncCookie" field.</summary>
        public const int SyncCookieFieldNumber = 1;
        private global::AcFunDanmu.Im.Basic.Types.SyncCookie syncCookie_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.SyncCookie SyncCookie {
          get { return syncCookie_; }
          set {
            syncCookie_ = value;
          }
        }

        /// <summary>Field number for the "sessions" field.</summary>
        public const int SessionsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Message.Types.ChatSession> _repeated_sessions_codec
            = pb::FieldCodec.ForMessage(18, global::AcFunDanmu.Im.Message.Types.ChatSession.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.ChatSession> sessions_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.ChatSession>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.ChatSession> Sessions {
          get { return sessions_; }
        }

        /// <summary>Field number for the "notFullFetch" field.</summary>
        public const int NotFullFetchFieldNumber = 3;
        private bool notFullFetch_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool NotFullFetch {
          get { return notFullFetch_; }
          set {
            notFullFetch_ = value;
          }
        }

        /// <summary>Field number for the "serverTime" field.</summary>
        public const int ServerTimeFieldNumber = 4;
        private long serverTime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ServerTime {
          get { return serverTime_; }
          set {
            serverTime_ = value;
          }
        }

        /// <summary>Field number for the "clearLocalData" field.</summary>
        public const int ClearLocalDataFieldNumber = 5;
        private bool clearLocalData_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ClearLocalData {
          get { return clearLocalData_; }
          set {
            clearLocalData_ = value;
          }
        }

        /// <summary>Field number for the "categoryId" field.</summary>
        public const int CategoryIdFieldNumber = 6;
        private int categoryId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CategoryId {
          get { return categoryId_; }
          set {
            categoryId_ = value;
          }
        }

        /// <summary>Field number for the "clientDataStatus" field.</summary>
        public const int ClientDataStatusFieldNumber = 7;
        private int clientDataStatus_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ClientDataStatus {
          get { return clientDataStatus_; }
          set {
            clientDataStatus_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionListResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionListResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(SyncCookie, other.SyncCookie)) return false;
          if(!sessions_.Equals(other.sessions_)) return false;
          if (NotFullFetch != other.NotFullFetch) return false;
          if (ServerTime != other.ServerTime) return false;
          if (ClearLocalData != other.ClearLocalData) return false;
          if (CategoryId != other.CategoryId) return false;
          if (ClientDataStatus != other.ClientDataStatus) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (syncCookie_ != null) hash ^= SyncCookie.GetHashCode();
          hash ^= sessions_.GetHashCode();
          if (NotFullFetch != false) hash ^= NotFullFetch.GetHashCode();
          if (ServerTime != 0L) hash ^= ServerTime.GetHashCode();
          if (ClearLocalData != false) hash ^= ClearLocalData.GetHashCode();
          if (CategoryId != 0) hash ^= CategoryId.GetHashCode();
          if (ClientDataStatus != 0) hash ^= ClientDataStatus.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (syncCookie_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(SyncCookie);
          }
          sessions_.WriteTo(output, _repeated_sessions_codec);
          if (NotFullFetch != false) {
            output.WriteRawTag(24);
            output.WriteBool(NotFullFetch);
          }
          if (ServerTime != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(ServerTime);
          }
          if (ClearLocalData != false) {
            output.WriteRawTag(40);
            output.WriteBool(ClearLocalData);
          }
          if (CategoryId != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(CategoryId);
          }
          if (ClientDataStatus != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(ClientDataStatus);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (syncCookie_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SyncCookie);
          }
          size += sessions_.CalculateSize(_repeated_sessions_codec);
          if (NotFullFetch != false) {
            size += 1 + 1;
          }
          if (ServerTime != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ServerTime);
          }
          if (ClearLocalData != false) {
            size += 1 + 1;
          }
          if (CategoryId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(CategoryId);
          }
          if (ClientDataStatus != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientDataStatus);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionListResponse other) {
          if (other == null) {
            return;
          }
          if (other.syncCookie_ != null) {
            if (syncCookie_ == null) {
              SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
            }
            SyncCookie.MergeFrom(other.SyncCookie);
          }
          sessions_.Add(other.sessions_);
          if (other.NotFullFetch != false) {
            NotFullFetch = other.NotFullFetch;
          }
          if (other.ServerTime != 0L) {
            ServerTime = other.ServerTime;
          }
          if (other.ClearLocalData != false) {
            ClearLocalData = other.ClearLocalData;
          }
          if (other.CategoryId != 0) {
            CategoryId = other.CategoryId;
          }
          if (other.ClientDataStatus != 0) {
            ClientDataStatus = other.ClientDataStatus;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (syncCookie_ == null) {
                  SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                }
                input.ReadMessage(SyncCookie);
                break;
              }
              case 18: {
                sessions_.AddEntriesFrom(input, _repeated_sessions_codec);
                break;
              }
              case 24: {
                NotFullFetch = input.ReadBool();
                break;
              }
              case 32: {
                ServerTime = input.ReadInt64();
                break;
              }
              case 40: {
                ClearLocalData = input.ReadBool();
                break;
              }
              case 48: {
                CategoryId = input.ReadInt32();
                break;
              }
              case 56: {
                ClientDataStatus = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class SessionPageListRequest : pb::IMessage<SessionPageListRequest> {
        private static readonly pb::MessageParser<SessionPageListRequest> _parser = new pb::MessageParser<SessionPageListRequest>(() => new SessionPageListRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionPageListRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[12]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionPageListRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionPageListRequest(SessionPageListRequest other) : this() {
          cursor_ = other.cursor_;
          count_ = other.count_;
          categoryId_ = other.categoryId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionPageListRequest Clone() {
          return new SessionPageListRequest(this);
        }

        /// <summary>Field number for the "cursor" field.</summary>
        public const int CursorFieldNumber = 1;
        private string cursor_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Cursor {
          get { return cursor_; }
          set {
            cursor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "count" field.</summary>
        public const int CountFieldNumber = 2;
        private int count_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Count {
          get { return count_; }
          set {
            count_ = value;
          }
        }

        /// <summary>Field number for the "categoryId" field.</summary>
        public const int CategoryIdFieldNumber = 3;
        private int categoryId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CategoryId {
          get { return categoryId_; }
          set {
            categoryId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionPageListRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionPageListRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Cursor != other.Cursor) return false;
          if (Count != other.Count) return false;
          if (CategoryId != other.CategoryId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Cursor.Length != 0) hash ^= Cursor.GetHashCode();
          if (Count != 0) hash ^= Count.GetHashCode();
          if (CategoryId != 0) hash ^= CategoryId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Cursor.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Cursor);
          }
          if (Count != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Count);
          }
          if (CategoryId != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(CategoryId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Cursor.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Cursor);
          }
          if (Count != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
          }
          if (CategoryId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(CategoryId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionPageListRequest other) {
          if (other == null) {
            return;
          }
          if (other.Cursor.Length != 0) {
            Cursor = other.Cursor;
          }
          if (other.Count != 0) {
            Count = other.Count;
          }
          if (other.CategoryId != 0) {
            CategoryId = other.CategoryId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Cursor = input.ReadString();
                break;
              }
              case 16: {
                Count = input.ReadInt32();
                break;
              }
              case 24: {
                CategoryId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class SessionPageListResponse : pb::IMessage<SessionPageListResponse> {
        private static readonly pb::MessageParser<SessionPageListResponse> _parser = new pb::MessageParser<SessionPageListResponse>(() => new SessionPageListResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionPageListResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[13]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionPageListResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionPageListResponse(SessionPageListResponse other) : this() {
          hasMore_ = other.hasMore_;
          sessions_ = other.sessions_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionPageListResponse Clone() {
          return new SessionPageListResponse(this);
        }

        /// <summary>Field number for the "hasMore" field.</summary>
        public const int HasMoreFieldNumber = 1;
        private bool hasMore_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasMore {
          get { return hasMore_; }
          set {
            hasMore_ = value;
          }
        }

        /// <summary>Field number for the "sessions" field.</summary>
        public const int SessionsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Message.Types.ChatSession> _repeated_sessions_codec
            = pb::FieldCodec.ForMessage(18, global::AcFunDanmu.Im.Message.Types.ChatSession.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.ChatSession> sessions_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.ChatSession>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.ChatSession> Sessions {
          get { return sessions_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionPageListResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionPageListResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (HasMore != other.HasMore) return false;
          if(!sessions_.Equals(other.sessions_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasMore != false) hash ^= HasMore.GetHashCode();
          hash ^= sessions_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (HasMore != false) {
            output.WriteRawTag(8);
            output.WriteBool(HasMore);
          }
          sessions_.WriteTo(output, _repeated_sessions_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasMore != false) {
            size += 1 + 1;
          }
          size += sessions_.CalculateSize(_repeated_sessions_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionPageListResponse other) {
          if (other == null) {
            return;
          }
          if (other.HasMore != false) {
            HasMore = other.HasMore;
          }
          sessions_.Add(other.sessions_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                HasMore = input.ReadBool();
                break;
              }
              case 18: {
                sessions_.AddEntriesFrom(input, _repeated_sessions_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class SessionRemoveRequest : pb::IMessage<SessionRemoveRequest> {
        private static readonly pb::MessageParser<SessionRemoveRequest> _parser = new pb::MessageParser<SessionRemoveRequest>(() => new SessionRemoveRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionRemoveRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[14]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionRemoveRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionRemoveRequest(SessionRemoveRequest other) : this() {
          targetId_ = other.targetId_;
          chatTargetType_ = other.chatTargetType_;
          categoryId_ = other.categoryId_;
          strTargetId_ = other.strTargetId_;
          notCleanAllMessages_ = other.notCleanAllMessages_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionRemoveRequest Clone() {
          return new SessionRemoveRequest(this);
        }

        /// <summary>Field number for the "targetId" field.</summary>
        public const int TargetIdFieldNumber = 1;
        private long targetId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TargetId {
          get { return targetId_; }
          set {
            targetId_ = value;
          }
        }

        /// <summary>Field number for the "chatTargetType" field.</summary>
        public const int ChatTargetTypeFieldNumber = 2;
        private global::AcFunDanmu.Im.Message.Types.ChatTargetType chatTargetType_ = global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Message.Types.ChatTargetType ChatTargetType {
          get { return chatTargetType_; }
          set {
            chatTargetType_ = value;
          }
        }

        /// <summary>Field number for the "categoryId" field.</summary>
        public const int CategoryIdFieldNumber = 3;
        private int categoryId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CategoryId {
          get { return categoryId_; }
          set {
            categoryId_ = value;
          }
        }

        /// <summary>Field number for the "strTargetId" field.</summary>
        public const int StrTargetIdFieldNumber = 4;
        private string strTargetId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StrTargetId {
          get { return strTargetId_; }
          set {
            strTargetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "notCleanAllMessages" field.</summary>
        public const int NotCleanAllMessagesFieldNumber = 5;
        private bool notCleanAllMessages_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool NotCleanAllMessages {
          get { return notCleanAllMessages_; }
          set {
            notCleanAllMessages_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionRemoveRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionRemoveRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TargetId != other.TargetId) return false;
          if (ChatTargetType != other.ChatTargetType) return false;
          if (CategoryId != other.CategoryId) return false;
          if (StrTargetId != other.StrTargetId) return false;
          if (NotCleanAllMessages != other.NotCleanAllMessages) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TargetId != 0L) hash ^= TargetId.GetHashCode();
          if (ChatTargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) hash ^= ChatTargetType.GetHashCode();
          if (CategoryId != 0) hash ^= CategoryId.GetHashCode();
          if (StrTargetId.Length != 0) hash ^= StrTargetId.GetHashCode();
          if (NotCleanAllMessages != false) hash ^= NotCleanAllMessages.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TargetId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(TargetId);
          }
          if (ChatTargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) {
            output.WriteRawTag(16);
            output.WriteEnum((int) ChatTargetType);
          }
          if (CategoryId != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(CategoryId);
          }
          if (StrTargetId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(StrTargetId);
          }
          if (NotCleanAllMessages != false) {
            output.WriteRawTag(40);
            output.WriteBool(NotCleanAllMessages);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TargetId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetId);
          }
          if (ChatTargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChatTargetType);
          }
          if (CategoryId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(CategoryId);
          }
          if (StrTargetId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StrTargetId);
          }
          if (NotCleanAllMessages != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionRemoveRequest other) {
          if (other == null) {
            return;
          }
          if (other.TargetId != 0L) {
            TargetId = other.TargetId;
          }
          if (other.ChatTargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) {
            ChatTargetType = other.ChatTargetType;
          }
          if (other.CategoryId != 0) {
            CategoryId = other.CategoryId;
          }
          if (other.StrTargetId.Length != 0) {
            StrTargetId = other.StrTargetId;
          }
          if (other.NotCleanAllMessages != false) {
            NotCleanAllMessages = other.NotCleanAllMessages;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                TargetId = input.ReadInt64();
                break;
              }
              case 16: {
                ChatTargetType = (global::AcFunDanmu.Im.Message.Types.ChatTargetType) input.ReadEnum();
                break;
              }
              case 24: {
                CategoryId = input.ReadInt32();
                break;
              }
              case 34: {
                StrTargetId = input.ReadString();
                break;
              }
              case 40: {
                NotCleanAllMessages = input.ReadBool();
                break;
              }
            }
          }
        }

      }

      public sealed partial class SessionRemoveResponse : pb::IMessage<SessionRemoveResponse> {
        private static readonly pb::MessageParser<SessionRemoveResponse> _parser = new pb::MessageParser<SessionRemoveResponse>(() => new SessionRemoveResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionRemoveResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[15]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionRemoveResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionRemoveResponse(SessionRemoveResponse other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionRemoveResponse Clone() {
          return new SessionRemoveResponse(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionRemoveResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionRemoveResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionRemoveResponse other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class SessionCleanRequest : pb::IMessage<SessionCleanRequest> {
        private static readonly pb::MessageParser<SessionCleanRequest> _parser = new pb::MessageParser<SessionCleanRequest>(() => new SessionCleanRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionCleanRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[16]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionCleanRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionCleanRequest(SessionCleanRequest other) : this() {
          chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionCleanRequest Clone() {
          return new SessionCleanRequest(this);
        }

        /// <summary>Field number for the "chatTarget" field.</summary>
        public const int ChatTargetFieldNumber = 1;
        private global::AcFunDanmu.Im.Message.Types.ChatTarget chatTarget_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Message.Types.ChatTarget ChatTarget {
          get { return chatTarget_; }
          set {
            chatTarget_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionCleanRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionCleanRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (chatTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ChatTarget);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (chatTarget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionCleanRequest other) {
          if (other == null) {
            return;
          }
          if (other.chatTarget_ != null) {
            if (chatTarget_ == null) {
              ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
            }
            ChatTarget.MergeFrom(other.ChatTarget);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
            }
          }
        }

      }

      public sealed partial class SessionCleanResponse : pb::IMessage<SessionCleanResponse> {
        private static readonly pb::MessageParser<SessionCleanResponse> _parser = new pb::MessageParser<SessionCleanResponse>(() => new SessionCleanResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionCleanResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[17]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionCleanResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionCleanResponse(SessionCleanResponse other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionCleanResponse Clone() {
          return new SessionCleanResponse(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionCleanResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionCleanResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionCleanResponse other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class MessageDeleteRequest : pb::IMessage<MessageDeleteRequest> {
        private static readonly pb::MessageParser<MessageDeleteRequest> _parser = new pb::MessageParser<MessageDeleteRequest>(() => new MessageDeleteRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageDeleteRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[18]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageDeleteRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageDeleteRequest(MessageDeleteRequest other) : this() {
          targetId_ = other.targetId_;
          chatTargetType_ = other.chatTargetType_;
          seqId_ = other.seqId_.Clone();
          strTargetId_ = other.strTargetId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageDeleteRequest Clone() {
          return new MessageDeleteRequest(this);
        }

        /// <summary>Field number for the "targetId" field.</summary>
        public const int TargetIdFieldNumber = 1;
        private long targetId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TargetId {
          get { return targetId_; }
          set {
            targetId_ = value;
          }
        }

        /// <summary>Field number for the "chatTargetType" field.</summary>
        public const int ChatTargetTypeFieldNumber = 2;
        private global::AcFunDanmu.Im.Message.Types.ChatTargetType chatTargetType_ = global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Message.Types.ChatTargetType ChatTargetType {
          get { return chatTargetType_; }
          set {
            chatTargetType_ = value;
          }
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 3;
        private static readonly pb::FieldCodec<long> _repeated_seqId_codec
            = pb::FieldCodec.ForInt64(26);
        private readonly pbc::RepeatedField<long> seqId_ = new pbc::RepeatedField<long>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> SeqId {
          get { return seqId_; }
        }

        /// <summary>Field number for the "strTargetId" field.</summary>
        public const int StrTargetIdFieldNumber = 4;
        private string strTargetId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StrTargetId {
          get { return strTargetId_; }
          set {
            strTargetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageDeleteRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageDeleteRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TargetId != other.TargetId) return false;
          if (ChatTargetType != other.ChatTargetType) return false;
          if(!seqId_.Equals(other.seqId_)) return false;
          if (StrTargetId != other.StrTargetId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TargetId != 0L) hash ^= TargetId.GetHashCode();
          if (ChatTargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) hash ^= ChatTargetType.GetHashCode();
          hash ^= seqId_.GetHashCode();
          if (StrTargetId.Length != 0) hash ^= StrTargetId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TargetId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(TargetId);
          }
          if (ChatTargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) {
            output.WriteRawTag(16);
            output.WriteEnum((int) ChatTargetType);
          }
          seqId_.WriteTo(output, _repeated_seqId_codec);
          if (StrTargetId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(StrTargetId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TargetId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetId);
          }
          if (ChatTargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChatTargetType);
          }
          size += seqId_.CalculateSize(_repeated_seqId_codec);
          if (StrTargetId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StrTargetId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageDeleteRequest other) {
          if (other == null) {
            return;
          }
          if (other.TargetId != 0L) {
            TargetId = other.TargetId;
          }
          if (other.ChatTargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) {
            ChatTargetType = other.ChatTargetType;
          }
          seqId_.Add(other.seqId_);
          if (other.StrTargetId.Length != 0) {
            StrTargetId = other.StrTargetId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                TargetId = input.ReadInt64();
                break;
              }
              case 16: {
                ChatTargetType = (global::AcFunDanmu.Im.Message.Types.ChatTargetType) input.ReadEnum();
                break;
              }
              case 26:
              case 24: {
                seqId_.AddEntriesFrom(input, _repeated_seqId_codec);
                break;
              }
              case 34: {
                StrTargetId = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class MessageDeleteResponse : pb::IMessage<MessageDeleteResponse> {
        private static readonly pb::MessageParser<MessageDeleteResponse> _parser = new pb::MessageParser<MessageDeleteResponse>(() => new MessageDeleteResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageDeleteResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[19]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageDeleteResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageDeleteResponse(MessageDeleteResponse other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageDeleteResponse Clone() {
          return new MessageDeleteResponse(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageDeleteResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageDeleteResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageDeleteResponse other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class MessageCancelRequest : pb::IMessage<MessageCancelRequest> {
        private static readonly pb::MessageParser<MessageCancelRequest> _parser = new pb::MessageParser<MessageCancelRequest>(() => new MessageCancelRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageCancelRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[20]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageCancelRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageCancelRequest(MessageCancelRequest other) : this() {
          chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
          seqId_ = other.seqId_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageCancelRequest Clone() {
          return new MessageCancelRequest(this);
        }

        /// <summary>Field number for the "chatTarget" field.</summary>
        public const int ChatTargetFieldNumber = 1;
        private global::AcFunDanmu.Im.Message.Types.ChatTarget chatTarget_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Message.Types.ChatTarget ChatTarget {
          get { return chatTarget_; }
          set {
            chatTarget_ = value;
          }
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 2;
        private static readonly pb::FieldCodec<long> _repeated_seqId_codec
            = pb::FieldCodec.ForInt64(18);
        private readonly pbc::RepeatedField<long> seqId_ = new pbc::RepeatedField<long>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> SeqId {
          get { return seqId_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageCancelRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageCancelRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
          if(!seqId_.Equals(other.seqId_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
          hash ^= seqId_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (chatTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ChatTarget);
          }
          seqId_.WriteTo(output, _repeated_seqId_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (chatTarget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
          }
          size += seqId_.CalculateSize(_repeated_seqId_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageCancelRequest other) {
          if (other == null) {
            return;
          }
          if (other.chatTarget_ != null) {
            if (chatTarget_ == null) {
              ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
            }
            ChatTarget.MergeFrom(other.ChatTarget);
          }
          seqId_.Add(other.seqId_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
              case 18:
              case 16: {
                seqId_.AddEntriesFrom(input, _repeated_seqId_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class MessageCancelResponse : pb::IMessage<MessageCancelResponse> {
        private static readonly pb::MessageParser<MessageCancelResponse> _parser = new pb::MessageParser<MessageCancelResponse>(() => new MessageCancelResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageCancelResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[21]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageCancelResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageCancelResponse(MessageCancelResponse other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageCancelResponse Clone() {
          return new MessageCancelResponse(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageCancelResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageCancelResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageCancelResponse other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class MessageClearRequest : pb::IMessage<MessageClearRequest> {
        private static readonly pb::MessageParser<MessageClearRequest> _parser = new pb::MessageParser<MessageClearRequest>(() => new MessageClearRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageClearRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[22]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageClearRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageClearRequest(MessageClearRequest other) : this() {
          chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageClearRequest Clone() {
          return new MessageClearRequest(this);
        }

        /// <summary>Field number for the "chatTarget" field.</summary>
        public const int ChatTargetFieldNumber = 1;
        private global::AcFunDanmu.Im.Message.Types.ChatTarget chatTarget_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Message.Types.ChatTarget ChatTarget {
          get { return chatTarget_; }
          set {
            chatTarget_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageClearRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageClearRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (chatTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ChatTarget);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (chatTarget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageClearRequest other) {
          if (other == null) {
            return;
          }
          if (other.chatTarget_ != null) {
            if (chatTarget_ == null) {
              ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
            }
            ChatTarget.MergeFrom(other.ChatTarget);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
            }
          }
        }

      }

      public sealed partial class MessageClearResponse : pb::IMessage<MessageClearResponse> {
        private static readonly pb::MessageParser<MessageClearResponse> _parser = new pb::MessageParser<MessageClearResponse>(() => new MessageClearResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageClearResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[23]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageClearResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageClearResponse(MessageClearResponse other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageClearResponse Clone() {
          return new MessageClearResponse(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageClearResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageClearResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageClearResponse other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class ReadSeqInfo : pb::IMessage<ReadSeqInfo> {
        private static readonly pb::MessageParser<ReadSeqInfo> _parser = new pb::MessageParser<ReadSeqInfo>(() => new ReadSeqInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ReadSeqInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[24]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReadSeqInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReadSeqInfo(ReadSeqInfo other) : this() {
          chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
          readSeq_ = other.readSeq_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReadSeqInfo Clone() {
          return new ReadSeqInfo(this);
        }

        /// <summary>Field number for the "chatTarget" field.</summary>
        public const int ChatTargetFieldNumber = 1;
        private global::AcFunDanmu.Im.Message.Types.ChatTarget chatTarget_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Message.Types.ChatTarget ChatTarget {
          get { return chatTarget_; }
          set {
            chatTarget_ = value;
          }
        }

        /// <summary>Field number for the "readSeq" field.</summary>
        public const int ReadSeqFieldNumber = 2;
        private long readSeq_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ReadSeq {
          get { return readSeq_; }
          set {
            readSeq_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ReadSeqInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ReadSeqInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
          if (ReadSeq != other.ReadSeq) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
          if (ReadSeq != 0L) hash ^= ReadSeq.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (chatTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ChatTarget);
          }
          if (ReadSeq != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(ReadSeq);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (chatTarget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
          }
          if (ReadSeq != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReadSeq);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ReadSeqInfo other) {
          if (other == null) {
            return;
          }
          if (other.chatTarget_ != null) {
            if (chatTarget_ == null) {
              ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
            }
            ChatTarget.MergeFrom(other.ChatTarget);
          }
          if (other.ReadSeq != 0L) {
            ReadSeq = other.ReadSeq;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
              case 16: {
                ReadSeq = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

      public sealed partial class MessageReadSeqRequest : pb::IMessage<MessageReadSeqRequest> {
        private static readonly pb::MessageParser<MessageReadSeqRequest> _parser = new pb::MessageParser<MessageReadSeqRequest>(() => new MessageReadSeqRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReadSeqRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[25]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadSeqRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadSeqRequest(MessageReadSeqRequest other) : this() {
          chatTarget_ = other.chatTarget_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadSeqRequest Clone() {
          return new MessageReadSeqRequest(this);
        }

        /// <summary>Field number for the "chatTarget" field.</summary>
        public const int ChatTargetFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Message.Types.ChatTarget> _repeated_chatTarget_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Message.Types.ChatTarget.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.ChatTarget> chatTarget_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.ChatTarget>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.ChatTarget> ChatTarget {
          get { return chatTarget_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReadSeqRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReadSeqRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!chatTarget_.Equals(other.chatTarget_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= chatTarget_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          chatTarget_.WriteTo(output, _repeated_chatTarget_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += chatTarget_.CalculateSize(_repeated_chatTarget_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReadSeqRequest other) {
          if (other == null) {
            return;
          }
          chatTarget_.Add(other.chatTarget_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                chatTarget_.AddEntriesFrom(input, _repeated_chatTarget_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class MessageReadSeqResponse : pb::IMessage<MessageReadSeqResponse> {
        private static readonly pb::MessageParser<MessageReadSeqResponse> _parser = new pb::MessageParser<MessageReadSeqResponse>(() => new MessageReadSeqResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReadSeqResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[26]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadSeqResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadSeqResponse(MessageReadSeqResponse other) : this() {
          readSeqInfo_ = other.readSeqInfo_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadSeqResponse Clone() {
          return new MessageReadSeqResponse(this);
        }

        /// <summary>Field number for the "readSeqInfo" field.</summary>
        public const int ReadSeqInfoFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Message.Types.ReadSeqInfo> _repeated_readSeqInfo_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Message.Types.ReadSeqInfo.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.ReadSeqInfo> readSeqInfo_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.ReadSeqInfo>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.ReadSeqInfo> ReadSeqInfo {
          get { return readSeqInfo_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReadSeqResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReadSeqResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!readSeqInfo_.Equals(other.readSeqInfo_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= readSeqInfo_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          readSeqInfo_.WriteTo(output, _repeated_readSeqInfo_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += readSeqInfo_.CalculateSize(_repeated_readSeqInfo_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReadSeqResponse other) {
          if (other == null) {
            return;
          }
          readSeqInfo_.Add(other.readSeqInfo_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                readSeqInfo_.AddEntriesFrom(input, _repeated_readSeqInfo_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class MessageReadPush : pb::IMessage<MessageReadPush> {
        private static readonly pb::MessageParser<MessageReadPush> _parser = new pb::MessageParser<MessageReadPush>(() => new MessageReadPush());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReadPush> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[27]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadPush() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadPush(MessageReadPush other) : this() {
          targetId_ = other.targetId_;
          readSeq_ = other.readSeq_;
          chatTargetType_ = other.chatTargetType_;
          strTargetId_ = other.strTargetId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadPush Clone() {
          return new MessageReadPush(this);
        }

        /// <summary>Field number for the "targetId" field.</summary>
        public const int TargetIdFieldNumber = 1;
        private long targetId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TargetId {
          get { return targetId_; }
          set {
            targetId_ = value;
          }
        }

        /// <summary>Field number for the "readSeq" field.</summary>
        public const int ReadSeqFieldNumber = 2;
        private long readSeq_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ReadSeq {
          get { return readSeq_; }
          set {
            readSeq_ = value;
          }
        }

        /// <summary>Field number for the "chatTargetType" field.</summary>
        public const int ChatTargetTypeFieldNumber = 3;
        private global::AcFunDanmu.Im.Message.Types.ChatTargetType chatTargetType_ = global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Message.Types.ChatTargetType ChatTargetType {
          get { return chatTargetType_; }
          set {
            chatTargetType_ = value;
          }
        }

        /// <summary>Field number for the "strTargetId" field.</summary>
        public const int StrTargetIdFieldNumber = 4;
        private string strTargetId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StrTargetId {
          get { return strTargetId_; }
          set {
            strTargetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReadPush);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReadPush other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TargetId != other.TargetId) return false;
          if (ReadSeq != other.ReadSeq) return false;
          if (ChatTargetType != other.ChatTargetType) return false;
          if (StrTargetId != other.StrTargetId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TargetId != 0L) hash ^= TargetId.GetHashCode();
          if (ReadSeq != 0L) hash ^= ReadSeq.GetHashCode();
          if (ChatTargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) hash ^= ChatTargetType.GetHashCode();
          if (StrTargetId.Length != 0) hash ^= StrTargetId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TargetId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(TargetId);
          }
          if (ReadSeq != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(ReadSeq);
          }
          if (ChatTargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) {
            output.WriteRawTag(24);
            output.WriteEnum((int) ChatTargetType);
          }
          if (StrTargetId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(StrTargetId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TargetId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetId);
          }
          if (ReadSeq != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReadSeq);
          }
          if (ChatTargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChatTargetType);
          }
          if (StrTargetId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StrTargetId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReadPush other) {
          if (other == null) {
            return;
          }
          if (other.TargetId != 0L) {
            TargetId = other.TargetId;
          }
          if (other.ReadSeq != 0L) {
            ReadSeq = other.ReadSeq;
          }
          if (other.ChatTargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) {
            ChatTargetType = other.ChatTargetType;
          }
          if (other.StrTargetId.Length != 0) {
            StrTargetId = other.StrTargetId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                TargetId = input.ReadInt64();
                break;
              }
              case 16: {
                ReadSeq = input.ReadInt64();
                break;
              }
              case 24: {
                ChatTargetType = (global::AcFunDanmu.Im.Message.Types.ChatTargetType) input.ReadEnum();
                break;
              }
              case 34: {
                StrTargetId = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class AllUnreadCountRequest : pb::IMessage<AllUnreadCountRequest> {
        private static readonly pb::MessageParser<AllUnreadCountRequest> _parser = new pb::MessageParser<AllUnreadCountRequest>(() => new AllUnreadCountRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AllUnreadCountRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[28]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AllUnreadCountRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AllUnreadCountRequest(AllUnreadCountRequest other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AllUnreadCountRequest Clone() {
          return new AllUnreadCountRequest(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AllUnreadCountRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AllUnreadCountRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AllUnreadCountRequest other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class AllUnreadCountResponse : pb::IMessage<AllUnreadCountResponse> {
        private static readonly pb::MessageParser<AllUnreadCountResponse> _parser = new pb::MessageParser<AllUnreadCountResponse>(() => new AllUnreadCountResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AllUnreadCountResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[29]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AllUnreadCountResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AllUnreadCountResponse(AllUnreadCountResponse other) : this() {
          allUnreadCount_ = other.allUnreadCount_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AllUnreadCountResponse Clone() {
          return new AllUnreadCountResponse(this);
        }

        /// <summary>Field number for the "allUnreadCount" field.</summary>
        public const int AllUnreadCountFieldNumber = 1;
        private int allUnreadCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int AllUnreadCount {
          get { return allUnreadCount_; }
          set {
            allUnreadCount_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AllUnreadCountResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AllUnreadCountResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AllUnreadCount != other.AllUnreadCount) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (AllUnreadCount != 0) hash ^= AllUnreadCount.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (AllUnreadCount != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(AllUnreadCount);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (AllUnreadCount != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(AllUnreadCount);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AllUnreadCountResponse other) {
          if (other == null) {
            return;
          }
          if (other.AllUnreadCount != 0) {
            AllUnreadCount = other.AllUnreadCount;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                AllUnreadCount = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class MessageReadAllRequest : pb::IMessage<MessageReadAllRequest> {
        private static readonly pb::MessageParser<MessageReadAllRequest> _parser = new pb::MessageParser<MessageReadAllRequest>(() => new MessageReadAllRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReadAllRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[30]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadAllRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadAllRequest(MessageReadAllRequest other) : this() {
          sessionCategoryId_ = other.sessionCategoryId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadAllRequest Clone() {
          return new MessageReadAllRequest(this);
        }

        /// <summary>Field number for the "sessionCategoryId" field.</summary>
        public const int SessionCategoryIdFieldNumber = 1;
        private int sessionCategoryId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int SessionCategoryId {
          get { return sessionCategoryId_; }
          set {
            sessionCategoryId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReadAllRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReadAllRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SessionCategoryId != other.SessionCategoryId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (SessionCategoryId != 0) hash ^= SessionCategoryId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (SessionCategoryId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(SessionCategoryId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (SessionCategoryId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionCategoryId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReadAllRequest other) {
          if (other == null) {
            return;
          }
          if (other.SessionCategoryId != 0) {
            SessionCategoryId = other.SessionCategoryId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                SessionCategoryId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class MessageReadAllResponse : pb::IMessage<MessageReadAllResponse> {
        private static readonly pb::MessageParser<MessageReadAllResponse> _parser = new pb::MessageParser<MessageReadAllResponse>(() => new MessageReadAllResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReadAllResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[31]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadAllResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadAllResponse(MessageReadAllResponse other) : this() {
          readAllTimestamp_ = other.readAllTimestamp_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReadAllResponse Clone() {
          return new MessageReadAllResponse(this);
        }

        /// <summary>Field number for the "readAllTimestamp" field.</summary>
        public const int ReadAllTimestampFieldNumber = 1;
        private long readAllTimestamp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ReadAllTimestamp {
          get { return readAllTimestamp_; }
          set {
            readAllTimestamp_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReadAllResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReadAllResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReadAllTimestamp != other.ReadAllTimestamp) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReadAllTimestamp != 0L) hash ^= ReadAllTimestamp.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ReadAllTimestamp != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(ReadAllTimestamp);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReadAllTimestamp != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReadAllTimestamp);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReadAllResponse other) {
          if (other == null) {
            return;
          }
          if (other.ReadAllTimestamp != 0L) {
            ReadAllTimestamp = other.ReadAllTimestamp;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReadAllTimestamp = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

      public sealed partial class SesionStickyOnTopRequest : pb::IMessage<SesionStickyOnTopRequest> {
        private static readonly pb::MessageParser<SesionStickyOnTopRequest> _parser = new pb::MessageParser<SesionStickyOnTopRequest>(() => new SesionStickyOnTopRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SesionStickyOnTopRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[32]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SesionStickyOnTopRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SesionStickyOnTopRequest(SesionStickyOnTopRequest other) : this() {
          chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
          stickyOnTop_ = other.stickyOnTop_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SesionStickyOnTopRequest Clone() {
          return new SesionStickyOnTopRequest(this);
        }

        /// <summary>Field number for the "chatTarget" field.</summary>
        public const int ChatTargetFieldNumber = 1;
        private global::AcFunDanmu.Im.Message.Types.ChatTarget chatTarget_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Message.Types.ChatTarget ChatTarget {
          get { return chatTarget_; }
          set {
            chatTarget_ = value;
          }
        }

        /// <summary>Field number for the "stickyOnTop" field.</summary>
        public const int StickyOnTopFieldNumber = 2;
        private bool stickyOnTop_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool StickyOnTop {
          get { return stickyOnTop_; }
          set {
            stickyOnTop_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SesionStickyOnTopRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SesionStickyOnTopRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
          if (StickyOnTop != other.StickyOnTop) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
          if (StickyOnTop != false) hash ^= StickyOnTop.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (chatTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ChatTarget);
          }
          if (StickyOnTop != false) {
            output.WriteRawTag(16);
            output.WriteBool(StickyOnTop);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (chatTarget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
          }
          if (StickyOnTop != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SesionStickyOnTopRequest other) {
          if (other == null) {
            return;
          }
          if (other.chatTarget_ != null) {
            if (chatTarget_ == null) {
              ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
            }
            ChatTarget.MergeFrom(other.ChatTarget);
          }
          if (other.StickyOnTop != false) {
            StickyOnTop = other.StickyOnTop;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
              case 16: {
                StickyOnTop = input.ReadBool();
                break;
              }
            }
          }
        }

      }

      public sealed partial class SessionStickyOnTopResponse : pb::IMessage<SessionStickyOnTopResponse> {
        private static readonly pb::MessageParser<SessionStickyOnTopResponse> _parser = new pb::MessageParser<SessionStickyOnTopResponse>(() => new SessionStickyOnTopResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionStickyOnTopResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[33]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionStickyOnTopResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionStickyOnTopResponse(SessionStickyOnTopResponse other) : this() {
          session_ = other.session_ != null ? other.session_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionStickyOnTopResponse Clone() {
          return new SessionStickyOnTopResponse(this);
        }

        /// <summary>Field number for the "session" field.</summary>
        public const int SessionFieldNumber = 1;
        private global::AcFunDanmu.Im.Message.Types.ChatSession session_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Message.Types.ChatSession Session {
          get { return session_; }
          set {
            session_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionStickyOnTopResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionStickyOnTopResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Session, other.Session)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (session_ != null) hash ^= Session.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (session_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Session);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (session_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Session);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionStickyOnTopResponse other) {
          if (other == null) {
            return;
          }
          if (other.session_ != null) {
            if (session_ == null) {
              Session = new global::AcFunDanmu.Im.Message.Types.ChatSession();
            }
            Session.MergeFrom(other.Session);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (session_ == null) {
                  Session = new global::AcFunDanmu.Im.Message.Types.ChatSession();
                }
                input.ReadMessage(Session);
                break;
              }
            }
          }
        }

      }

      public sealed partial class SessionRaw : pb::IMessage<SessionRaw> {
        private static readonly pb::MessageParser<SessionRaw> _parser = new pb::MessageParser<SessionRaw>(() => new SessionRaw());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionRaw> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[34]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionRaw() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionRaw(SessionRaw other) : this() {
          raw_ = other.raw_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionRaw Clone() {
          return new SessionRaw(this);
        }

        /// <summary>Field number for the "raw" field.</summary>
        public const int RawFieldNumber = 1;
        private static readonly pbc::MapField<string, pb::ByteString>.Codec _map_raw_codec
            = new pbc::MapField<string, pb::ByteString>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForBytes(18, pb::ByteString.Empty), 10);
        private readonly pbc::MapField<string, pb::ByteString> raw_ = new pbc::MapField<string, pb::ByteString>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, pb::ByteString> Raw {
          get { return raw_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionRaw);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionRaw other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!Raw.Equals(other.Raw)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= Raw.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          raw_.WriteTo(output, _map_raw_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += raw_.CalculateSize(_map_raw_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionRaw other) {
          if (other == null) {
            return;
          }
          raw_.Add(other.raw_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                raw_.AddEntriesFrom(input, _map_raw_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class MessageRecallRequest : pb::IMessage<MessageRecallRequest> {
        private static readonly pb::MessageParser<MessageRecallRequest> _parser = new pb::MessageParser<MessageRecallRequest>(() => new MessageRecallRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageRecallRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[35]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageRecallRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageRecallRequest(MessageRecallRequest other) : this() {
          chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
          seqId_ = other.seqId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageRecallRequest Clone() {
          return new MessageRecallRequest(this);
        }

        /// <summary>Field number for the "chatTarget" field.</summary>
        public const int ChatTargetFieldNumber = 1;
        private global::AcFunDanmu.Im.Message.Types.ChatTarget chatTarget_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Message.Types.ChatTarget ChatTarget {
          get { return chatTarget_; }
          set {
            chatTarget_ = value;
          }
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 2;
        private long seqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long SeqId {
          get { return seqId_; }
          set {
            seqId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageRecallRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageRecallRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
          if (SeqId != other.SeqId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
          if (SeqId != 0L) hash ^= SeqId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (chatTarget_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ChatTarget);
          }
          if (SeqId != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(SeqId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (chatTarget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
          }
          if (SeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeqId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageRecallRequest other) {
          if (other == null) {
            return;
          }
          if (other.chatTarget_ != null) {
            if (chatTarget_ == null) {
              ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
            }
            ChatTarget.MergeFrom(other.ChatTarget);
          }
          if (other.SeqId != 0L) {
            SeqId = other.SeqId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
              case 16: {
                SeqId = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

      public sealed partial class MessageRecallResponse : pb::IMessage<MessageRecallResponse> {
        private static readonly pb::MessageParser<MessageRecallResponse> _parser = new pb::MessageParser<MessageRecallResponse>(() => new MessageRecallResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageRecallResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[36]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageRecallResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageRecallResponse(MessageRecallResponse other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageRecallResponse Clone() {
          return new MessageRecallResponse(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageRecallResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageRecallResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageRecallResponse other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class MessageReceiptRequest : pb::IMessage<MessageReceiptRequest> {
        private static readonly pb::MessageParser<MessageReceiptRequest> _parser = new pb::MessageParser<MessageReceiptRequest>(() => new MessageReceiptRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReceiptRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[37]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptRequest(MessageReceiptRequest other) : this() {
          messageReceiptInfo_ = other.messageReceiptInfo_.Clone();
          chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptRequest Clone() {
          return new MessageReceiptRequest(this);
        }

        /// <summary>Field number for the "messageReceiptInfo" field.</summary>
        public const int MessageReceiptInfoFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Message.Types.MessageReceiptInfo> _repeated_messageReceiptInfo_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Message.Types.MessageReceiptInfo.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.MessageReceiptInfo> messageReceiptInfo_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.MessageReceiptInfo>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.MessageReceiptInfo> MessageReceiptInfo {
          get { return messageReceiptInfo_; }
        }

        /// <summary>Field number for the "chatTarget" field.</summary>
        public const int ChatTargetFieldNumber = 2;
        private global::AcFunDanmu.Im.Message.Types.ChatTarget chatTarget_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Message.Types.ChatTarget ChatTarget {
          get { return chatTarget_; }
          set {
            chatTarget_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReceiptRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReceiptRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!messageReceiptInfo_.Equals(other.messageReceiptInfo_)) return false;
          if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= messageReceiptInfo_.GetHashCode();
          if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          messageReceiptInfo_.WriteTo(output, _repeated_messageReceiptInfo_codec);
          if (chatTarget_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(ChatTarget);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += messageReceiptInfo_.CalculateSize(_repeated_messageReceiptInfo_codec);
          if (chatTarget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReceiptRequest other) {
          if (other == null) {
            return;
          }
          messageReceiptInfo_.Add(other.messageReceiptInfo_);
          if (other.chatTarget_ != null) {
            if (chatTarget_ == null) {
              ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
            }
            ChatTarget.MergeFrom(other.ChatTarget);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                messageReceiptInfo_.AddEntriesFrom(input, _repeated_messageReceiptInfo_codec);
                break;
              }
              case 18: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
            }
          }
        }

      }

      public sealed partial class MessageReceiptResponse : pb::IMessage<MessageReceiptResponse> {
        private static readonly pb::MessageParser<MessageReceiptResponse> _parser = new pb::MessageParser<MessageReceiptResponse>(() => new MessageReceiptResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReceiptResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[38]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptResponse(MessageReceiptResponse other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptResponse Clone() {
          return new MessageReceiptResponse(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReceiptResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReceiptResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReceiptResponse other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class MessageReceiptInfo : pb::IMessage<MessageReceiptInfo> {
        private static readonly pb::MessageParser<MessageReceiptInfo> _parser = new pb::MessageParser<MessageReceiptInfo>(() => new MessageReceiptInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReceiptInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[39]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptInfo(MessageReceiptInfo other) : this() {
          readSeq_ = other.readSeq_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptInfo Clone() {
          return new MessageReceiptInfo(this);
        }

        /// <summary>Field number for the "readSeq" field.</summary>
        public const int ReadSeqFieldNumber = 1;
        private long readSeq_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ReadSeq {
          get { return readSeq_; }
          set {
            readSeq_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReceiptInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReceiptInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReadSeq != other.ReadSeq) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReadSeq != 0L) hash ^= ReadSeq.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ReadSeq != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(ReadSeq);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReadSeq != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReadSeq);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReceiptInfo other) {
          if (other == null) {
            return;
          }
          if (other.ReadSeq != 0L) {
            ReadSeq = other.ReadSeq;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReadSeq = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

      public sealed partial class MessageReceiptCountGetRequest : pb::IMessage<MessageReceiptCountGetRequest> {
        private static readonly pb::MessageParser<MessageReceiptCountGetRequest> _parser = new pb::MessageParser<MessageReceiptCountGetRequest>(() => new MessageReceiptCountGetRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReceiptCountGetRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[40]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptCountGetRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptCountGetRequest(MessageReceiptCountGetRequest other) : this() {
          seqId_ = other.seqId_.Clone();
          chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptCountGetRequest Clone() {
          return new MessageReceiptCountGetRequest(this);
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 1;
        private static readonly pb::FieldCodec<long> _repeated_seqId_codec
            = pb::FieldCodec.ForInt64(10);
        private readonly pbc::RepeatedField<long> seqId_ = new pbc::RepeatedField<long>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> SeqId {
          get { return seqId_; }
        }

        /// <summary>Field number for the "chatTarget" field.</summary>
        public const int ChatTargetFieldNumber = 2;
        private global::AcFunDanmu.Im.Message.Types.ChatTarget chatTarget_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Message.Types.ChatTarget ChatTarget {
          get { return chatTarget_; }
          set {
            chatTarget_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReceiptCountGetRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReceiptCountGetRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!seqId_.Equals(other.seqId_)) return false;
          if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= seqId_.GetHashCode();
          if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          seqId_.WriteTo(output, _repeated_seqId_codec);
          if (chatTarget_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(ChatTarget);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += seqId_.CalculateSize(_repeated_seqId_codec);
          if (chatTarget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReceiptCountGetRequest other) {
          if (other == null) {
            return;
          }
          seqId_.Add(other.seqId_);
          if (other.chatTarget_ != null) {
            if (chatTarget_ == null) {
              ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
            }
            ChatTarget.MergeFrom(other.ChatTarget);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 8: {
                seqId_.AddEntriesFrom(input, _repeated_seqId_codec);
                break;
              }
              case 18: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
            }
          }
        }

      }

      public sealed partial class MessageReceiptCountGetResponse : pb::IMessage<MessageReceiptCountGetResponse> {
        private static readonly pb::MessageParser<MessageReceiptCountGetResponse> _parser = new pb::MessageParser<MessageReceiptCountGetResponse>(() => new MessageReceiptCountGetResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReceiptCountGetResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[41]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptCountGetResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptCountGetResponse(MessageReceiptCountGetResponse other) : this() {
          status_ = other.status_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptCountGetResponse Clone() {
          return new MessageReceiptCountGetResponse(this);
        }

        /// <summary>Field number for the "status" field.</summary>
        public const int StatusFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Message.Types.MessageReceiptStatus> _repeated_status_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Message.Types.MessageReceiptStatus.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.MessageReceiptStatus> status_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.MessageReceiptStatus>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.MessageReceiptStatus> Status {
          get { return status_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReceiptCountGetResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReceiptCountGetResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!status_.Equals(other.status_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= status_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          status_.WriteTo(output, _repeated_status_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += status_.CalculateSize(_repeated_status_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReceiptCountGetResponse other) {
          if (other == null) {
            return;
          }
          status_.Add(other.status_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                status_.AddEntriesFrom(input, _repeated_status_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class MessageReceiptStatus : pb::IMessage<MessageReceiptStatus> {
        private static readonly pb::MessageParser<MessageReceiptStatus> _parser = new pb::MessageParser<MessageReceiptStatus>(() => new MessageReceiptStatus());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReceiptStatus> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[42]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptStatus() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptStatus(MessageReceiptStatus other) : this() {
          readCount_ = other.readCount_;
          unreadCount_ = other.unreadCount_;
          seqId_ = other.seqId_;
          serverTime_ = other.serverTime_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptStatus Clone() {
          return new MessageReceiptStatus(this);
        }

        /// <summary>Field number for the "readCount" field.</summary>
        public const int ReadCountFieldNumber = 1;
        private int readCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ReadCount {
          get { return readCount_; }
          set {
            readCount_ = value;
          }
        }

        /// <summary>Field number for the "unreadCount" field.</summary>
        public const int UnreadCountFieldNumber = 2;
        private int unreadCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UnreadCount {
          get { return unreadCount_; }
          set {
            unreadCount_ = value;
          }
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 3;
        private long seqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long SeqId {
          get { return seqId_; }
          set {
            seqId_ = value;
          }
        }

        /// <summary>Field number for the "serverTime" field.</summary>
        public const int ServerTimeFieldNumber = 4;
        private long serverTime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ServerTime {
          get { return serverTime_; }
          set {
            serverTime_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReceiptStatus);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReceiptStatus other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReadCount != other.ReadCount) return false;
          if (UnreadCount != other.UnreadCount) return false;
          if (SeqId != other.SeqId) return false;
          if (ServerTime != other.ServerTime) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReadCount != 0) hash ^= ReadCount.GetHashCode();
          if (UnreadCount != 0) hash ^= UnreadCount.GetHashCode();
          if (SeqId != 0L) hash ^= SeqId.GetHashCode();
          if (ServerTime != 0L) hash ^= ServerTime.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ReadCount != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(ReadCount);
          }
          if (UnreadCount != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(UnreadCount);
          }
          if (SeqId != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(SeqId);
          }
          if (ServerTime != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(ServerTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReadCount != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReadCount);
          }
          if (UnreadCount != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnreadCount);
          }
          if (SeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeqId);
          }
          if (ServerTime != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ServerTime);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReceiptStatus other) {
          if (other == null) {
            return;
          }
          if (other.ReadCount != 0) {
            ReadCount = other.ReadCount;
          }
          if (other.UnreadCount != 0) {
            UnreadCount = other.UnreadCount;
          }
          if (other.SeqId != 0L) {
            SeqId = other.SeqId;
          }
          if (other.ServerTime != 0L) {
            ServerTime = other.ServerTime;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReadCount = input.ReadInt32();
                break;
              }
              case 16: {
                UnreadCount = input.ReadInt32();
                break;
              }
              case 24: {
                SeqId = input.ReadInt64();
                break;
              }
              case 32: {
                ServerTime = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

      public sealed partial class MessageReceiptDetailGetRequest : pb::IMessage<MessageReceiptDetailGetRequest> {
        private static readonly pb::MessageParser<MessageReceiptDetailGetRequest> _parser = new pb::MessageParser<MessageReceiptDetailGetRequest>(() => new MessageReceiptDetailGetRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReceiptDetailGetRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[43]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptDetailGetRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptDetailGetRequest(MessageReceiptDetailGetRequest other) : this() {
          seqId_ = other.seqId_;
          chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptDetailGetRequest Clone() {
          return new MessageReceiptDetailGetRequest(this);
        }

        /// <summary>Field number for the "seqId" field.</summary>
        public const int SeqIdFieldNumber = 1;
        private long seqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long SeqId {
          get { return seqId_; }
          set {
            seqId_ = value;
          }
        }

        /// <summary>Field number for the "chatTarget" field.</summary>
        public const int ChatTargetFieldNumber = 2;
        private global::AcFunDanmu.Im.Message.Types.ChatTarget chatTarget_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Message.Types.ChatTarget ChatTarget {
          get { return chatTarget_; }
          set {
            chatTarget_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReceiptDetailGetRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReceiptDetailGetRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SeqId != other.SeqId) return false;
          if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (SeqId != 0L) hash ^= SeqId.GetHashCode();
          if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (SeqId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(SeqId);
          }
          if (chatTarget_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(ChatTarget);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (SeqId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeqId);
          }
          if (chatTarget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReceiptDetailGetRequest other) {
          if (other == null) {
            return;
          }
          if (other.SeqId != 0L) {
            SeqId = other.SeqId;
          }
          if (other.chatTarget_ != null) {
            if (chatTarget_ == null) {
              ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
            }
            ChatTarget.MergeFrom(other.ChatTarget);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                SeqId = input.ReadInt64();
                break;
              }
              case 18: {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
                }
                input.ReadMessage(ChatTarget);
                break;
              }
            }
          }
        }

      }

      public sealed partial class MessageReceiptDetailGetResponse : pb::IMessage<MessageReceiptDetailGetResponse> {
        private static readonly pb::MessageParser<MessageReceiptDetailGetResponse> _parser = new pb::MessageParser<MessageReceiptDetailGetResponse>(() => new MessageReceiptDetailGetResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageReceiptDetailGetResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[44]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptDetailGetResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptDetailGetResponse(MessageReceiptDetailGetResponse other) : this() {
          readUser_ = other.readUser_.Clone();
          unreadUser_ = other.unreadUser_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageReceiptDetailGetResponse Clone() {
          return new MessageReceiptDetailGetResponse(this);
        }

        /// <summary>Field number for the "readUser" field.</summary>
        public const int ReadUserFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_readUser_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Basic.Types.User.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> readUser_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> ReadUser {
          get { return readUser_; }
        }

        /// <summary>Field number for the "unreadUser" field.</summary>
        public const int UnreadUserFieldNumber = 2;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_unreadUser_codec
            = pb::FieldCodec.ForMessage(18, global::AcFunDanmu.Im.Basic.Types.User.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> unreadUser_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> UnreadUser {
          get { return unreadUser_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageReceiptDetailGetResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageReceiptDetailGetResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!readUser_.Equals(other.readUser_)) return false;
          if(!unreadUser_.Equals(other.unreadUser_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= readUser_.GetHashCode();
          hash ^= unreadUser_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          readUser_.WriteTo(output, _repeated_readUser_codec);
          unreadUser_.WriteTo(output, _repeated_unreadUser_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += readUser_.CalculateSize(_repeated_readUser_codec);
          size += unreadUser_.CalculateSize(_repeated_unreadUser_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageReceiptDetailGetResponse other) {
          if (other == null) {
            return;
          }
          readUser_.Add(other.readUser_);
          unreadUser_.Add(other.unreadUser_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                readUser_.AddEntriesFrom(input, _repeated_readUser_codec);
                break;
              }
              case 18: {
                unreadUser_.AddEntriesFrom(input, _repeated_unreadUser_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class MessageBatchSendRequest : pb::IMessage<MessageBatchSendRequest> {
        private static readonly pb::MessageParser<MessageBatchSendRequest> _parser = new pb::MessageParser<MessageBatchSendRequest>(() => new MessageBatchSendRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageBatchSendRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[45]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageBatchSendRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageBatchSendRequest(MessageBatchSendRequest other) : this() {
          message_ = other.message_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageBatchSendRequest Clone() {
          return new MessageBatchSendRequest(this);
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Message.Types.Message> _repeated_message_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Message.Types.Message.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.Message> message_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.Message>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.Message> Message {
          get { return message_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageBatchSendRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageBatchSendRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!message_.Equals(other.message_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= message_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          message_.WriteTo(output, _repeated_message_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += message_.CalculateSize(_repeated_message_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageBatchSendRequest other) {
          if (other == null) {
            return;
          }
          message_.Add(other.message_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                message_.AddEntriesFrom(input, _repeated_message_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class MessageBatchSendResponse : pb::IMessage<MessageBatchSendResponse> {
        private static readonly pb::MessageParser<MessageBatchSendResponse> _parser = new pb::MessageParser<MessageBatchSendResponse>(() => new MessageBatchSendResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MessageBatchSendResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[46]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageBatchSendResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageBatchSendResponse(MessageBatchSendResponse other) : this() {
          response_ = other.response_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MessageBatchSendResponse Clone() {
          return new MessageBatchSendResponse(this);
        }

        /// <summary>Field number for the "response" field.</summary>
        public const int ResponseFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Message.Types.SendMessageResponse> _repeated_response_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Message.Types.SendMessageResponse.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.SendMessageResponse> response_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.SendMessageResponse>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.SendMessageResponse> Response {
          get { return response_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MessageBatchSendResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MessageBatchSendResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!response_.Equals(other.response_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= response_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          response_.WriteTo(output, _repeated_response_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += response_.CalculateSize(_repeated_response_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MessageBatchSendResponse other) {
          if (other == null) {
            return;
          }
          response_.Add(other.response_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                response_.AddEntriesFrom(input, _repeated_response_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class ImageAttachment : pb::IMessage<ImageAttachment> {
        private static readonly pb::MessageParser<ImageAttachment> _parser = new pb::MessageParser<ImageAttachment>(() => new ImageAttachment());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ImageAttachment> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[47]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImageAttachment() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImageAttachment(ImageAttachment other) : this() {
          mimeType_ = other.mimeType_;
          url_ = other.url_;
          width_ = other.width_;
          height_ = other.height_;
          lengthInBytes_ = other.lengthInBytes_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImageAttachment Clone() {
          return new ImageAttachment(this);
        }

        /// <summary>Field number for the "mimeType" field.</summary>
        public const int MimeTypeFieldNumber = 1;
        private string mimeType_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MimeType {
          get { return mimeType_; }
          set {
            mimeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "url" field.</summary>
        public const int UrlFieldNumber = 2;
        private string url_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Url {
          get { return url_; }
          set {
            url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "width" field.</summary>
        public const int WidthFieldNumber = 3;
        private int width_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Width {
          get { return width_; }
          set {
            width_ = value;
          }
        }

        /// <summary>Field number for the "height" field.</summary>
        public const int HeightFieldNumber = 4;
        private int height_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Height {
          get { return height_; }
          set {
            height_ = value;
          }
        }

        /// <summary>Field number for the "lengthInBytes" field.</summary>
        public const int LengthInBytesFieldNumber = 5;
        private long lengthInBytes_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long LengthInBytes {
          get { return lengthInBytes_; }
          set {
            lengthInBytes_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ImageAttachment);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ImageAttachment other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MimeType != other.MimeType) return false;
          if (Url != other.Url) return false;
          if (Width != other.Width) return false;
          if (Height != other.Height) return false;
          if (LengthInBytes != other.LengthInBytes) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (MimeType.Length != 0) hash ^= MimeType.GetHashCode();
          if (Url.Length != 0) hash ^= Url.GetHashCode();
          if (Width != 0) hash ^= Width.GetHashCode();
          if (Height != 0) hash ^= Height.GetHashCode();
          if (LengthInBytes != 0L) hash ^= LengthInBytes.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (MimeType.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MimeType);
          }
          if (Url.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Url);
          }
          if (Width != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Width);
          }
          if (Height != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Height);
          }
          if (LengthInBytes != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(LengthInBytes);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (MimeType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MimeType);
          }
          if (Url.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
          }
          if (Width != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
          }
          if (Height != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
          }
          if (LengthInBytes != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(LengthInBytes);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ImageAttachment other) {
          if (other == null) {
            return;
          }
          if (other.MimeType.Length != 0) {
            MimeType = other.MimeType;
          }
          if (other.Url.Length != 0) {
            Url = other.Url;
          }
          if (other.Width != 0) {
            Width = other.Width;
          }
          if (other.Height != 0) {
            Height = other.Height;
          }
          if (other.LengthInBytes != 0L) {
            LengthInBytes = other.LengthInBytes;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                MimeType = input.ReadString();
                break;
              }
              case 18: {
                Url = input.ReadString();
                break;
              }
              case 24: {
                Width = input.ReadInt32();
                break;
              }
              case 32: {
                Height = input.ReadInt32();
                break;
              }
              case 40: {
                LengthInBytes = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

      public sealed partial class AudioAttachment : pb::IMessage<AudioAttachment> {
        private static readonly pb::MessageParser<AudioAttachment> _parser = new pb::MessageParser<AudioAttachment>(() => new AudioAttachment());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AudioAttachment> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[48]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AudioAttachment() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AudioAttachment(AudioAttachment other) : this() {
          mimeType_ = other.mimeType_;
          url_ = other.url_;
          width_ = other.width_;
          height_ = other.height_;
          lengthInBytes_ = other.lengthInBytes_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AudioAttachment Clone() {
          return new AudioAttachment(this);
        }

        /// <summary>Field number for the "mimeType" field.</summary>
        public const int MimeTypeFieldNumber = 1;
        private string mimeType_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MimeType {
          get { return mimeType_; }
          set {
            mimeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "url" field.</summary>
        public const int UrlFieldNumber = 2;
        private string url_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Url {
          get { return url_; }
          set {
            url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "width" field.</summary>
        public const int WidthFieldNumber = 3;
        private int width_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Width {
          get { return width_; }
          set {
            width_ = value;
          }
        }

        /// <summary>Field number for the "height" field.</summary>
        public const int HeightFieldNumber = 4;
        private int height_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Height {
          get { return height_; }
          set {
            height_ = value;
          }
        }

        /// <summary>Field number for the "lengthInBytes" field.</summary>
        public const int LengthInBytesFieldNumber = 5;
        private long lengthInBytes_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long LengthInBytes {
          get { return lengthInBytes_; }
          set {
            lengthInBytes_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AudioAttachment);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AudioAttachment other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MimeType != other.MimeType) return false;
          if (Url != other.Url) return false;
          if (Width != other.Width) return false;
          if (Height != other.Height) return false;
          if (LengthInBytes != other.LengthInBytes) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (MimeType.Length != 0) hash ^= MimeType.GetHashCode();
          if (Url.Length != 0) hash ^= Url.GetHashCode();
          if (Width != 0) hash ^= Width.GetHashCode();
          if (Height != 0) hash ^= Height.GetHashCode();
          if (LengthInBytes != 0L) hash ^= LengthInBytes.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (MimeType.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MimeType);
          }
          if (Url.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Url);
          }
          if (Width != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Width);
          }
          if (Height != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Height);
          }
          if (LengthInBytes != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(LengthInBytes);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (MimeType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MimeType);
          }
          if (Url.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
          }
          if (Width != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
          }
          if (Height != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
          }
          if (LengthInBytes != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(LengthInBytes);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AudioAttachment other) {
          if (other == null) {
            return;
          }
          if (other.MimeType.Length != 0) {
            MimeType = other.MimeType;
          }
          if (other.Url.Length != 0) {
            Url = other.Url;
          }
          if (other.Width != 0) {
            Width = other.Width;
          }
          if (other.Height != 0) {
            Height = other.Height;
          }
          if (other.LengthInBytes != 0L) {
            LengthInBytes = other.LengthInBytes;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                MimeType = input.ReadString();
                break;
              }
              case 18: {
                Url = input.ReadString();
                break;
              }
              case 24: {
                Width = input.ReadInt32();
                break;
              }
              case 32: {
                Height = input.ReadInt32();
                break;
              }
              case 40: {
                LengthInBytes = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

      public sealed partial class GifAttachment : pb::IMessage<GifAttachment> {
        private static readonly pb::MessageParser<GifAttachment> _parser = new pb::MessageParser<GifAttachment>(() => new GifAttachment());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GifAttachment> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[49]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GifAttachment() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GifAttachment(GifAttachment other) : this() {
          mimeType_ = other.mimeType_;
          url_ = other.url_;
          width_ = other.width_;
          height_ = other.height_;
          thumbaUrl_ = other.thumbaUrl_;
          text_ = other.text_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GifAttachment Clone() {
          return new GifAttachment(this);
        }

        /// <summary>Field number for the "mimeType" field.</summary>
        public const int MimeTypeFieldNumber = 1;
        private string mimeType_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MimeType {
          get { return mimeType_; }
          set {
            mimeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "url" field.</summary>
        public const int UrlFieldNumber = 2;
        private string url_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Url {
          get { return url_; }
          set {
            url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "width" field.</summary>
        public const int WidthFieldNumber = 3;
        private int width_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Width {
          get { return width_; }
          set {
            width_ = value;
          }
        }

        /// <summary>Field number for the "height" field.</summary>
        public const int HeightFieldNumber = 4;
        private int height_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Height {
          get { return height_; }
          set {
            height_ = value;
          }
        }

        /// <summary>Field number for the "thumbaUrl" field.</summary>
        public const int ThumbaUrlFieldNumber = 5;
        private string thumbaUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ThumbaUrl {
          get { return thumbaUrl_; }
          set {
            thumbaUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "text" field.</summary>
        public const int TextFieldNumber = 6;
        private string text_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Text {
          get { return text_; }
          set {
            text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as GifAttachment);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GifAttachment other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MimeType != other.MimeType) return false;
          if (Url != other.Url) return false;
          if (Width != other.Width) return false;
          if (Height != other.Height) return false;
          if (ThumbaUrl != other.ThumbaUrl) return false;
          if (Text != other.Text) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (MimeType.Length != 0) hash ^= MimeType.GetHashCode();
          if (Url.Length != 0) hash ^= Url.GetHashCode();
          if (Width != 0) hash ^= Width.GetHashCode();
          if (Height != 0) hash ^= Height.GetHashCode();
          if (ThumbaUrl.Length != 0) hash ^= ThumbaUrl.GetHashCode();
          if (Text.Length != 0) hash ^= Text.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (MimeType.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MimeType);
          }
          if (Url.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Url);
          }
          if (Width != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Width);
          }
          if (Height != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Height);
          }
          if (ThumbaUrl.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(ThumbaUrl);
          }
          if (Text.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(Text);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (MimeType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MimeType);
          }
          if (Url.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
          }
          if (Width != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
          }
          if (Height != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
          }
          if (ThumbaUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ThumbaUrl);
          }
          if (Text.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GifAttachment other) {
          if (other == null) {
            return;
          }
          if (other.MimeType.Length != 0) {
            MimeType = other.MimeType;
          }
          if (other.Url.Length != 0) {
            Url = other.Url;
          }
          if (other.Width != 0) {
            Width = other.Width;
          }
          if (other.Height != 0) {
            Height = other.Height;
          }
          if (other.ThumbaUrl.Length != 0) {
            ThumbaUrl = other.ThumbaUrl;
          }
          if (other.Text.Length != 0) {
            Text = other.Text;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                MimeType = input.ReadString();
                break;
              }
              case 18: {
                Url = input.ReadString();
                break;
              }
              case 24: {
                Width = input.ReadInt32();
                break;
              }
              case 32: {
                Height = input.ReadInt32();
                break;
              }
              case 42: {
                ThumbaUrl = input.ReadString();
                break;
              }
              case 50: {
                Text = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Attachment : pb::IMessage<Attachment> {
        private static readonly pb::MessageParser<Attachment> _parser = new pb::MessageParser<Attachment>(() => new Attachment());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Attachment> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[50]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Attachment() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Attachment(Attachment other) : this() {
          switch (other.AttacmnentCase) {
            case AttacmnentOneofCase.ImageAttachment:
              ImageAttachment = other.ImageAttachment.Clone();
              break;
            case AttacmnentOneofCase.AudioAttachment:
              AudioAttachment = other.AudioAttachment.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Attachment Clone() {
          return new Attachment(this);
        }

        /// <summary>Field number for the "imageAttachment" field.</summary>
        public const int ImageAttachmentFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Message.Types.ImageAttachment ImageAttachment {
          get { return attacmnentCase_ == AttacmnentOneofCase.ImageAttachment ? (global::AcFunDanmu.Im.Message.Types.ImageAttachment) attacmnent_ : null; }
          set {
            attacmnent_ = value;
            attacmnentCase_ = value == null ? AttacmnentOneofCase.None : AttacmnentOneofCase.ImageAttachment;
          }
        }

        /// <summary>Field number for the "audioAttachment" field.</summary>
        public const int AudioAttachmentFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Message.Types.AudioAttachment AudioAttachment {
          get { return attacmnentCase_ == AttacmnentOneofCase.AudioAttachment ? (global::AcFunDanmu.Im.Message.Types.AudioAttachment) attacmnent_ : null; }
          set {
            attacmnent_ = value;
            attacmnentCase_ = value == null ? AttacmnentOneofCase.None : AttacmnentOneofCase.AudioAttachment;
          }
        }

        private object attacmnent_;
        /// <summary>Enum of possible cases for the "attacmnent" oneof.</summary>
        public enum AttacmnentOneofCase {
          None = 0,
          ImageAttachment = 1,
          AudioAttachment = 2,
        }
        private AttacmnentOneofCase attacmnentCase_ = AttacmnentOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AttacmnentOneofCase AttacmnentCase {
          get { return attacmnentCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearAttacmnent() {
          attacmnentCase_ = AttacmnentOneofCase.None;
          attacmnent_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Attachment);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Attachment other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(ImageAttachment, other.ImageAttachment)) return false;
          if (!object.Equals(AudioAttachment, other.AudioAttachment)) return false;
          if (AttacmnentCase != other.AttacmnentCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (attacmnentCase_ == AttacmnentOneofCase.ImageAttachment) hash ^= ImageAttachment.GetHashCode();
          if (attacmnentCase_ == AttacmnentOneofCase.AudioAttachment) hash ^= AudioAttachment.GetHashCode();
          hash ^= (int) attacmnentCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (attacmnentCase_ == AttacmnentOneofCase.ImageAttachment) {
            output.WriteRawTag(10);
            output.WriteMessage(ImageAttachment);
          }
          if (attacmnentCase_ == AttacmnentOneofCase.AudioAttachment) {
            output.WriteRawTag(18);
            output.WriteMessage(AudioAttachment);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (attacmnentCase_ == AttacmnentOneofCase.ImageAttachment) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImageAttachment);
          }
          if (attacmnentCase_ == AttacmnentOneofCase.AudioAttachment) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AudioAttachment);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Attachment other) {
          if (other == null) {
            return;
          }
          switch (other.AttacmnentCase) {
            case AttacmnentOneofCase.ImageAttachment:
              if (ImageAttachment == null) {
                ImageAttachment = new global::AcFunDanmu.Im.Message.Types.ImageAttachment();
              }
              ImageAttachment.MergeFrom(other.ImageAttachment);
              break;
            case AttacmnentOneofCase.AudioAttachment:
              if (AudioAttachment == null) {
                AudioAttachment = new global::AcFunDanmu.Im.Message.Types.AudioAttachment();
              }
              AudioAttachment.MergeFrom(other.AudioAttachment);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::AcFunDanmu.Im.Message.Types.ImageAttachment subBuilder = new global::AcFunDanmu.Im.Message.Types.ImageAttachment();
                if (attacmnentCase_ == AttacmnentOneofCase.ImageAttachment) {
                  subBuilder.MergeFrom(ImageAttachment);
                }
                input.ReadMessage(subBuilder);
                ImageAttachment = subBuilder;
                break;
              }
              case 18: {
                global::AcFunDanmu.Im.Message.Types.AudioAttachment subBuilder = new global::AcFunDanmu.Im.Message.Types.AudioAttachment();
                if (attacmnentCase_ == AttacmnentOneofCase.AudioAttachment) {
                  subBuilder.MergeFrom(AudioAttachment);
                }
                input.ReadMessage(subBuilder);
                AudioAttachment = subBuilder;
                break;
              }
            }
          }
        }

      }

      public sealed partial class Attachments : pb::IMessage<Attachments> {
        private static readonly pb::MessageParser<Attachments> _parser = new pb::MessageParser<Attachments>(() => new Attachments());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Attachments> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[51]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Attachments() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Attachments(Attachments other) : this() {
          attachments_ = other.attachments_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Attachments Clone() {
          return new Attachments(this);
        }

        /// <summary>Field number for the "attachments" field.</summary>
        public const int Attachments_FieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Message.Types.Attachment> _repeated_attachments_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Message.Types.Attachment.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.Attachment> attachments_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.Attachment>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.Attachment> Attachments_ {
          get { return attachments_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Attachments);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Attachments other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!attachments_.Equals(other.attachments_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= attachments_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          attachments_.WriteTo(output, _repeated_attachments_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += attachments_.CalculateSize(_repeated_attachments_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Attachments other) {
          if (other == null) {
            return;
          }
          attachments_.Add(other.attachments_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                attachments_.AddEntriesFrom(input, _repeated_attachments_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class PlaceHolderMessage : pb::IMessage<PlaceHolderMessage> {
        private static readonly pb::MessageParser<PlaceHolderMessage> _parser = new pb::MessageParser<PlaceHolderMessage>(() => new PlaceHolderMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PlaceHolderMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[52]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlaceHolderMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlaceHolderMessage(PlaceHolderMessage other) : this() {
          minSeq_ = other.minSeq_;
          maxSeq_ = other.maxSeq_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlaceHolderMessage Clone() {
          return new PlaceHolderMessage(this);
        }

        /// <summary>Field number for the "minSeq" field.</summary>
        public const int MinSeqFieldNumber = 1;
        private long minSeq_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MinSeq {
          get { return minSeq_; }
          set {
            minSeq_ = value;
          }
        }

        /// <summary>Field number for the "maxSeq" field.</summary>
        public const int MaxSeqFieldNumber = 2;
        private long maxSeq_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MaxSeq {
          get { return maxSeq_; }
          set {
            maxSeq_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PlaceHolderMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PlaceHolderMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MinSeq != other.MinSeq) return false;
          if (MaxSeq != other.MaxSeq) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (MinSeq != 0L) hash ^= MinSeq.GetHashCode();
          if (MaxSeq != 0L) hash ^= MaxSeq.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (MinSeq != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(MinSeq);
          }
          if (MaxSeq != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(MaxSeq);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (MinSeq != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinSeq);
          }
          if (MaxSeq != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxSeq);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PlaceHolderMessage other) {
          if (other == null) {
            return;
          }
          if (other.MinSeq != 0L) {
            MinSeq = other.MinSeq;
          }
          if (other.MaxSeq != 0L) {
            MaxSeq = other.MaxSeq;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                MinSeq = input.ReadInt64();
                break;
              }
              case 16: {
                MaxSeq = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ImageTextMessage : pb::IMessage<ImageTextMessage> {
        private static readonly pb::MessageParser<ImageTextMessage> _parser = new pb::MessageParser<ImageTextMessage>(() => new ImageTextMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ImageTextMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[53]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImageTextMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImageTextMessage(ImageTextMessage other) : this() {
          title_ = other.title_;
          description_ = other.description_;
          imageUrl_ = other.imageUrl_;
          actionUrl_ = other.actionUrl_;
          width_ = other.width_;
          aspectRatio_ = other.aspectRatio_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImageTextMessage Clone() {
          return new ImageTextMessage(this);
        }

        /// <summary>Field number for the "title" field.</summary>
        public const int TitleFieldNumber = 1;
        private string title_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Title {
          get { return title_; }
          set {
            title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 2;
        private string description_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "imageUrl" field.</summary>
        public const int ImageUrlFieldNumber = 3;
        private string imageUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ImageUrl {
          get { return imageUrl_; }
          set {
            imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "actionUrl" field.</summary>
        public const int ActionUrlFieldNumber = 4;
        private string actionUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ActionUrl {
          get { return actionUrl_; }
          set {
            actionUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "width" field.</summary>
        public const int WidthFieldNumber = 5;
        private int width_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Width {
          get { return width_; }
          set {
            width_ = value;
          }
        }

        /// <summary>Field number for the "aspectRatio" field.</summary>
        public const int AspectRatioFieldNumber = 6;
        private float aspectRatio_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float AspectRatio {
          get { return aspectRatio_; }
          set {
            aspectRatio_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ImageTextMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ImageTextMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Title != other.Title) return false;
          if (Description != other.Description) return false;
          if (ImageUrl != other.ImageUrl) return false;
          if (ActionUrl != other.ActionUrl) return false;
          if (Width != other.Width) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AspectRatio, other.AspectRatio)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Title.Length != 0) hash ^= Title.GetHashCode();
          if (Description.Length != 0) hash ^= Description.GetHashCode();
          if (ImageUrl.Length != 0) hash ^= ImageUrl.GetHashCode();
          if (ActionUrl.Length != 0) hash ^= ActionUrl.GetHashCode();
          if (Width != 0) hash ^= Width.GetHashCode();
          if (AspectRatio != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AspectRatio);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Title.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Title);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Description);
          }
          if (ImageUrl.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ImageUrl);
          }
          if (ActionUrl.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(ActionUrl);
          }
          if (Width != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(Width);
          }
          if (AspectRatio != 0F) {
            output.WriteRawTag(53);
            output.WriteFloat(AspectRatio);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Title.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
          }
          if (Description.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          if (ImageUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
          }
          if (ActionUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ActionUrl);
          }
          if (Width != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
          }
          if (AspectRatio != 0F) {
            size += 1 + 4;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ImageTextMessage other) {
          if (other == null) {
            return;
          }
          if (other.Title.Length != 0) {
            Title = other.Title;
          }
          if (other.Description.Length != 0) {
            Description = other.Description;
          }
          if (other.ImageUrl.Length != 0) {
            ImageUrl = other.ImageUrl;
          }
          if (other.ActionUrl.Length != 0) {
            ActionUrl = other.ActionUrl;
          }
          if (other.Width != 0) {
            Width = other.Width;
          }
          if (other.AspectRatio != 0F) {
            AspectRatio = other.AspectRatio;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Title = input.ReadString();
                break;
              }
              case 18: {
                Description = input.ReadString();
                break;
              }
              case 26: {
                ImageUrl = input.ReadString();
                break;
              }
              case 34: {
                ActionUrl = input.ReadString();
                break;
              }
              case 40: {
                Width = input.ReadInt32();
                break;
              }
              case 53: {
                AspectRatio = input.ReadFloat();
                break;
              }
            }
          }
        }

      }

      public sealed partial class RichTextMessage : pb::IMessage<RichTextMessage> {
        private static readonly pb::MessageParser<RichTextMessage> _parser = new pb::MessageParser<RichTextMessage>(() => new RichTextMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RichTextMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[54]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RichTextMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RichTextMessage(RichTextMessage other) : this() {
          richTextMessage_ = other.richTextMessage_ != null ? other.richTextMessage_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RichTextMessage Clone() {
          return new RichTextMessage(this);
        }

        /// <summary>Field number for the "richTextMessage" field.</summary>
        public const int RichTextMessage_FieldNumber = 1;
        private global::AcFunDanmu.Im.Message.Types.RichTextNoticeMessage richTextMessage_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Message.Types.RichTextNoticeMessage RichTextMessage_ {
          get { return richTextMessage_; }
          set {
            richTextMessage_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RichTextMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RichTextMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(RichTextMessage_, other.RichTextMessage_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (richTextMessage_ != null) hash ^= RichTextMessage_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (richTextMessage_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(RichTextMessage_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (richTextMessage_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RichTextMessage_);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RichTextMessage other) {
          if (other == null) {
            return;
          }
          if (other.richTextMessage_ != null) {
            if (richTextMessage_ == null) {
              RichTextMessage_ = new global::AcFunDanmu.Im.Message.Types.RichTextNoticeMessage();
            }
            RichTextMessage_.MergeFrom(other.RichTextMessage_);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (richTextMessage_ == null) {
                  RichTextMessage_ = new global::AcFunDanmu.Im.Message.Types.RichTextNoticeMessage();
                }
                input.ReadMessage(RichTextMessage_);
                break;
              }
            }
          }
        }

      }

      public sealed partial class NoticeMessage : pb::IMessage<NoticeMessage> {
        private static readonly pb::MessageParser<NoticeMessage> _parser = new pb::MessageParser<NoticeMessage>(() => new NoticeMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NoticeMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[55]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NoticeMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NoticeMessage(NoticeMessage other) : this() {
          richTextNotice_ = other.richTextNotice_ != null ? other.richTextNotice_.Clone() : null;
          msg_ = other.msg_;
          i18NCopyWriting_ = other.i18NCopyWriting_ != null ? other.i18NCopyWriting_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NoticeMessage Clone() {
          return new NoticeMessage(this);
        }

        /// <summary>Field number for the "richTextNotice" field.</summary>
        public const int RichTextNoticeFieldNumber = 2;
        private global::AcFunDanmu.Im.Message.Types.RichTextNoticeMessage richTextNotice_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Message.Types.RichTextNoticeMessage RichTextNotice {
          get { return richTextNotice_; }
          set {
            richTextNotice_ = value;
          }
        }

        /// <summary>Field number for the "msg" field.</summary>
        public const int MsgFieldNumber = 5;
        private string msg_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Msg {
          get { return msg_; }
          set {
            msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "i18nCopyWriting" field.</summary>
        public const int I18NCopyWritingFieldNumber = 10;
        private global::AcFunDanmu.Im.Basic.Types.I18nCopyWriting i18NCopyWriting_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::AcFunDanmu.Im.Basic.Types.I18nCopyWriting I18NCopyWriting {
          get { return i18NCopyWriting_; }
          set {
            i18NCopyWriting_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NoticeMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NoticeMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(RichTextNotice, other.RichTextNotice)) return false;
          if (Msg != other.Msg) return false;
          if (!object.Equals(I18NCopyWriting, other.I18NCopyWriting)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (richTextNotice_ != null) hash ^= RichTextNotice.GetHashCode();
          if (Msg.Length != 0) hash ^= Msg.GetHashCode();
          if (i18NCopyWriting_ != null) hash ^= I18NCopyWriting.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (richTextNotice_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(RichTextNotice);
          }
          if (Msg.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Msg);
          }
          if (i18NCopyWriting_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(I18NCopyWriting);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (richTextNotice_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RichTextNotice);
          }
          if (Msg.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
          }
          if (i18NCopyWriting_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(I18NCopyWriting);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NoticeMessage other) {
          if (other == null) {
            return;
          }
          if (other.richTextNotice_ != null) {
            if (richTextNotice_ == null) {
              RichTextNotice = new global::AcFunDanmu.Im.Message.Types.RichTextNoticeMessage();
            }
            RichTextNotice.MergeFrom(other.RichTextNotice);
          }
          if (other.Msg.Length != 0) {
            Msg = other.Msg;
          }
          if (other.i18NCopyWriting_ != null) {
            if (i18NCopyWriting_ == null) {
              I18NCopyWriting = new global::AcFunDanmu.Im.Basic.Types.I18nCopyWriting();
            }
            I18NCopyWriting.MergeFrom(other.I18NCopyWriting);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 18: {
                if (richTextNotice_ == null) {
                  RichTextNotice = new global::AcFunDanmu.Im.Message.Types.RichTextNoticeMessage();
                }
                input.ReadMessage(RichTextNotice);
                break;
              }
              case 42: {
                Msg = input.ReadString();
                break;
              }
              case 82: {
                if (i18NCopyWriting_ == null) {
                  I18NCopyWriting = new global::AcFunDanmu.Im.Basic.Types.I18nCopyWriting();
                }
                input.ReadMessage(I18NCopyWriting);
                break;
              }
            }
          }
        }

      }

      public sealed partial class RichTextNoticeMessage : pb::IMessage<RichTextNoticeMessage> {
        private static readonly pb::MessageParser<RichTextNoticeMessage> _parser = new pb::MessageParser<RichTextNoticeMessage>(() => new RichTextNoticeMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RichTextNoticeMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Message.Descriptor.NestedTypes[56]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RichTextNoticeMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RichTextNoticeMessage(RichTextNoticeMessage other) : this() {
          items_ = other.items_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RichTextNoticeMessage Clone() {
          return new RichTextNoticeMessage(this);
        }

        /// <summary>Field number for the "items" field.</summary>
        public const int ItemsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Message.Types.RichTextNoticeMessage.Types.RichTextItem> _repeated_items_codec
            = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Message.Types.RichTextNoticeMessage.Types.RichTextItem.Parser);
        private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.RichTextNoticeMessage.Types.RichTextItem> items_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.RichTextNoticeMessage.Types.RichTextItem>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.RichTextNoticeMessage.Types.RichTextItem> Items {
          get { return items_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RichTextNoticeMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RichTextNoticeMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!items_.Equals(other.items_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= items_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          items_.WriteTo(output, _repeated_items_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += items_.CalculateSize(_repeated_items_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RichTextNoticeMessage other) {
          if (other == null) {
            return;
          }
          items_.Add(other.items_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                items_.AddEntriesFrom(input, _repeated_items_codec);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the RichTextNoticeMessage message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class RichTextItem : pb::IMessage<RichTextItem> {
            private static readonly pb::MessageParser<RichTextItem> _parser = new pb::MessageParser<RichTextItem>(() => new RichTextItem());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<RichTextItem> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Message.Types.RichTextNoticeMessage.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public RichTextItem() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public RichTextItem(RichTextItem other) : this() {
              color_ = other.color_;
              start_ = other.start_;
              len_ = other.len_;
              clickAction_ = other.clickAction_;
              underline_ = other.underline_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public RichTextItem Clone() {
              return new RichTextItem(this);
            }

            /// <summary>Field number for the "color" field.</summary>
            public const int ColorFieldNumber = 1;
            private int color_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Color {
              get { return color_; }
              set {
                color_ = value;
              }
            }

            /// <summary>Field number for the "start" field.</summary>
            public const int StartFieldNumber = 2;
            private int start_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Start {
              get { return start_; }
              set {
                start_ = value;
              }
            }

            /// <summary>Field number for the "len" field.</summary>
            public const int LenFieldNumber = 3;
            private int len_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Len {
              get { return len_; }
              set {
                len_ = value;
              }
            }

            /// <summary>Field number for the "clickAction" field.</summary>
            public const int ClickActionFieldNumber = 4;
            private string clickAction_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ClickAction {
              get { return clickAction_; }
              set {
                clickAction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "underline" field.</summary>
            public const int UnderlineFieldNumber = 5;
            private bool underline_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Underline {
              get { return underline_; }
              set {
                underline_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as RichTextItem);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(RichTextItem other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Color != other.Color) return false;
              if (Start != other.Start) return false;
              if (Len != other.Len) return false;
              if (ClickAction != other.ClickAction) return false;
              if (Underline != other.Underline) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Color != 0) hash ^= Color.GetHashCode();
              if (Start != 0) hash ^= Start.GetHashCode();
              if (Len != 0) hash ^= Len.GetHashCode();
              if (ClickAction.Length != 0) hash ^= ClickAction.GetHashCode();
              if (Underline != false) hash ^= Underline.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Color != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(Color);
              }
              if (Start != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(Start);
              }
              if (Len != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(Len);
              }
              if (ClickAction.Length != 0) {
                output.WriteRawTag(34);
                output.WriteString(ClickAction);
              }
              if (Underline != false) {
                output.WriteRawTag(40);
                output.WriteBool(Underline);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Color != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Color);
              }
              if (Start != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Start);
              }
              if (Len != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Len);
              }
              if (ClickAction.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ClickAction);
              }
              if (Underline != false) {
                size += 1 + 1;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(RichTextItem other) {
              if (other == null) {
                return;
              }
              if (other.Color != 0) {
                Color = other.Color;
              }
              if (other.Start != 0) {
                Start = other.Start;
              }
              if (other.Len != 0) {
                Len = other.Len;
              }
              if (other.ClickAction.Length != 0) {
                ClickAction = other.ClickAction;
              }
              if (other.Underline != false) {
                Underline = other.Underline;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Color = input.ReadInt32();
                    break;
                  }
                  case 16: {
                    Start = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    Len = input.ReadInt32();
                    break;
                  }
                  case 34: {
                    ClickAction = input.ReadString();
                    break;
                  }
                  case 40: {
                    Underline = input.ReadBool();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class Cloud : pb::IMessage<Cloud> {
    private static readonly pb::MessageParser<Cloud> _parser = new pb::MessageParser<Cloud>(() => new Cloud());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Cloud> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AcFunDanmu.Im.ImReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cloud() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cloud(Cloud other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cloud Clone() {
      return new Cloud(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Cloud);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Cloud other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Cloud other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Cloud message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Channel : pb::IMessage<Channel> {
        private static readonly pb::MessageParser<Channel> _parser = new pb::MessageParser<Channel>(() => new Channel());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Channel> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Cloud.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Channel() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Channel(Channel other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Channel Clone() {
          return new Channel(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Channel);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Channel other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Channel other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Channel message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum UserAction {
            [pbr::OriginalName("USER_ACTION_UNKNOWN")] Unknown = 0,
            [pbr::OriginalName("USER_JOIN_CHANNEL")] UserJoinChannel = 1,
            [pbr::OriginalName("USER_QUIT_CHANNEL")] UserQuitChannel = 2,
            [pbr::OriginalName("USER_OFFLINE")] UserOffline = 3,
          }

          public sealed partial class ChannelSubscribeRequest : pb::IMessage<ChannelSubscribeRequest> {
            private static readonly pb::MessageParser<ChannelSubscribeRequest> _parser = new pb::MessageParser<ChannelSubscribeRequest>(() => new ChannelSubscribeRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ChannelSubscribeRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribeRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribeRequest(ChannelSubscribeRequest other) : this() {
              channelId_ = other.channelId_;
              setBarrier_ = other.setBarrier_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribeRequest Clone() {
              return new ChannelSubscribeRequest(this);
            }

            /// <summary>Field number for the "channelId" field.</summary>
            public const int ChannelIdFieldNumber = 1;
            private string channelId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ChannelId {
              get { return channelId_; }
              set {
                channelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "setBarrier" field.</summary>
            public const int SetBarrierFieldNumber = 2;
            private bool setBarrier_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool SetBarrier {
              get { return setBarrier_; }
              set {
                setBarrier_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ChannelSubscribeRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ChannelSubscribeRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ChannelId != other.ChannelId) return false;
              if (SetBarrier != other.SetBarrier) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ChannelId.Length != 0) hash ^= ChannelId.GetHashCode();
              if (SetBarrier != false) hash ^= SetBarrier.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (ChannelId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(ChannelId);
              }
              if (SetBarrier != false) {
                output.WriteRawTag(16);
                output.WriteBool(SetBarrier);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ChannelId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelId);
              }
              if (SetBarrier != false) {
                size += 1 + 1;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ChannelSubscribeRequest other) {
              if (other == null) {
                return;
              }
              if (other.ChannelId.Length != 0) {
                ChannelId = other.ChannelId;
              }
              if (other.SetBarrier != false) {
                SetBarrier = other.SetBarrier;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    ChannelId = input.ReadString();
                    break;
                  }
                  case 16: {
                    SetBarrier = input.ReadBool();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ChannelSubscribeResponse : pb::IMessage<ChannelSubscribeResponse> {
            private static readonly pb::MessageParser<ChannelSubscribeResponse> _parser = new pb::MessageParser<ChannelSubscribeResponse>(() => new ChannelSubscribeResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ChannelSubscribeResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribeResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribeResponse(ChannelSubscribeResponse other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribeResponse Clone() {
              return new ChannelSubscribeResponse(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ChannelSubscribeResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ChannelSubscribeResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ChannelSubscribeResponse other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            }

          }

          public sealed partial class ChannelUnsubscribeRequest : pb::IMessage<ChannelUnsubscribeRequest> {
            private static readonly pb::MessageParser<ChannelUnsubscribeRequest> _parser = new pb::MessageParser<ChannelUnsubscribeRequest>(() => new ChannelUnsubscribeRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ChannelUnsubscribeRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[2]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelUnsubscribeRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelUnsubscribeRequest(ChannelUnsubscribeRequest other) : this() {
              channelId_ = other.channelId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelUnsubscribeRequest Clone() {
              return new ChannelUnsubscribeRequest(this);
            }

            /// <summary>Field number for the "channelId" field.</summary>
            public const int ChannelIdFieldNumber = 1;
            private string channelId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ChannelId {
              get { return channelId_; }
              set {
                channelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ChannelUnsubscribeRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ChannelUnsubscribeRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ChannelId != other.ChannelId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ChannelId.Length != 0) hash ^= ChannelId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (ChannelId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(ChannelId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ChannelId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ChannelUnsubscribeRequest other) {
              if (other == null) {
                return;
              }
              if (other.ChannelId.Length != 0) {
                ChannelId = other.ChannelId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    ChannelId = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ChannelSubscribersGetRequest : pb::IMessage<ChannelSubscribersGetRequest> {
            private static readonly pb::MessageParser<ChannelSubscribersGetRequest> _parser = new pb::MessageParser<ChannelSubscribersGetRequest>(() => new ChannelSubscribersGetRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ChannelSubscribersGetRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[3]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribersGetRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribersGetRequest(ChannelSubscribersGetRequest other) : this() {
              channelId_ = other.channelId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribersGetRequest Clone() {
              return new ChannelSubscribersGetRequest(this);
            }

            /// <summary>Field number for the "channelId" field.</summary>
            public const int ChannelIdFieldNumber = 1;
            private string channelId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ChannelId {
              get { return channelId_; }
              set {
                channelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ChannelSubscribersGetRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ChannelSubscribersGetRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ChannelId != other.ChannelId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ChannelId.Length != 0) hash ^= ChannelId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (ChannelId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(ChannelId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ChannelId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ChannelSubscribersGetRequest other) {
              if (other == null) {
                return;
              }
              if (other.ChannelId.Length != 0) {
                ChannelId = other.ChannelId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    ChannelId = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ChannelSubscribersGetResposne : pb::IMessage<ChannelSubscribersGetResposne> {
            private static readonly pb::MessageParser<ChannelSubscribersGetResposne> _parser = new pb::MessageParser<ChannelSubscribersGetResposne>(() => new ChannelSubscribersGetResposne());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ChannelSubscribersGetResposne> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[4]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribersGetResposne() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribersGetResposne(ChannelSubscribersGetResposne other) : this() {
              subscriber_ = other.subscriber_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelSubscribersGetResposne Clone() {
              return new ChannelSubscribersGetResposne(this);
            }

            /// <summary>Field number for the "subscriber" field.</summary>
            public const int SubscriberFieldNumber = 1;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_subscriber_codec
                = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Basic.Types.User.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> subscriber_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> Subscriber {
              get { return subscriber_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ChannelSubscribersGetResposne);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ChannelSubscribersGetResposne other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!subscriber_.Equals(other.subscriber_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= subscriber_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              subscriber_.WriteTo(output, _repeated_subscriber_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += subscriber_.CalculateSize(_repeated_subscriber_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ChannelSubscribersGetResposne other) {
              if (other == null) {
                return;
              }
              subscriber_.Add(other.subscriber_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    subscriber_.AddEntriesFrom(input, _repeated_subscriber_codec);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ChannelBasicInfo : pb::IMessage<ChannelBasicInfo> {
            private static readonly pb::MessageParser<ChannelBasicInfo> _parser = new pb::MessageParser<ChannelBasicInfo>(() => new ChannelBasicInfo());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ChannelBasicInfo> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[5]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfo() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfo(ChannelBasicInfo other) : this() {
              channelId_ = other.channelId_;
              subscriberCount_ = other.subscriberCount_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfo Clone() {
              return new ChannelBasicInfo(this);
            }

            /// <summary>Field number for the "channelId" field.</summary>
            public const int ChannelIdFieldNumber = 1;
            private string channelId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ChannelId {
              get { return channelId_; }
              set {
                channelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "subscriberCount" field.</summary>
            public const int SubscriberCountFieldNumber = 2;
            private int subscriberCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int SubscriberCount {
              get { return subscriberCount_; }
              set {
                subscriberCount_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ChannelBasicInfo);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ChannelBasicInfo other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ChannelId != other.ChannelId) return false;
              if (SubscriberCount != other.SubscriberCount) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ChannelId.Length != 0) hash ^= ChannelId.GetHashCode();
              if (SubscriberCount != 0) hash ^= SubscriberCount.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (ChannelId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(ChannelId);
              }
              if (SubscriberCount != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(SubscriberCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ChannelId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelId);
              }
              if (SubscriberCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubscriberCount);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ChannelBasicInfo other) {
              if (other == null) {
                return;
              }
              if (other.ChannelId.Length != 0) {
                ChannelId = other.ChannelId;
              }
              if (other.SubscriberCount != 0) {
                SubscriberCount = other.SubscriberCount;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    ChannelId = input.ReadString();
                    break;
                  }
                  case 16: {
                    SubscriberCount = input.ReadInt32();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class UserActionInfo : pb::IMessage<UserActionInfo> {
            private static readonly pb::MessageParser<UserActionInfo> _parser = new pb::MessageParser<UserActionInfo>(() => new UserActionInfo());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<UserActionInfo> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[6]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserActionInfo() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserActionInfo(UserActionInfo other) : this() {
              user_ = other.user_ != null ? other.user_.Clone() : null;
              action_ = other.action_;
              timestamp_ = other.timestamp_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserActionInfo Clone() {
              return new UserActionInfo(this);
            }

            /// <summary>Field number for the "user" field.</summary>
            public const int UserFieldNumber = 1;
            private global::AcFunDanmu.Im.Basic.Types.User user_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.User User {
              get { return user_; }
              set {
                user_ = value;
              }
            }

            /// <summary>Field number for the "action" field.</summary>
            public const int ActionFieldNumber = 2;
            private global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserAction action_ = global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserAction.Unknown;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserAction Action {
              get { return action_; }
              set {
                action_ = value;
              }
            }

            /// <summary>Field number for the "timestamp" field.</summary>
            public const int TimestampFieldNumber = 3;
            private long timestamp_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long Timestamp {
              get { return timestamp_; }
              set {
                timestamp_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as UserActionInfo);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(UserActionInfo other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(User, other.User)) return false;
              if (Action != other.Action) return false;
              if (Timestamp != other.Timestamp) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (user_ != null) hash ^= User.GetHashCode();
              if (Action != global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserAction.Unknown) hash ^= Action.GetHashCode();
              if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (user_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(User);
              }
              if (Action != global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserAction.Unknown) {
                output.WriteRawTag(16);
                output.WriteEnum((int) Action);
              }
              if (Timestamp != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(Timestamp);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (user_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
              }
              if (Action != global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserAction.Unknown) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
              }
              if (Timestamp != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(UserActionInfo other) {
              if (other == null) {
                return;
              }
              if (other.user_ != null) {
                if (user_ == null) {
                  User = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                User.MergeFrom(other.User);
              }
              if (other.Action != global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserAction.Unknown) {
                Action = other.Action;
              }
              if (other.Timestamp != 0L) {
                Timestamp = other.Timestamp;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (user_ == null) {
                      User = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(User);
                    break;
                  }
                  case 16: {
                    Action = (global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserAction) input.ReadEnum();
                    break;
                  }
                  case 24: {
                    Timestamp = input.ReadInt64();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ChannelBasicInfoGetRequest : pb::IMessage<ChannelBasicInfoGetRequest> {
            private static readonly pb::MessageParser<ChannelBasicInfoGetRequest> _parser = new pb::MessageParser<ChannelBasicInfoGetRequest>(() => new ChannelBasicInfoGetRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ChannelBasicInfoGetRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[7]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfoGetRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfoGetRequest(ChannelBasicInfoGetRequest other) : this() {
              channelId_ = other.channelId_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfoGetRequest Clone() {
              return new ChannelBasicInfoGetRequest(this);
            }

            /// <summary>Field number for the "channelId" field.</summary>
            public const int ChannelIdFieldNumber = 1;
            private static readonly pb::FieldCodec<string> _repeated_channelId_codec
                = pb::FieldCodec.ForString(10);
            private readonly pbc::RepeatedField<string> channelId_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> ChannelId {
              get { return channelId_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ChannelBasicInfoGetRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ChannelBasicInfoGetRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!channelId_.Equals(other.channelId_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= channelId_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              channelId_.WriteTo(output, _repeated_channelId_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += channelId_.CalculateSize(_repeated_channelId_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ChannelBasicInfoGetRequest other) {
              if (other == null) {
                return;
              }
              channelId_.Add(other.channelId_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    channelId_.AddEntriesFrom(input, _repeated_channelId_codec);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ChannelBasicInfoGetResponse : pb::IMessage<ChannelBasicInfoGetResponse> {
            private static readonly pb::MessageParser<ChannelBasicInfoGetResponse> _parser = new pb::MessageParser<ChannelBasicInfoGetResponse>(() => new ChannelBasicInfoGetResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ChannelBasicInfoGetResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[8]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfoGetResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfoGetResponse(ChannelBasicInfoGetResponse other) : this() {
              basicInfo_ = other.basicInfo_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfoGetResponse Clone() {
              return new ChannelBasicInfoGetResponse(this);
            }

            /// <summary>Field number for the "basicInfo" field.</summary>
            public const int BasicInfoFieldNumber = 1;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfo> _repeated_basicInfo_codec
                = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfo.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfo> basicInfo_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfo>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfo> BasicInfo {
              get { return basicInfo_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ChannelBasicInfoGetResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ChannelBasicInfoGetResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!basicInfo_.Equals(other.basicInfo_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= basicInfo_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              basicInfo_.WriteTo(output, _repeated_basicInfo_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += basicInfo_.CalculateSize(_repeated_basicInfo_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ChannelBasicInfoGetResponse other) {
              if (other == null) {
                return;
              }
              basicInfo_.Add(other.basicInfo_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    basicInfo_.AddEntriesFrom(input, _repeated_basicInfo_codec);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ChannelHeartbeatRequest : pb::IMessage<ChannelHeartbeatRequest> {
            private static readonly pb::MessageParser<ChannelHeartbeatRequest> _parser = new pb::MessageParser<ChannelHeartbeatRequest>(() => new ChannelHeartbeatRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ChannelHeartbeatRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[9]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelHeartbeatRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelHeartbeatRequest(ChannelHeartbeatRequest other) : this() {
              channelId_ = other.channelId_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelHeartbeatRequest Clone() {
              return new ChannelHeartbeatRequest(this);
            }

            /// <summary>Field number for the "channelId" field.</summary>
            public const int ChannelIdFieldNumber = 1;
            private static readonly pb::FieldCodec<string> _repeated_channelId_codec
                = pb::FieldCodec.ForString(10);
            private readonly pbc::RepeatedField<string> channelId_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> ChannelId {
              get { return channelId_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ChannelHeartbeatRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ChannelHeartbeatRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!channelId_.Equals(other.channelId_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= channelId_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              channelId_.WriteTo(output, _repeated_channelId_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += channelId_.CalculateSize(_repeated_channelId_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ChannelHeartbeatRequest other) {
              if (other == null) {
                return;
              }
              channelId_.Add(other.channelId_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    channelId_.AddEntriesFrom(input, _repeated_channelId_codec);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ChannelHeartbeatResponse : pb::IMessage<ChannelHeartbeatResponse> {
            private static readonly pb::MessageParser<ChannelHeartbeatResponse> _parser = new pb::MessageParser<ChannelHeartbeatResponse>(() => new ChannelHeartbeatResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ChannelHeartbeatResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[10]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelHeartbeatResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelHeartbeatResponse(ChannelHeartbeatResponse other) : this() {
              notExistChannelId_ = other.notExistChannelId_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelHeartbeatResponse Clone() {
              return new ChannelHeartbeatResponse(this);
            }

            /// <summary>Field number for the "notExistChannelId" field.</summary>
            public const int NotExistChannelIdFieldNumber = 1;
            private static readonly pb::FieldCodec<string> _repeated_notExistChannelId_codec
                = pb::FieldCodec.ForString(10);
            private readonly pbc::RepeatedField<string> notExistChannelId_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> NotExistChannelId {
              get { return notExistChannelId_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ChannelHeartbeatResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ChannelHeartbeatResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!notExistChannelId_.Equals(other.notExistChannelId_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= notExistChannelId_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              notExistChannelId_.WriteTo(output, _repeated_notExistChannelId_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += notExistChannelId_.CalculateSize(_repeated_notExistChannelId_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ChannelHeartbeatResponse other) {
              if (other == null) {
                return;
              }
              notExistChannelId_.Add(other.notExistChannelId_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    notExistChannelId_.AddEntriesFrom(input, _repeated_notExistChannelId_codec);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ChannelBasicInfoNotify : pb::IMessage<ChannelBasicInfoNotify> {
            private static readonly pb::MessageParser<ChannelBasicInfoNotify> _parser = new pb::MessageParser<ChannelBasicInfoNotify>(() => new ChannelBasicInfoNotify());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ChannelBasicInfoNotify> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Channel.Descriptor.NestedTypes[11]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfoNotify() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfoNotify(ChannelBasicInfoNotify other) : this() {
              userActionInfo_ = other.userActionInfo_ != null ? other.userActionInfo_.Clone() : null;
              basicInfo_ = other.basicInfo_ != null ? other.basicInfo_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ChannelBasicInfoNotify Clone() {
              return new ChannelBasicInfoNotify(this);
            }

            /// <summary>Field number for the "userActionInfo" field.</summary>
            public const int UserActionInfoFieldNumber = 1;
            private global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserActionInfo userActionInfo_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserActionInfo UserActionInfo {
              get { return userActionInfo_; }
              set {
                userActionInfo_ = value;
              }
            }

            /// <summary>Field number for the "basicInfo" field.</summary>
            public const int BasicInfoFieldNumber = 2;
            private global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfo basicInfo_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfo BasicInfo {
              get { return basicInfo_; }
              set {
                basicInfo_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ChannelBasicInfoNotify);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ChannelBasicInfoNotify other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(UserActionInfo, other.UserActionInfo)) return false;
              if (!object.Equals(BasicInfo, other.BasicInfo)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (userActionInfo_ != null) hash ^= UserActionInfo.GetHashCode();
              if (basicInfo_ != null) hash ^= BasicInfo.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (userActionInfo_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(UserActionInfo);
              }
              if (basicInfo_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(BasicInfo);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (userActionInfo_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserActionInfo);
              }
              if (basicInfo_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(BasicInfo);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ChannelBasicInfoNotify other) {
              if (other == null) {
                return;
              }
              if (other.userActionInfo_ != null) {
                if (userActionInfo_ == null) {
                  UserActionInfo = new global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserActionInfo();
                }
                UserActionInfo.MergeFrom(other.UserActionInfo);
              }
              if (other.basicInfo_ != null) {
                if (basicInfo_ == null) {
                  BasicInfo = new global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfo();
                }
                BasicInfo.MergeFrom(other.BasicInfo);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (userActionInfo_ == null) {
                      UserActionInfo = new global::AcFunDanmu.Im.Cloud.Types.Channel.Types.UserActionInfo();
                    }
                    input.ReadMessage(UserActionInfo);
                    break;
                  }
                  case 18: {
                    if (basicInfo_ == null) {
                      BasicInfo = new global::AcFunDanmu.Im.Cloud.Types.Channel.Types.ChannelBasicInfo();
                    }
                    input.ReadMessage(BasicInfo);
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      public sealed partial class Config : pb::IMessage<Config> {
        private static readonly pb::MessageParser<Config> _parser = new pb::MessageParser<Config>(() => new Config());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Config> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Cloud.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Config() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Config(Config other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Config Clone() {
          return new Config(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Config);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Config other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Config other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Config message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class ClientConfigGetRequest : pb::IMessage<ClientConfigGetRequest> {
            private static readonly pb::MessageParser<ClientConfigGetRequest> _parser = new pb::MessageParser<ClientConfigGetRequest>(() => new ClientConfigGetRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ClientConfigGetRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Config.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientConfigGetRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientConfigGetRequest(ClientConfigGetRequest other) : this() {
              version_ = other.version_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientConfigGetRequest Clone() {
              return new ClientConfigGetRequest(this);
            }

            /// <summary>Field number for the "version" field.</summary>
            public const int VersionFieldNumber = 1;
            private uint version_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint Version {
              get { return version_; }
              set {
                version_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ClientConfigGetRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ClientConfigGetRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Version != other.Version) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Version != 0) hash ^= Version.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Version != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(Version);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Version != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ClientConfigGetRequest other) {
              if (other == null) {
                return;
              }
              if (other.Version != 0) {
                Version = other.Version;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Version = input.ReadUInt32();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ClientConfigGetResponse : pb::IMessage<ClientConfigGetResponse> {
            private static readonly pb::MessageParser<ClientConfigGetResponse> _parser = new pb::MessageParser<ClientConfigGetResponse>(() => new ClientConfigGetResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ClientConfigGetResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Config.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientConfigGetResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientConfigGetResponse(ClientConfigGetResponse other) : this() {
              version_ = other.version_;
              clientConfig_ = other.clientConfig_ != null ? other.clientConfig_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientConfigGetResponse Clone() {
              return new ClientConfigGetResponse(this);
            }

            /// <summary>Field number for the "version" field.</summary>
            public const int VersionFieldNumber = 1;
            private uint version_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint Version {
              get { return version_; }
              set {
                version_ = value;
              }
            }

            /// <summary>Field number for the "clientConfig" field.</summary>
            public const int ClientConfigFieldNumber = 2;
            private global::AcFunDanmu.Im.Cloud.Types.Config.Types.ClientConfig clientConfig_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Config.Types.ClientConfig ClientConfig {
              get { return clientConfig_; }
              set {
                clientConfig_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ClientConfigGetResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ClientConfigGetResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Version != other.Version) return false;
              if (!object.Equals(ClientConfig, other.ClientConfig)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Version != 0) hash ^= Version.GetHashCode();
              if (clientConfig_ != null) hash ^= ClientConfig.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Version != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(Version);
              }
              if (clientConfig_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(ClientConfig);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Version != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
              }
              if (clientConfig_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientConfig);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ClientConfigGetResponse other) {
              if (other == null) {
                return;
              }
              if (other.Version != 0) {
                Version = other.Version;
              }
              if (other.clientConfig_ != null) {
                if (clientConfig_ == null) {
                  ClientConfig = new global::AcFunDanmu.Im.Cloud.Types.Config.Types.ClientConfig();
                }
                ClientConfig.MergeFrom(other.ClientConfig);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Version = input.ReadUInt32();
                    break;
                  }
                  case 18: {
                    if (clientConfig_ == null) {
                      ClientConfig = new global::AcFunDanmu.Im.Cloud.Types.Config.Types.ClientConfig();
                    }
                    input.ReadMessage(ClientConfig);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class NetworkQualityDetectionConfig : pb::IMessage<NetworkQualityDetectionConfig> {
            private static readonly pb::MessageParser<NetworkQualityDetectionConfig> _parser = new pb::MessageParser<NetworkQualityDetectionConfig>(() => new NetworkQualityDetectionConfig());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<NetworkQualityDetectionConfig> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Config.Descriptor.NestedTypes[2]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public NetworkQualityDetectionConfig() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public NetworkQualityDetectionConfig(NetworkQualityDetectionConfig other) : this() {
              detectionDomain_ = other.detectionDomain_;
              detectionInvervalSec_ = other.detectionInvervalSec_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public NetworkQualityDetectionConfig Clone() {
              return new NetworkQualityDetectionConfig(this);
            }

            /// <summary>Field number for the "detectionDomain" field.</summary>
            public const int DetectionDomainFieldNumber = 1;
            private string detectionDomain_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string DetectionDomain {
              get { return detectionDomain_; }
              set {
                detectionDomain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "detectionInvervalSec" field.</summary>
            public const int DetectionInvervalSecFieldNumber = 2;
            private int detectionInvervalSec_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int DetectionInvervalSec {
              get { return detectionInvervalSec_; }
              set {
                detectionInvervalSec_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as NetworkQualityDetectionConfig);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(NetworkQualityDetectionConfig other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (DetectionDomain != other.DetectionDomain) return false;
              if (DetectionInvervalSec != other.DetectionInvervalSec) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (DetectionDomain.Length != 0) hash ^= DetectionDomain.GetHashCode();
              if (DetectionInvervalSec != 0) hash ^= DetectionInvervalSec.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (DetectionDomain.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(DetectionDomain);
              }
              if (DetectionInvervalSec != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(DetectionInvervalSec);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (DetectionDomain.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(DetectionDomain);
              }
              if (DetectionInvervalSec != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(DetectionInvervalSec);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(NetworkQualityDetectionConfig other) {
              if (other == null) {
                return;
              }
              if (other.DetectionDomain.Length != 0) {
                DetectionDomain = other.DetectionDomain;
              }
              if (other.DetectionInvervalSec != 0) {
                DetectionInvervalSec = other.DetectionInvervalSec;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    DetectionDomain = input.ReadString();
                    break;
                  }
                  case 16: {
                    DetectionInvervalSec = input.ReadInt32();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ClientConfig : pb::IMessage<ClientConfig> {
            private static readonly pb::MessageParser<ClientConfig> _parser = new pb::MessageParser<ClientConfig>(() => new ClientConfig());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ClientConfig> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Config.Descriptor.NestedTypes[3]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientConfig() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientConfig(ClientConfig other) : this() {
              fetchUserStatusInterval_ = other.fetchUserStatusInterval_;
              channelUserHeartbeatInterval_ = other.channelUserHeartbeatInterval_;
              networkQualityDetectionConfig_ = other.networkQualityDetectionConfig_ != null ? other.networkQualityDetectionConfig_.Clone() : null;
              inputtingTipDisplayInterval_ = other.inputtingTipDisplayInterval_;
              batchSendMessageMaxCount_ = other.batchSendMessageMaxCount_;
              resourceUploadingDomain_ = other.resourceUploadingDomain_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientConfig Clone() {
              return new ClientConfig(this);
            }

            /// <summary>Field number for the "fetchUserStatusInterval" field.</summary>
            public const int FetchUserStatusIntervalFieldNumber = 1;
            private int fetchUserStatusInterval_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int FetchUserStatusInterval {
              get { return fetchUserStatusInterval_; }
              set {
                fetchUserStatusInterval_ = value;
              }
            }

            /// <summary>Field number for the "channelUserHeartbeatInterval" field.</summary>
            public const int ChannelUserHeartbeatIntervalFieldNumber = 2;
            private int channelUserHeartbeatInterval_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int ChannelUserHeartbeatInterval {
              get { return channelUserHeartbeatInterval_; }
              set {
                channelUserHeartbeatInterval_ = value;
              }
            }

            /// <summary>Field number for the "networkQualityDetectionConfig" field.</summary>
            public const int NetworkQualityDetectionConfigFieldNumber = 3;
            private global::AcFunDanmu.Im.Cloud.Types.Config.Types.NetworkQualityDetectionConfig networkQualityDetectionConfig_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Config.Types.NetworkQualityDetectionConfig NetworkQualityDetectionConfig {
              get { return networkQualityDetectionConfig_; }
              set {
                networkQualityDetectionConfig_ = value;
              }
            }

            /// <summary>Field number for the "inputtingTipDisplayInterval" field.</summary>
            public const int InputtingTipDisplayIntervalFieldNumber = 4;
            private int inputtingTipDisplayInterval_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int InputtingTipDisplayInterval {
              get { return inputtingTipDisplayInterval_; }
              set {
                inputtingTipDisplayInterval_ = value;
              }
            }

            /// <summary>Field number for the "batchSendMessageMaxCount" field.</summary>
            public const int BatchSendMessageMaxCountFieldNumber = 5;
            private int batchSendMessageMaxCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int BatchSendMessageMaxCount {
              get { return batchSendMessageMaxCount_; }
              set {
                batchSendMessageMaxCount_ = value;
              }
            }

            /// <summary>Field number for the "resourceUploadingDomain" field.</summary>
            public const int ResourceUploadingDomainFieldNumber = 6;
            private string resourceUploadingDomain_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ResourceUploadingDomain {
              get { return resourceUploadingDomain_; }
              set {
                resourceUploadingDomain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ClientConfig);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ClientConfig other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (FetchUserStatusInterval != other.FetchUserStatusInterval) return false;
              if (ChannelUserHeartbeatInterval != other.ChannelUserHeartbeatInterval) return false;
              if (!object.Equals(NetworkQualityDetectionConfig, other.NetworkQualityDetectionConfig)) return false;
              if (InputtingTipDisplayInterval != other.InputtingTipDisplayInterval) return false;
              if (BatchSendMessageMaxCount != other.BatchSendMessageMaxCount) return false;
              if (ResourceUploadingDomain != other.ResourceUploadingDomain) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (FetchUserStatusInterval != 0) hash ^= FetchUserStatusInterval.GetHashCode();
              if (ChannelUserHeartbeatInterval != 0) hash ^= ChannelUserHeartbeatInterval.GetHashCode();
              if (networkQualityDetectionConfig_ != null) hash ^= NetworkQualityDetectionConfig.GetHashCode();
              if (InputtingTipDisplayInterval != 0) hash ^= InputtingTipDisplayInterval.GetHashCode();
              if (BatchSendMessageMaxCount != 0) hash ^= BatchSendMessageMaxCount.GetHashCode();
              if (ResourceUploadingDomain.Length != 0) hash ^= ResourceUploadingDomain.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (FetchUserStatusInterval != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(FetchUserStatusInterval);
              }
              if (ChannelUserHeartbeatInterval != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(ChannelUserHeartbeatInterval);
              }
              if (networkQualityDetectionConfig_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(NetworkQualityDetectionConfig);
              }
              if (InputtingTipDisplayInterval != 0) {
                output.WriteRawTag(32);
                output.WriteInt32(InputtingTipDisplayInterval);
              }
              if (BatchSendMessageMaxCount != 0) {
                output.WriteRawTag(40);
                output.WriteInt32(BatchSendMessageMaxCount);
              }
              if (ResourceUploadingDomain.Length != 0) {
                output.WriteRawTag(50);
                output.WriteString(ResourceUploadingDomain);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (FetchUserStatusInterval != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(FetchUserStatusInterval);
              }
              if (ChannelUserHeartbeatInterval != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChannelUserHeartbeatInterval);
              }
              if (networkQualityDetectionConfig_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(NetworkQualityDetectionConfig);
              }
              if (InputtingTipDisplayInterval != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(InputtingTipDisplayInterval);
              }
              if (BatchSendMessageMaxCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(BatchSendMessageMaxCount);
              }
              if (ResourceUploadingDomain.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceUploadingDomain);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ClientConfig other) {
              if (other == null) {
                return;
              }
              if (other.FetchUserStatusInterval != 0) {
                FetchUserStatusInterval = other.FetchUserStatusInterval;
              }
              if (other.ChannelUserHeartbeatInterval != 0) {
                ChannelUserHeartbeatInterval = other.ChannelUserHeartbeatInterval;
              }
              if (other.networkQualityDetectionConfig_ != null) {
                if (networkQualityDetectionConfig_ == null) {
                  NetworkQualityDetectionConfig = new global::AcFunDanmu.Im.Cloud.Types.Config.Types.NetworkQualityDetectionConfig();
                }
                NetworkQualityDetectionConfig.MergeFrom(other.NetworkQualityDetectionConfig);
              }
              if (other.InputtingTipDisplayInterval != 0) {
                InputtingTipDisplayInterval = other.InputtingTipDisplayInterval;
              }
              if (other.BatchSendMessageMaxCount != 0) {
                BatchSendMessageMaxCount = other.BatchSendMessageMaxCount;
              }
              if (other.ResourceUploadingDomain.Length != 0) {
                ResourceUploadingDomain = other.ResourceUploadingDomain;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    FetchUserStatusInterval = input.ReadInt32();
                    break;
                  }
                  case 16: {
                    ChannelUserHeartbeatInterval = input.ReadInt32();
                    break;
                  }
                  case 26: {
                    if (networkQualityDetectionConfig_ == null) {
                      NetworkQualityDetectionConfig = new global::AcFunDanmu.Im.Cloud.Types.Config.Types.NetworkQualityDetectionConfig();
                    }
                    input.ReadMessage(NetworkQualityDetectionConfig);
                    break;
                  }
                  case 32: {
                    InputtingTipDisplayInterval = input.ReadInt32();
                    break;
                  }
                  case 40: {
                    BatchSendMessageMaxCount = input.ReadInt32();
                    break;
                  }
                  case 50: {
                    ResourceUploadingDomain = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      public sealed partial class Profile : pb::IMessage<Profile> {
        private static readonly pb::MessageParser<Profile> _parser = new pb::MessageParser<Profile>(() => new Profile());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Profile> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Cloud.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Profile() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Profile(Profile other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Profile Clone() {
          return new Profile(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Profile);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Profile other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Profile other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Profile message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class UserOnlineStatus : pb::IMessage<UserOnlineStatus> {
            private static readonly pb::MessageParser<UserOnlineStatus> _parser = new pb::MessageParser<UserOnlineStatus>(() => new UserOnlineStatus());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<UserOnlineStatus> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Profile.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserOnlineStatus() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserOnlineStatus(UserOnlineStatus other) : this() {
              user_ = other.user_ != null ? other.user_.Clone() : null;
              lastOfflineTime_ = other.lastOfflineTime_;
              status_ = other.status_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserOnlineStatus Clone() {
              return new UserOnlineStatus(this);
            }

            /// <summary>Field number for the "user" field.</summary>
            public const int UserFieldNumber = 1;
            private global::AcFunDanmu.Im.Basic.Types.User user_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.User User {
              get { return user_; }
              set {
                user_ = value;
              }
            }

            /// <summary>Field number for the "lastOfflineTime" field.</summary>
            public const int LastOfflineTimeFieldNumber = 2;
            private long lastOfflineTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long LastOfflineTime {
              get { return lastOfflineTime_; }
              set {
                lastOfflineTime_ = value;
              }
            }

            /// <summary>Field number for the "status" field.</summary>
            public const int StatusFieldNumber = 3;
            private global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Types.Status status_ = global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Types.Status.Unknown;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Types.Status Status {
              get { return status_; }
              set {
                status_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as UserOnlineStatus);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(UserOnlineStatus other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(User, other.User)) return false;
              if (LastOfflineTime != other.LastOfflineTime) return false;
              if (Status != other.Status) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (user_ != null) hash ^= User.GetHashCode();
              if (LastOfflineTime != 0L) hash ^= LastOfflineTime.GetHashCode();
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Types.Status.Unknown) hash ^= Status.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (user_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(User);
              }
              if (LastOfflineTime != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(LastOfflineTime);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Types.Status.Unknown) {
                output.WriteRawTag(24);
                output.WriteEnum((int) Status);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (user_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
              }
              if (LastOfflineTime != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastOfflineTime);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Types.Status.Unknown) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(UserOnlineStatus other) {
              if (other == null) {
                return;
              }
              if (other.user_ != null) {
                if (user_ == null) {
                  User = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                User.MergeFrom(other.User);
              }
              if (other.LastOfflineTime != 0L) {
                LastOfflineTime = other.LastOfflineTime;
              }
              if (other.Status != global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Types.Status.Unknown) {
                Status = other.Status;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (user_ == null) {
                      User = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(User);
                    break;
                  }
                  case 16: {
                    LastOfflineTime = input.ReadInt64();
                    break;
                  }
                  case 24: {
                    Status = (global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Types.Status) input.ReadEnum();
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the UserOnlineStatus message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public enum Status {
                [pbr::OriginalName("UNKNOWN")] Unknown = 0,
                [pbr::OriginalName("ONLINE")] Online = 1,
                [pbr::OriginalName("OFFLINE")] Offline = 2,
              }

            }
            #endregion

          }

          public sealed partial class ProfileBatchOnlineTimeRequest : pb::IMessage<ProfileBatchOnlineTimeRequest> {
            private static readonly pb::MessageParser<ProfileBatchOnlineTimeRequest> _parser = new pb::MessageParser<ProfileBatchOnlineTimeRequest>(() => new ProfileBatchOnlineTimeRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ProfileBatchOnlineTimeRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Profile.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfileBatchOnlineTimeRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfileBatchOnlineTimeRequest(ProfileBatchOnlineTimeRequest other) : this() {
              user_ = other.user_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfileBatchOnlineTimeRequest Clone() {
              return new ProfileBatchOnlineTimeRequest(this);
            }

            /// <summary>Field number for the "user" field.</summary>
            public const int UserFieldNumber = 1;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_user_codec
                = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Basic.Types.User.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> user_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> User {
              get { return user_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ProfileBatchOnlineTimeRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ProfileBatchOnlineTimeRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!user_.Equals(other.user_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= user_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              user_.WriteTo(output, _repeated_user_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += user_.CalculateSize(_repeated_user_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ProfileBatchOnlineTimeRequest other) {
              if (other == null) {
                return;
              }
              user_.Add(other.user_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    user_.AddEntriesFrom(input, _repeated_user_codec);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ProfileBatchOnlineTimeResponse : pb::IMessage<ProfileBatchOnlineTimeResponse> {
            private static readonly pb::MessageParser<ProfileBatchOnlineTimeResponse> _parser = new pb::MessageParser<ProfileBatchOnlineTimeResponse>(() => new ProfileBatchOnlineTimeResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ProfileBatchOnlineTimeResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Profile.Descriptor.NestedTypes[2]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfileBatchOnlineTimeResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfileBatchOnlineTimeResponse(ProfileBatchOnlineTimeResponse other) : this() {
              userOnlineStatus_ = other.userOnlineStatus_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfileBatchOnlineTimeResponse Clone() {
              return new ProfileBatchOnlineTimeResponse(this);
            }

            /// <summary>Field number for the "userOnlineStatus" field.</summary>
            public const int UserOnlineStatusFieldNumber = 1;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus> _repeated_userOnlineStatus_codec
                = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus> userOnlineStatus_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Profile.Types.UserOnlineStatus> UserOnlineStatus {
              get { return userOnlineStatus_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ProfileBatchOnlineTimeResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ProfileBatchOnlineTimeResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!userOnlineStatus_.Equals(other.userOnlineStatus_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= userOnlineStatus_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              userOnlineStatus_.WriteTo(output, _repeated_userOnlineStatus_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += userOnlineStatus_.CalculateSize(_repeated_userOnlineStatus_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ProfileBatchOnlineTimeResponse other) {
              if (other == null) {
                return;
              }
              userOnlineStatus_.Add(other.userOnlineStatus_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    userOnlineStatus_.AddEntriesFrom(input, _repeated_userOnlineStatus_codec);
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      public sealed partial class Data : pb::IMessage<Data> {
        private static readonly pb::MessageParser<Data> _parser = new pb::MessageParser<Data>(() => new Data());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Data> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Cloud.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Data() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Data(Data other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Data Clone() {
          return new Data(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Data);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Data other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Data other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Data message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Update : pb::IMessage<Update> {
            private static readonly pb::MessageParser<Update> _parser = new pb::MessageParser<Update>(() => new Update());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Update> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Data.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Update() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Update(Update other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Update Clone() {
              return new Update(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Update);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Update other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Update other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the Update message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public enum KsImDataUpdateType {
                [pbr::OriginalName("INVALID")] Invalid = 0,
                [pbr::OriginalName("GROUP_INFO_UPDATE")] GroupInfoUpdate = 1,
                [pbr::OriginalName("GROUP_MEMBER_LIST_UPDATE")] GroupMemberListUpdate = 2,
                [pbr::OriginalName("YOU_BE_KICKED")] YouBeKicked = 3,
                [pbr::OriginalName("MESSAGE_READ_EVENT")] MessageReadEvent = 4,
                [pbr::OriginalName("MESSAGE_RECEIPT_EVENT")] MessageReceiptEvent = 5,
                [pbr::OriginalName("FRIEND_LIST_UPDATE")] FriendListUpdate = 6,
                [pbr::OriginalName("FRIEND_REQUEST_COUNT_UPDATE")] FriendRequestCountUpdate = 7,
                [pbr::OriginalName("BLACK_LIST_UPDATE")] BlackListUpdate = 8,
              }

              public sealed partial class KsImDataUpdatePushPayload : pb::IMessage<KsImDataUpdatePushPayload> {
                private static readonly pb::MessageParser<KsImDataUpdatePushPayload> _parser = new pb::MessageParser<KsImDataUpdatePushPayload>(() => new KsImDataUpdatePushPayload());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<KsImDataUpdatePushPayload> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public KsImDataUpdatePushPayload() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public KsImDataUpdatePushPayload(KsImDataUpdatePushPayload other) : this() {
                  type_ = other.type_ != null ? other.type_.Clone() : null;
                  content_ = other.content_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public KsImDataUpdatePushPayload Clone() {
                  return new KsImDataUpdatePushPayload(this);
                }

                /// <summary>Field number for the "type" field.</summary>
                public const int TypeFieldNumber = 1;
                private global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.KsImDataUpdatePushPayload type_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.KsImDataUpdatePushPayload Type {
                  get { return type_; }
                  set {
                    type_ = value;
                  }
                }

                /// <summary>Field number for the "content" field.</summary>
                public const int ContentFieldNumber = 2;
                private pb::ByteString content_ = pb::ByteString.Empty;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pb::ByteString Content {
                  get { return content_; }
                  set {
                    content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as KsImDataUpdatePushPayload);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(KsImDataUpdatePushPayload other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (!object.Equals(Type, other.Type)) return false;
                  if (Content != other.Content) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (type_ != null) hash ^= Type.GetHashCode();
                  if (Content.Length != 0) hash ^= Content.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (type_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(Type);
                  }
                  if (Content.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteBytes(Content);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (type_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
                  }
                  if (Content.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(KsImDataUpdatePushPayload other) {
                  if (other == null) {
                    return;
                  }
                  if (other.type_ != null) {
                    if (type_ == null) {
                      Type = new global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.KsImDataUpdatePushPayload();
                    }
                    Type.MergeFrom(other.Type);
                  }
                  if (other.Content.Length != 0) {
                    Content = other.Content;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        if (type_ == null) {
                          Type = new global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Types.KsImDataUpdatePushPayload();
                        }
                        input.ReadMessage(Type);
                        break;
                      }
                      case 18: {
                        Content = input.ReadBytes();
                        break;
                      }
                    }
                  }
                }

              }

              public sealed partial class GroupInfoDataUpdate : pb::IMessage<GroupInfoDataUpdate> {
                private static readonly pb::MessageParser<GroupInfoDataUpdate> _parser = new pb::MessageParser<GroupInfoDataUpdate>(() => new GroupInfoDataUpdate());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<GroupInfoDataUpdate> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Descriptor.NestedTypes[1]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public GroupInfoDataUpdate() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public GroupInfoDataUpdate(GroupInfoDataUpdate other) : this() {
                  groupId_ = other.groupId_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public GroupInfoDataUpdate Clone() {
                  return new GroupInfoDataUpdate(this);
                }

                /// <summary>Field number for the "groupId" field.</summary>
                public const int GroupIdFieldNumber = 1;
                private string groupId_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string GroupId {
                  get { return groupId_; }
                  set {
                    groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as GroupInfoDataUpdate);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(GroupInfoDataUpdate other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (GroupId != other.GroupId) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (GroupId.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(GroupId);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (GroupId.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(GroupInfoDataUpdate other) {
                  if (other == null) {
                    return;
                  }
                  if (other.GroupId.Length != 0) {
                    GroupId = other.GroupId;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        GroupId = input.ReadString();
                        break;
                      }
                    }
                  }
                }

              }

              public sealed partial class GroupMemberListUpdate : pb::IMessage<GroupMemberListUpdate> {
                private static readonly pb::MessageParser<GroupMemberListUpdate> _parser = new pb::MessageParser<GroupMemberListUpdate>(() => new GroupMemberListUpdate());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<GroupMemberListUpdate> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Descriptor.NestedTypes[2]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public GroupMemberListUpdate() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public GroupMemberListUpdate(GroupMemberListUpdate other) : this() {
                  groupId_ = other.groupId_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public GroupMemberListUpdate Clone() {
                  return new GroupMemberListUpdate(this);
                }

                /// <summary>Field number for the "groupId" field.</summary>
                public const int GroupIdFieldNumber = 1;
                private string groupId_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string GroupId {
                  get { return groupId_; }
                  set {
                    groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as GroupMemberListUpdate);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(GroupMemberListUpdate other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (GroupId != other.GroupId) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (GroupId.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(GroupId);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (GroupId.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(GroupMemberListUpdate other) {
                  if (other == null) {
                    return;
                  }
                  if (other.GroupId.Length != 0) {
                    GroupId = other.GroupId;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        GroupId = input.ReadString();
                        break;
                      }
                    }
                  }
                }

              }

              public sealed partial class YouBeKicked : pb::IMessage<YouBeKicked> {
                private static readonly pb::MessageParser<YouBeKicked> _parser = new pb::MessageParser<YouBeKicked>(() => new YouBeKicked());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<YouBeKicked> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Descriptor.NestedTypes[3]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public YouBeKicked() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public YouBeKicked(YouBeKicked other) : this() {
                  groupId_ = other.groupId_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public YouBeKicked Clone() {
                  return new YouBeKicked(this);
                }

                /// <summary>Field number for the "groupId" field.</summary>
                public const int GroupIdFieldNumber = 1;
                private string groupId_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string GroupId {
                  get { return groupId_; }
                  set {
                    groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as YouBeKicked);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(YouBeKicked other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (GroupId != other.GroupId) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (GroupId.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(GroupId);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (GroupId.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(YouBeKicked other) {
                  if (other == null) {
                    return;
                  }
                  if (other.GroupId.Length != 0) {
                    GroupId = other.GroupId;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        GroupId = input.ReadString();
                        break;
                      }
                    }
                  }
                }

              }

              public sealed partial class MessageRead : pb::IMessage<MessageRead> {
                private static readonly pb::MessageParser<MessageRead> _parser = new pb::MessageParser<MessageRead>(() => new MessageRead());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<MessageRead> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Descriptor.NestedTypes[4]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public MessageRead() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public MessageRead(MessageRead other) : this() {
                  strTargetId_ = other.strTargetId_;
                  readSeq_ = other.readSeq_;
                  chatTargetType_ = other.chatTargetType_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public MessageRead Clone() {
                  return new MessageRead(this);
                }

                /// <summary>Field number for the "strTargetId" field.</summary>
                public const int StrTargetIdFieldNumber = 1;
                private string strTargetId_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string StrTargetId {
                  get { return strTargetId_; }
                  set {
                    strTargetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "readSeq" field.</summary>
                public const int ReadSeqFieldNumber = 2;
                private long readSeq_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public long ReadSeq {
                  get { return readSeq_; }
                  set {
                    readSeq_ = value;
                  }
                }

                /// <summary>Field number for the "chatTargetType" field.</summary>
                public const int ChatTargetTypeFieldNumber = 3;
                private global::AcFunDanmu.Im.Message.Types.ChatTargetType chatTargetType_ = global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::AcFunDanmu.Im.Message.Types.ChatTargetType ChatTargetType {
                  get { return chatTargetType_; }
                  set {
                    chatTargetType_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as MessageRead);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(MessageRead other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (StrTargetId != other.StrTargetId) return false;
                  if (ReadSeq != other.ReadSeq) return false;
                  if (ChatTargetType != other.ChatTargetType) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (StrTargetId.Length != 0) hash ^= StrTargetId.GetHashCode();
                  if (ReadSeq != 0L) hash ^= ReadSeq.GetHashCode();
                  if (ChatTargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) hash ^= ChatTargetType.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (StrTargetId.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(StrTargetId);
                  }
                  if (ReadSeq != 0L) {
                    output.WriteRawTag(16);
                    output.WriteInt64(ReadSeq);
                  }
                  if (ChatTargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) {
                    output.WriteRawTag(24);
                    output.WriteEnum((int) ChatTargetType);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (StrTargetId.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(StrTargetId);
                  }
                  if (ReadSeq != 0L) {
                    size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReadSeq);
                  }
                  if (ChatTargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChatTargetType);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(MessageRead other) {
                  if (other == null) {
                    return;
                  }
                  if (other.StrTargetId.Length != 0) {
                    StrTargetId = other.StrTargetId;
                  }
                  if (other.ReadSeq != 0L) {
                    ReadSeq = other.ReadSeq;
                  }
                  if (other.ChatTargetType != global::AcFunDanmu.Im.Message.Types.ChatTargetType.CttUser) {
                    ChatTargetType = other.ChatTargetType;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        StrTargetId = input.ReadString();
                        break;
                      }
                      case 16: {
                        ReadSeq = input.ReadInt64();
                        break;
                      }
                      case 24: {
                        ChatTargetType = (global::AcFunDanmu.Im.Message.Types.ChatTargetType) input.ReadEnum();
                        break;
                      }
                    }
                  }
                }

              }

              public sealed partial class MessageReceipt : pb::IMessage<MessageReceipt> {
                private static readonly pb::MessageParser<MessageReceipt> _parser = new pb::MessageParser<MessageReceipt>(() => new MessageReceipt());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<MessageReceipt> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::AcFunDanmu.Im.Cloud.Types.Data.Types.Update.Descriptor.NestedTypes[5]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public MessageReceipt() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public MessageReceipt(MessageReceipt other) : this() {
                  chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
                  receiptStatus_ = other.receiptStatus_ != null ? other.receiptStatus_.Clone() : null;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public MessageReceipt Clone() {
                  return new MessageReceipt(this);
                }

                /// <summary>Field number for the "chatTarget" field.</summary>
                public const int ChatTargetFieldNumber = 1;
                private global::AcFunDanmu.Im.Message.Types.ChatTarget chatTarget_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::AcFunDanmu.Im.Message.Types.ChatTarget ChatTarget {
                  get { return chatTarget_; }
                  set {
                    chatTarget_ = value;
                  }
                }

                /// <summary>Field number for the "receiptStatus" field.</summary>
                public const int ReceiptStatusFieldNumber = 2;
                private global::AcFunDanmu.Im.Message.Types.MessageReceiptStatus receiptStatus_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::AcFunDanmu.Im.Message.Types.MessageReceiptStatus ReceiptStatus {
                  get { return receiptStatus_; }
                  set {
                    receiptStatus_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as MessageReceipt);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(MessageReceipt other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
                  if (!object.Equals(ReceiptStatus, other.ReceiptStatus)) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
                  if (receiptStatus_ != null) hash ^= ReceiptStatus.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (chatTarget_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(ChatTarget);
                  }
                  if (receiptStatus_ != null) {
                    output.WriteRawTag(18);
                    output.WriteMessage(ReceiptStatus);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (chatTarget_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
                  }
                  if (receiptStatus_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReceiptStatus);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(MessageReceipt other) {
                  if (other == null) {
                    return;
                  }
                  if (other.chatTarget_ != null) {
                    if (chatTarget_ == null) {
                      ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
                    }
                    ChatTarget.MergeFrom(other.ChatTarget);
                  }
                  if (other.receiptStatus_ != null) {
                    if (receiptStatus_ == null) {
                      ReceiptStatus = new global::AcFunDanmu.Im.Message.Types.MessageReceiptStatus();
                    }
                    ReceiptStatus.MergeFrom(other.ReceiptStatus);
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        if (chatTarget_ == null) {
                          ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
                        }
                        input.ReadMessage(ChatTarget);
                        break;
                      }
                      case 18: {
                        if (receiptStatus_ == null) {
                          ReceiptStatus = new global::AcFunDanmu.Im.Message.Types.MessageReceiptStatus();
                        }
                        input.ReadMessage(ReceiptStatus);
                        break;
                      }
                    }
                  }
                }

              }

            }
            #endregion

          }

        }
        #endregion

      }

      public sealed partial class Message : pb::IMessage<Message> {
        private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Message> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::AcFunDanmu.Im.Cloud.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Message() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Message(Message other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Message Clone() {
          return new Message(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Message);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Message other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Message other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Message message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum ImcMessageType {
            [pbr::OriginalName("TEXT")] Text = 0,
            [pbr::OriginalName("IMAGE")] Image = 1,
            [pbr::OriginalName("CUSTOM")] Custom = 2,
            [pbr::OriginalName("AUDIO")] Audio = 3,
            [pbr::OriginalName("VIDEO")] Video = 4,
            [pbr::OriginalName("EMOTICON")] Emoticon = 5,
            [pbr::OriginalName("FILE")] File = 6,
            [pbr::OriginalName("NOTICE")] Notice = 10,
            [pbr::OriginalName("RECALLED")] Recalled = 11,
            [pbr::OriginalName("REFERENCE")] Reference = 12,
            [pbr::OriginalName("MERGE_FORWARD")] MergeForward = 13,
            [pbr::OriginalName("PLACE_HOLDER")] PlaceHolder = 100,
            [pbr::OriginalName("REPLACE")] Replace = 101,
            [pbr::OriginalName("INVISIBLE_TYPE_MAS")] InvisibleTypeMas = 199,
            [pbr::OriginalName("RICH_NOTICE")] RichNotice = 200,
          }

          public enum NoticeMetaType {
            [pbr::OriginalName("UNKNOWN_NOTICE_META_TYPE")] UnknownNoticeMetaType = 0,
            [pbr::OriginalName("COMMON_NOTICE_META_TYPE")] CommonNoticeMetaType = 1,
            [pbr::OriginalName("CONFIRM_INVITE_INTO_GROUP_META")] ConfirmInviteIntoGroupMeta = 2,
            [pbr::OriginalName("CONFIRM_JOIN_INTO_GROUP_META")] ConfirmJoinIntoGroupMeta = 3,
            [pbr::OriginalName("LINKED_PROFILE_META_TYPE")] LinkedProfileMetaType = 4,
          }

          public enum GroupFindType {
            [pbr::OriginalName("BY_UNKNOWN")] ByUnknown = 0,
            [pbr::OriginalName("BY_ID")] ById = 1,
            [pbr::OriginalName("BY_NAME")] ByName = 2,
            [pbr::OriginalName("BY_QR_CODE")] ByQrCode = 3,
            [pbr::OriginalName("BY_CARD")] ByCard = 4,
            [pbr::OriginalName("BY_INVITATION")] ByInvitation = 5,
            [pbr::OriginalName("BY_SHARE_LINK")] ByShareLink = 6,
          }

          public enum JoinRequestStatus {
            [pbr::OriginalName("UNKNOWN_STATUS")] UnknownStatus = 0,
            [pbr::OriginalName("REQUESTED")] Requested = 1,
            [pbr::OriginalName("APPROVED")] Approved = 2,
            [pbr::OriginalName("REFUSED")] Refused = 3,
          }

          public enum InvitePermissionType {
            [pbr::OriginalName("UNKNOWN_INVITE_PERMISSION_TYPE")] UnknownInvitePermissionType = 0,
            [pbr::OriginalName("EVERYONE")] Everyone = 1,
            [pbr::OriginalName("ONLY_ADMIN")] OnlyAdmin = 2,
          }

          public enum JoinNeedPermissionType {
            [pbr::OriginalName("UNKNOWN_JOIN_NEED_PERMISSION_TYPE")] UnknownJoinNeedPermissionType = 0,
            [pbr::OriginalName("NONE")] None = 1,
            [pbr::OriginalName("ADMIN")] Admin = 2,
          }

          public enum GroupStatus {
            [pbr::OriginalName("UNKNOW_GROUP_STATUS")] UnknowGroupStatus = 0,
            [pbr::OriginalName("VALID")] Valid = 1,
            [pbr::OriginalName("INVALID")] Invalid = 2,
          }

          public enum GroupType {
            [pbr::OriginalName("UNKNOW_GROUP_TYPE")] UnknowGroupType = 0,
            [pbr::OriginalName("PRIVATE")] Private = 3,
            [pbr::OriginalName("PUBLIC")] Public = 4,
          }

          public enum ForbiddenState {
            [pbr::OriginalName("UNKNOWN_FORBIDDEN_STATE")] UnknownForbiddenState = 0,
            [pbr::OriginalName("UN_FORBIDDEN")] UnForbidden = 1,
            [pbr::OriginalName("FORBID_MESSAGE")] ForbidMessage = 2,
          }

          public enum PassThroughType {
            [pbr::OriginalName("INVALID_PTT")] InvalidPtt = 0,
            [pbr::OriginalName("INPUTTING")] Inputting = 1,
          }

          public sealed partial class ImcRecalledMessage : pb::IMessage<ImcRecalledMessage> {
            private static readonly pb::MessageParser<ImcRecalledMessage> _parser = new pb::MessageParser<ImcRecalledMessage>(() => new ImcRecalledMessage());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ImcRecalledMessage> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcRecalledMessage() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcRecalledMessage(ImcRecalledMessage other) : this() {
              originMsg_ = other.originMsg_ != null ? other.originMsg_.Clone() : null;
              noticeMsg_ = other.noticeMsg_ != null ? other.noticeMsg_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcRecalledMessage Clone() {
              return new ImcRecalledMessage(this);
            }

            /// <summary>Field number for the "originMsg" field.</summary>
            public const int OriginMsgFieldNumber = 1;
            private global::AcFunDanmu.Im.Message.Types.Message originMsg_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Message.Types.Message OriginMsg {
              get { return originMsg_; }
              set {
                originMsg_ = value;
              }
            }

            /// <summary>Field number for the "noticeMsg" field.</summary>
            public const int NoticeMsgFieldNumber = 2;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcNoticeMessage noticeMsg_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcNoticeMessage NoticeMsg {
              get { return noticeMsg_; }
              set {
                noticeMsg_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ImcRecalledMessage);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ImcRecalledMessage other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(OriginMsg, other.OriginMsg)) return false;
              if (!object.Equals(NoticeMsg, other.NoticeMsg)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (originMsg_ != null) hash ^= OriginMsg.GetHashCode();
              if (noticeMsg_ != null) hash ^= NoticeMsg.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (originMsg_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(OriginMsg);
              }
              if (noticeMsg_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(NoticeMsg);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (originMsg_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(OriginMsg);
              }
              if (noticeMsg_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(NoticeMsg);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ImcRecalledMessage other) {
              if (other == null) {
                return;
              }
              if (other.originMsg_ != null) {
                if (originMsg_ == null) {
                  OriginMsg = new global::AcFunDanmu.Im.Message.Types.Message();
                }
                OriginMsg.MergeFrom(other.OriginMsg);
              }
              if (other.noticeMsg_ != null) {
                if (noticeMsg_ == null) {
                  NoticeMsg = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcNoticeMessage();
                }
                NoticeMsg.MergeFrom(other.NoticeMsg);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (originMsg_ == null) {
                      OriginMsg = new global::AcFunDanmu.Im.Message.Types.Message();
                    }
                    input.ReadMessage(OriginMsg);
                    break;
                  }
                  case 18: {
                    if (noticeMsg_ == null) {
                      NoticeMsg = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.ImcNoticeMessage();
                    }
                    input.ReadMessage(NoticeMsg);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ImcReplaceMessage : pb::IMessage<ImcReplaceMessage> {
            private static readonly pb::MessageParser<ImcReplaceMessage> _parser = new pb::MessageParser<ImcReplaceMessage>(() => new ImcReplaceMessage());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ImcReplaceMessage> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcReplaceMessage() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcReplaceMessage(ImcReplaceMessage other) : this() {
              replaceMsg_ = other.replaceMsg_ != null ? other.replaceMsg_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcReplaceMessage Clone() {
              return new ImcReplaceMessage(this);
            }

            /// <summary>Field number for the "replaceMsg" field.</summary>
            public const int ReplaceMsgFieldNumber = 1;
            private global::AcFunDanmu.Im.Message.Types.Message replaceMsg_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Message.Types.Message ReplaceMsg {
              get { return replaceMsg_; }
              set {
                replaceMsg_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ImcReplaceMessage);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ImcReplaceMessage other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(ReplaceMsg, other.ReplaceMsg)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (replaceMsg_ != null) hash ^= ReplaceMsg.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (replaceMsg_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(ReplaceMsg);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (replaceMsg_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReplaceMsg);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ImcReplaceMessage other) {
              if (other == null) {
                return;
              }
              if (other.replaceMsg_ != null) {
                if (replaceMsg_ == null) {
                  ReplaceMsg = new global::AcFunDanmu.Im.Message.Types.Message();
                }
                ReplaceMsg.MergeFrom(other.ReplaceMsg);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (replaceMsg_ == null) {
                      ReplaceMsg = new global::AcFunDanmu.Im.Message.Types.Message();
                    }
                    input.ReadMessage(ReplaceMsg);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class Text : pb::IMessage<Text> {
            private static readonly pb::MessageParser<Text> _parser = new pb::MessageParser<Text>(() => new Text());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Text> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[2]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Text() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Text(Text other) : this() {
              text_ = other.text_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Text Clone() {
              return new Text(this);
            }

            /// <summary>Field number for the "text" field.</summary>
            public const int Text_FieldNumber = 1;
            private string text_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Text_ {
              get { return text_; }
              set {
                text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Text);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Text other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Text_ != other.Text_) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Text_.Length != 0) hash ^= Text_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Text_.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Text_);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Text_.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Text_);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Text other) {
              if (other == null) {
                return;
              }
              if (other.Text_.Length != 0) {
                Text_ = other.Text_;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Text_ = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class Image : pb::IMessage<Image> {
            private static readonly pb::MessageParser<Image> _parser = new pb::MessageParser<Image>(() => new Image());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Image> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[3]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Image() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Image(Image other) : this() {
              uri_ = other.uri_;
              width_ = other.width_;
              height_ = other.height_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Image Clone() {
              return new Image(this);
            }

            /// <summary>Field number for the "uri" field.</summary>
            public const int UriFieldNumber = 1;
            private string uri_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Uri {
              get { return uri_; }
              set {
                uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "width" field.</summary>
            public const int WidthFieldNumber = 2;
            private int width_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Width {
              get { return width_; }
              set {
                width_ = value;
              }
            }

            /// <summary>Field number for the "height" field.</summary>
            public const int HeightFieldNumber = 3;
            private int height_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Height {
              get { return height_; }
              set {
                height_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Image);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Image other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Uri != other.Uri) return false;
              if (Width != other.Width) return false;
              if (Height != other.Height) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Uri.Length != 0) hash ^= Uri.GetHashCode();
              if (Width != 0) hash ^= Width.GetHashCode();
              if (Height != 0) hash ^= Height.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Uri.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Uri);
              }
              if (Width != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(Width);
              }
              if (Height != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(Height);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Uri.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
              }
              if (Width != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
              }
              if (Height != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Image other) {
              if (other == null) {
                return;
              }
              if (other.Uri.Length != 0) {
                Uri = other.Uri;
              }
              if (other.Width != 0) {
                Width = other.Width;
              }
              if (other.Height != 0) {
                Height = other.Height;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Uri = input.ReadString();
                    break;
                  }
                  case 16: {
                    Width = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    Height = input.ReadInt32();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class Audio : pb::IMessage<Audio> {
            private static readonly pb::MessageParser<Audio> _parser = new pb::MessageParser<Audio>(() => new Audio());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Audio> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[4]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Audio() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Audio(Audio other) : this() {
              uri_ = other.uri_;
              duration_ = other.duration_;
              type_ = other.type_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Audio Clone() {
              return new Audio(this);
            }

            /// <summary>Field number for the "uri" field.</summary>
            public const int UriFieldNumber = 1;
            private string uri_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Uri {
              get { return uri_; }
              set {
                uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "duration" field.</summary>
            public const int DurationFieldNumber = 2;
            private int duration_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Duration {
              get { return duration_; }
              set {
                duration_ = value;
              }
            }

            /// <summary>Field number for the "type" field.</summary>
            public const int TypeFieldNumber = 3;
            private string type_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Type {
              get { return type_; }
              set {
                type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Audio);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Audio other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Uri != other.Uri) return false;
              if (Duration != other.Duration) return false;
              if (Type != other.Type) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Uri.Length != 0) hash ^= Uri.GetHashCode();
              if (Duration != 0) hash ^= Duration.GetHashCode();
              if (Type.Length != 0) hash ^= Type.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Uri.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Uri);
              }
              if (Duration != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(Duration);
              }
              if (Type.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(Type);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Uri.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
              }
              if (Duration != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Duration);
              }
              if (Type.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Audio other) {
              if (other == null) {
                return;
              }
              if (other.Uri.Length != 0) {
                Uri = other.Uri;
              }
              if (other.Duration != 0) {
                Duration = other.Duration;
              }
              if (other.Type.Length != 0) {
                Type = other.Type;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Uri = input.ReadString();
                    break;
                  }
                  case 16: {
                    Duration = input.ReadInt32();
                    break;
                  }
                  case 26: {
                    Type = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class Video : pb::IMessage<Video> {
            private static readonly pb::MessageParser<Video> _parser = new pb::MessageParser<Video>(() => new Video());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Video> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[5]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Video() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Video(Video other) : this() {
              uri_ = other.uri_;
              duration_ = other.duration_;
              width_ = other.width_;
              height_ = other.height_;
              coverUri_ = other.coverUri_;
              type_ = other.type_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Video Clone() {
              return new Video(this);
            }

            /// <summary>Field number for the "uri" field.</summary>
            public const int UriFieldNumber = 1;
            private string uri_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Uri {
              get { return uri_; }
              set {
                uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "duration" field.</summary>
            public const int DurationFieldNumber = 2;
            private int duration_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Duration {
              get { return duration_; }
              set {
                duration_ = value;
              }
            }

            /// <summary>Field number for the "width" field.</summary>
            public const int WidthFieldNumber = 3;
            private int width_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Width {
              get { return width_; }
              set {
                width_ = value;
              }
            }

            /// <summary>Field number for the "height" field.</summary>
            public const int HeightFieldNumber = 4;
            private int height_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Height {
              get { return height_; }
              set {
                height_ = value;
              }
            }

            /// <summary>Field number for the "coverUri" field.</summary>
            public const int CoverUriFieldNumber = 5;
            private string coverUri_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string CoverUri {
              get { return coverUri_; }
              set {
                coverUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "type" field.</summary>
            public const int TypeFieldNumber = 6;
            private string type_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Type {
              get { return type_; }
              set {
                type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Video);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Video other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Uri != other.Uri) return false;
              if (Duration != other.Duration) return false;
              if (Width != other.Width) return false;
              if (Height != other.Height) return false;
              if (CoverUri != other.CoverUri) return false;
              if (Type != other.Type) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Uri.Length != 0) hash ^= Uri.GetHashCode();
              if (Duration != 0) hash ^= Duration.GetHashCode();
              if (Width != 0) hash ^= Width.GetHashCode();
              if (Height != 0) hash ^= Height.GetHashCode();
              if (CoverUri.Length != 0) hash ^= CoverUri.GetHashCode();
              if (Type.Length != 0) hash ^= Type.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Uri.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Uri);
              }
              if (Duration != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(Duration);
              }
              if (Width != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(Width);
              }
              if (Height != 0) {
                output.WriteRawTag(32);
                output.WriteInt32(Height);
              }
              if (CoverUri.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(CoverUri);
              }
              if (Type.Length != 0) {
                output.WriteRawTag(50);
                output.WriteString(Type);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Uri.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
              }
              if (Duration != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Duration);
              }
              if (Width != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
              }
              if (Height != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
              }
              if (CoverUri.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(CoverUri);
              }
              if (Type.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Video other) {
              if (other == null) {
                return;
              }
              if (other.Uri.Length != 0) {
                Uri = other.Uri;
              }
              if (other.Duration != 0) {
                Duration = other.Duration;
              }
              if (other.Width != 0) {
                Width = other.Width;
              }
              if (other.Height != 0) {
                Height = other.Height;
              }
              if (other.CoverUri.Length != 0) {
                CoverUri = other.CoverUri;
              }
              if (other.Type.Length != 0) {
                Type = other.Type;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Uri = input.ReadString();
                    break;
                  }
                  case 16: {
                    Duration = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    Width = input.ReadInt32();
                    break;
                  }
                  case 32: {
                    Height = input.ReadInt32();
                    break;
                  }
                  case 42: {
                    CoverUri = input.ReadString();
                    break;
                  }
                  case 50: {
                    Type = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class Custon : pb::IMessage<Custon> {
            private static readonly pb::MessageParser<Custon> _parser = new pb::MessageParser<Custon>(() => new Custon());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Custon> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[6]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Custon() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Custon(Custon other) : this() {
              payload_ = other.payload_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Custon Clone() {
              return new Custon(this);
            }

            /// <summary>Field number for the "payload" field.</summary>
            public const int PayloadFieldNumber = 1;
            private string payload_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Payload {
              get { return payload_; }
              set {
                payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Custon);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Custon other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Payload != other.Payload) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Payload.Length != 0) hash ^= Payload.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Payload.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Payload);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Payload.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Payload);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Custon other) {
              if (other == null) {
                return;
              }
              if (other.Payload.Length != 0) {
                Payload = other.Payload;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Payload = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class PicUrl : pb::IMessage<PicUrl> {
            private static readonly pb::MessageParser<PicUrl> _parser = new pb::MessageParser<PicUrl>(() => new PicUrl());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<PicUrl> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[7]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PicUrl() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PicUrl(PicUrl other) : this() {
              cdn_ = other.cdn_;
              url_ = other.url_;
              urlPattern_ = other.urlPattern_;
              ip_ = other.ip_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PicUrl Clone() {
              return new PicUrl(this);
            }

            /// <summary>Field number for the "cdn" field.</summary>
            public const int CdnFieldNumber = 1;
            private string cdn_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Cdn {
              get { return cdn_; }
              set {
                cdn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "url" field.</summary>
            public const int UrlFieldNumber = 2;
            private string url_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Url {
              get { return url_; }
              set {
                url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "urlPattern" field.</summary>
            public const int UrlPatternFieldNumber = 3;
            private string urlPattern_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string UrlPattern {
              get { return urlPattern_; }
              set {
                urlPattern_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "ip" field.</summary>
            public const int IpFieldNumber = 4;
            private string ip_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Ip {
              get { return ip_; }
              set {
                ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as PicUrl);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(PicUrl other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Cdn != other.Cdn) return false;
              if (Url != other.Url) return false;
              if (UrlPattern != other.UrlPattern) return false;
              if (Ip != other.Ip) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Cdn.Length != 0) hash ^= Cdn.GetHashCode();
              if (Url.Length != 0) hash ^= Url.GetHashCode();
              if (UrlPattern.Length != 0) hash ^= UrlPattern.GetHashCode();
              if (Ip.Length != 0) hash ^= Ip.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Cdn.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Cdn);
              }
              if (Url.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Url);
              }
              if (UrlPattern.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(UrlPattern);
              }
              if (Ip.Length != 0) {
                output.WriteRawTag(34);
                output.WriteString(Ip);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Cdn.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Cdn);
              }
              if (Url.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
              }
              if (UrlPattern.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(UrlPattern);
              }
              if (Ip.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(PicUrl other) {
              if (other == null) {
                return;
              }
              if (other.Cdn.Length != 0) {
                Cdn = other.Cdn;
              }
              if (other.Url.Length != 0) {
                Url = other.Url;
              }
              if (other.UrlPattern.Length != 0) {
                UrlPattern = other.UrlPattern;
              }
              if (other.Ip.Length != 0) {
                Ip = other.Ip;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Cdn = input.ReadString();
                    break;
                  }
                  case 18: {
                    Url = input.ReadString();
                    break;
                  }
                  case 26: {
                    UrlPattern = input.ReadString();
                    break;
                  }
                  case 34: {
                    Ip = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class Emoticon : pb::IMessage<Emoticon> {
            private static readonly pb::MessageParser<Emoticon> _parser = new pb::MessageParser<Emoticon>(() => new Emoticon());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Emoticon> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[8]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Emoticon() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Emoticon(Emoticon other) : this() {
              id_ = other.id_;
              packageId_ = other.packageId_;
              name_ = other.name_;
              type_ = other.type_;
              bigUrl_ = other.bigUrl_.Clone();
              width_ = other.width_;
              height_ = other.height_;
              emoticonCOde_ = other.emoticonCOde_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Emoticon Clone() {
              return new Emoticon(this);
            }

            /// <summary>Field number for the "id" field.</summary>
            public const int IdFieldNumber = 1;
            private string id_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Id {
              get { return id_; }
              set {
                id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "packageId" field.</summary>
            public const int PackageIdFieldNumber = 2;
            private string packageId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string PackageId {
              get { return packageId_; }
              set {
                packageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "name" field.</summary>
            public const int NameFieldNumber = 3;
            private string name_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Name {
              get { return name_; }
              set {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "type" field.</summary>
            public const int TypeFieldNumber = 4;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Type type_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Type.Unknown;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Type Type {
              get { return type_; }
              set {
                type_ = value;
              }
            }

            /// <summary>Field number for the "bigUrl" field.</summary>
            public const int BigUrlFieldNumber = 5;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Cloud.Types.Message.Types.PicUrl> _repeated_bigUrl_codec
                = pb::FieldCodec.ForMessage(42, global::AcFunDanmu.Im.Cloud.Types.Message.Types.PicUrl.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.PicUrl> bigUrl_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.PicUrl>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.PicUrl> BigUrl {
              get { return bigUrl_; }
            }

            /// <summary>Field number for the "width" field.</summary>
            public const int WidthFieldNumber = 6;
            private int width_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Width {
              get { return width_; }
              set {
                width_ = value;
              }
            }

            /// <summary>Field number for the "height" field.</summary>
            public const int HeightFieldNumber = 7;
            private int height_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Height {
              get { return height_; }
              set {
                height_ = value;
              }
            }

            /// <summary>Field number for the "emoticonCOde" field.</summary>
            public const int EmoticonCOdeFieldNumber = 8;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Code> _repeated_emoticonCOde_codec
                = pb::FieldCodec.ForMessage(66, global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Code.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Code> emoticonCOde_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Code>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Code> EmoticonCOde {
              get { return emoticonCOde_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Emoticon);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Emoticon other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Id != other.Id) return false;
              if (PackageId != other.PackageId) return false;
              if (Name != other.Name) return false;
              if (Type != other.Type) return false;
              if(!bigUrl_.Equals(other.bigUrl_)) return false;
              if (Width != other.Width) return false;
              if (Height != other.Height) return false;
              if(!emoticonCOde_.Equals(other.emoticonCOde_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Id.Length != 0) hash ^= Id.GetHashCode();
              if (PackageId.Length != 0) hash ^= PackageId.GetHashCode();
              if (Name.Length != 0) hash ^= Name.GetHashCode();
              if (Type != global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Type.Unknown) hash ^= Type.GetHashCode();
              hash ^= bigUrl_.GetHashCode();
              if (Width != 0) hash ^= Width.GetHashCode();
              if (Height != 0) hash ^= Height.GetHashCode();
              hash ^= emoticonCOde_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Id.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Id);
              }
              if (PackageId.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(PackageId);
              }
              if (Name.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(Name);
              }
              if (Type != global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Type.Unknown) {
                output.WriteRawTag(32);
                output.WriteEnum((int) Type);
              }
              bigUrl_.WriteTo(output, _repeated_bigUrl_codec);
              if (Width != 0) {
                output.WriteRawTag(48);
                output.WriteInt32(Width);
              }
              if (Height != 0) {
                output.WriteRawTag(56);
                output.WriteInt32(Height);
              }
              emoticonCOde_.WriteTo(output, _repeated_emoticonCOde_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Id.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
              }
              if (PackageId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageId);
              }
              if (Name.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
              }
              if (Type != global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Type.Unknown) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
              }
              size += bigUrl_.CalculateSize(_repeated_bigUrl_codec);
              if (Width != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
              }
              if (Height != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
              }
              size += emoticonCOde_.CalculateSize(_repeated_emoticonCOde_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Emoticon other) {
              if (other == null) {
                return;
              }
              if (other.Id.Length != 0) {
                Id = other.Id;
              }
              if (other.PackageId.Length != 0) {
                PackageId = other.PackageId;
              }
              if (other.Name.Length != 0) {
                Name = other.Name;
              }
              if (other.Type != global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Type.Unknown) {
                Type = other.Type;
              }
              bigUrl_.Add(other.bigUrl_);
              if (other.Width != 0) {
                Width = other.Width;
              }
              if (other.Height != 0) {
                Height = other.Height;
              }
              emoticonCOde_.Add(other.emoticonCOde_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Id = input.ReadString();
                    break;
                  }
                  case 18: {
                    PackageId = input.ReadString();
                    break;
                  }
                  case 26: {
                    Name = input.ReadString();
                    break;
                  }
                  case 32: {
                    Type = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Types.Type) input.ReadEnum();
                    break;
                  }
                  case 42: {
                    bigUrl_.AddEntriesFrom(input, _repeated_bigUrl_codec);
                    break;
                  }
                  case 48: {
                    Width = input.ReadInt32();
                    break;
                  }
                  case 56: {
                    Height = input.ReadInt32();
                    break;
                  }
                  case 66: {
                    emoticonCOde_.AddEntriesFrom(input, _repeated_emoticonCOde_codec);
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the Emoticon message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public enum Type {
                [pbr::OriginalName("UNKNOWN")] Unknown = 0,
                [pbr::OriginalName("BASIC")] Basic = 1,
                [pbr::OriginalName("IMAGE")] Image = 2,
                [pbr::OriginalName("GIF")] Gif = 3,
                [pbr::OriginalName("SPECIAL_EFFECT")] SpecialEffect = 4,
                [pbr::OriginalName("SCRIPT")] Script = 5,
              }

              public sealed partial class Code : pb::IMessage<Code> {
                private static readonly pb::MessageParser<Code> _parser = new pb::MessageParser<Code>(() => new Code());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<Code> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::AcFunDanmu.Im.Cloud.Types.Message.Types.Emoticon.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Code() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Code(Code other) : this() {
                  language_ = other.language_;
                  code_ = other.code_.Clone();
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Code Clone() {
                  return new Code(this);
                }

                /// <summary>Field number for the "language" field.</summary>
                public const int LanguageFieldNumber = 1;
                private string language_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string Language {
                  get { return language_; }
                  set {
                    language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "code" field.</summary>
                public const int Code_FieldNumber = 2;
                private static readonly pb::FieldCodec<string> _repeated_code_codec
                    = pb::FieldCodec.ForString(18);
                private readonly pbc::RepeatedField<string> code_ = new pbc::RepeatedField<string>();
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pbc::RepeatedField<string> Code_ {
                  get { return code_; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as Code);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(Code other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (Language != other.Language) return false;
                  if(!code_.Equals(other.code_)) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (Language.Length != 0) hash ^= Language.GetHashCode();
                  hash ^= code_.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (Language.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(Language);
                  }
                  code_.WriteTo(output, _repeated_code_codec);
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (Language.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
                  }
                  size += code_.CalculateSize(_repeated_code_codec);
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(Code other) {
                  if (other == null) {
                    return;
                  }
                  if (other.Language.Length != 0) {
                    Language = other.Language;
                  }
                  code_.Add(other.code_);
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        Language = input.ReadString();
                        break;
                      }
                      case 18: {
                        code_.AddEntriesFrom(input, _repeated_code_codec);
                        break;
                      }
                    }
                  }
                }

              }

            }
            #endregion

          }

          public sealed partial class File : pb::IMessage<File> {
            private static readonly pb::MessageParser<File> _parser = new pb::MessageParser<File>(() => new File());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<File> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[9]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public File() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public File(File other) : this() {
              uri_ = other.uri_;
              name_ = other.name_;
              ext_ = other.ext_;
              extra_ = other.extra_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public File Clone() {
              return new File(this);
            }

            /// <summary>Field number for the "uri" field.</summary>
            public const int UriFieldNumber = 1;
            private string uri_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Uri {
              get { return uri_; }
              set {
                uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "name" field.</summary>
            public const int NameFieldNumber = 2;
            private string name_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Name {
              get { return name_; }
              set {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "ext" field.</summary>
            public const int ExtFieldNumber = 3;
            private string ext_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Ext {
              get { return ext_; }
              set {
                ext_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "extra" field.</summary>
            public const int ExtraFieldNumber = 4;
            private string extra_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Extra {
              get { return extra_; }
              set {
                extra_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as File);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(File other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Uri != other.Uri) return false;
              if (Name != other.Name) return false;
              if (Ext != other.Ext) return false;
              if (Extra != other.Extra) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Uri.Length != 0) hash ^= Uri.GetHashCode();
              if (Name.Length != 0) hash ^= Name.GetHashCode();
              if (Ext.Length != 0) hash ^= Ext.GetHashCode();
              if (Extra.Length != 0) hash ^= Extra.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Uri.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Uri);
              }
              if (Name.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Name);
              }
              if (Ext.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(Ext);
              }
              if (Extra.Length != 0) {
                output.WriteRawTag(34);
                output.WriteString(Extra);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Uri.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
              }
              if (Name.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
              }
              if (Ext.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Ext);
              }
              if (Extra.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Extra);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(File other) {
              if (other == null) {
                return;
              }
              if (other.Uri.Length != 0) {
                Uri = other.Uri;
              }
              if (other.Name.Length != 0) {
                Name = other.Name;
              }
              if (other.Ext.Length != 0) {
                Ext = other.Ext;
              }
              if (other.Extra.Length != 0) {
                Extra = other.Extra;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Uri = input.ReadString();
                    break;
                  }
                  case 18: {
                    Name = input.ReadString();
                    break;
                  }
                  case 26: {
                    Ext = input.ReadString();
                    break;
                  }
                  case 34: {
                    Extra = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class Reference : pb::IMessage<Reference> {
            private static readonly pb::MessageParser<Reference> _parser = new pb::MessageParser<Reference>(() => new Reference());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Reference> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[10]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Reference() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Reference(Reference other) : this() {
              originMsg_ = other.originMsg_ != null ? other.originMsg_.Clone() : null;
              referenceMsg_ = other.referenceMsg_ != null ? other.referenceMsg_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Reference Clone() {
              return new Reference(this);
            }

            /// <summary>Field number for the "originMsg" field.</summary>
            public const int OriginMsgFieldNumber = 1;
            private global::AcFunDanmu.Im.Message.Types.Message originMsg_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Message.Types.Message OriginMsg {
              get { return originMsg_; }
              set {
                originMsg_ = value;
              }
            }

            /// <summary>Field number for the "referenceMsg" field.</summary>
            public const int ReferenceMsgFieldNumber = 2;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.Reference.Types.ReferenceMessage referenceMsg_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.Reference.Types.ReferenceMessage ReferenceMsg {
              get { return referenceMsg_; }
              set {
                referenceMsg_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Reference);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Reference other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(OriginMsg, other.OriginMsg)) return false;
              if (!object.Equals(ReferenceMsg, other.ReferenceMsg)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (originMsg_ != null) hash ^= OriginMsg.GetHashCode();
              if (referenceMsg_ != null) hash ^= ReferenceMsg.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (originMsg_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(OriginMsg);
              }
              if (referenceMsg_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(ReferenceMsg);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (originMsg_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(OriginMsg);
              }
              if (referenceMsg_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReferenceMsg);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Reference other) {
              if (other == null) {
                return;
              }
              if (other.originMsg_ != null) {
                if (originMsg_ == null) {
                  OriginMsg = new global::AcFunDanmu.Im.Message.Types.Message();
                }
                OriginMsg.MergeFrom(other.OriginMsg);
              }
              if (other.referenceMsg_ != null) {
                if (referenceMsg_ == null) {
                  ReferenceMsg = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.Reference.Types.ReferenceMessage();
                }
                ReferenceMsg.MergeFrom(other.ReferenceMsg);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (originMsg_ == null) {
                      OriginMsg = new global::AcFunDanmu.Im.Message.Types.Message();
                    }
                    input.ReadMessage(OriginMsg);
                    break;
                  }
                  case 18: {
                    if (referenceMsg_ == null) {
                      ReferenceMsg = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.Reference.Types.ReferenceMessage();
                    }
                    input.ReadMessage(ReferenceMsg);
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the Reference message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public sealed partial class ReferenceMessage : pb::IMessage<ReferenceMessage> {
                private static readonly pb::MessageParser<ReferenceMessage> _parser = new pb::MessageParser<ReferenceMessage>(() => new ReferenceMessage());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<ReferenceMessage> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::AcFunDanmu.Im.Cloud.Types.Message.Types.Reference.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ReferenceMessage() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ReferenceMessage(ReferenceMessage other) : this() {
                  contentType_ = other.contentType_;
                  content_ = other.content_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ReferenceMessage Clone() {
                  return new ReferenceMessage(this);
                }

                /// <summary>Field number for the "contentType" field.</summary>
                public const int ContentTypeFieldNumber = 1;
                private int contentType_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int ContentType {
                  get { return contentType_; }
                  set {
                    contentType_ = value;
                  }
                }

                /// <summary>Field number for the "content" field.</summary>
                public const int ContentFieldNumber = 2;
                private pb::ByteString content_ = pb::ByteString.Empty;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pb::ByteString Content {
                  get { return content_; }
                  set {
                    content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as ReferenceMessage);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(ReferenceMessage other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (ContentType != other.ContentType) return false;
                  if (Content != other.Content) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (ContentType != 0) hash ^= ContentType.GetHashCode();
                  if (Content.Length != 0) hash ^= Content.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (ContentType != 0) {
                    output.WriteRawTag(8);
                    output.WriteInt32(ContentType);
                  }
                  if (Content.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteBytes(Content);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (ContentType != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContentType);
                  }
                  if (Content.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(ReferenceMessage other) {
                  if (other == null) {
                    return;
                  }
                  if (other.ContentType != 0) {
                    ContentType = other.ContentType;
                  }
                  if (other.Content.Length != 0) {
                    Content = other.Content;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        ContentType = input.ReadInt32();
                        break;
                      }
                      case 18: {
                        Content = input.ReadBytes();
                        break;
                      }
                    }
                  }
                }

              }

            }
            #endregion

          }

          public sealed partial class ForwardMessageContent : pb::IMessage<ForwardMessageContent> {
            private static readonly pb::MessageParser<ForwardMessageContent> _parser = new pb::MessageParser<ForwardMessageContent>(() => new ForwardMessageContent());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ForwardMessageContent> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[11]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ForwardMessageContent() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ForwardMessageContent(ForwardMessageContent other) : this() {
              message_ = other.message_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ForwardMessageContent Clone() {
              return new ForwardMessageContent(this);
            }

            /// <summary>Field number for the "message" field.</summary>
            public const int MessageFieldNumber = 1;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Message.Types.Message> _repeated_message_codec
                = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Message.Types.Message.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.Message> message_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.Message>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Message.Types.Message> Message {
              get { return message_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ForwardMessageContent);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ForwardMessageContent other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!message_.Equals(other.message_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= message_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              message_.WriteTo(output, _repeated_message_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += message_.CalculateSize(_repeated_message_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ForwardMessageContent other) {
              if (other == null) {
                return;
              }
              message_.Add(other.message_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    message_.AddEntriesFrom(input, _repeated_message_codec);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class NoticePlaceholderMeta : pb::IMessage<NoticePlaceholderMeta> {
            private static readonly pb::MessageParser<NoticePlaceholderMeta> _parser = new pb::MessageParser<NoticePlaceholderMeta>(() => new NoticePlaceholderMeta());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<NoticePlaceholderMeta> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[12]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public NoticePlaceholderMeta() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public NoticePlaceholderMeta(NoticePlaceholderMeta other) : this() {
              targetId_ = other.targetId_;
              startIndex_ = other.startIndex_;
              length_ = other.length_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public NoticePlaceholderMeta Clone() {
              return new NoticePlaceholderMeta(this);
            }

            /// <summary>Field number for the "targetId" field.</summary>
            public const int TargetIdFieldNumber = 1;
            private string targetId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string TargetId {
              get { return targetId_; }
              set {
                targetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "startIndex" field.</summary>
            public const int StartIndexFieldNumber = 2;
            private int startIndex_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int StartIndex {
              get { return startIndex_; }
              set {
                startIndex_ = value;
              }
            }

            /// <summary>Field number for the "length" field.</summary>
            public const int LengthFieldNumber = 3;
            private int length_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Length {
              get { return length_; }
              set {
                length_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as NoticePlaceholderMeta);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(NoticePlaceholderMeta other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (TargetId != other.TargetId) return false;
              if (StartIndex != other.StartIndex) return false;
              if (Length != other.Length) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (TargetId.Length != 0) hash ^= TargetId.GetHashCode();
              if (StartIndex != 0) hash ^= StartIndex.GetHashCode();
              if (Length != 0) hash ^= Length.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (TargetId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(TargetId);
              }
              if (StartIndex != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(StartIndex);
              }
              if (Length != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(Length);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (TargetId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetId);
              }
              if (StartIndex != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
              }
              if (Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(NoticePlaceholderMeta other) {
              if (other == null) {
                return;
              }
              if (other.TargetId.Length != 0) {
                TargetId = other.TargetId;
              }
              if (other.StartIndex != 0) {
                StartIndex = other.StartIndex;
              }
              if (other.Length != 0) {
                Length = other.Length;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    TargetId = input.ReadString();
                    break;
                  }
                  case 16: {
                    StartIndex = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    Length = input.ReadInt32();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ImcNoticeMessage : pb::IMessage<ImcNoticeMessage> {
            private static readonly pb::MessageParser<ImcNoticeMessage> _parser = new pb::MessageParser<ImcNoticeMessage>(() => new ImcNoticeMessage());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ImcNoticeMessage> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[13]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcNoticeMessage() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcNoticeMessage(ImcNoticeMessage other) : this() {
              text_ = other.text_;
              noticePlaceholderMeta_ = other.noticePlaceholderMeta_.Clone();
              noticeMetaType_ = other.noticeMetaType_;
              noticeMetaInfo_ = other.noticeMetaInfo_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcNoticeMessage Clone() {
              return new ImcNoticeMessage(this);
            }

            /// <summary>Field number for the "text" field.</summary>
            public const int TextFieldNumber = 1;
            private string text_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Text {
              get { return text_; }
              set {
                text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "noticePlaceholderMeta" field.</summary>
            public const int NoticePlaceholderMetaFieldNumber = 2;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Cloud.Types.Message.Types.NoticePlaceholderMeta> _repeated_noticePlaceholderMeta_codec
                = pb::FieldCodec.ForMessage(18, global::AcFunDanmu.Im.Cloud.Types.Message.Types.NoticePlaceholderMeta.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.NoticePlaceholderMeta> noticePlaceholderMeta_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.NoticePlaceholderMeta>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.NoticePlaceholderMeta> NoticePlaceholderMeta {
              get { return noticePlaceholderMeta_; }
            }

            /// <summary>Field number for the "noticeMetaType" field.</summary>
            public const int NoticeMetaTypeFieldNumber = 3;
            private int noticeMetaType_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int NoticeMetaType {
              get { return noticeMetaType_; }
              set {
                noticeMetaType_ = value;
              }
            }

            /// <summary>Field number for the "noticeMetaInfo" field.</summary>
            public const int NoticeMetaInfoFieldNumber = 4;
            private pb::ByteString noticeMetaInfo_ = pb::ByteString.Empty;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pb::ByteString NoticeMetaInfo {
              get { return noticeMetaInfo_; }
              set {
                noticeMetaInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ImcNoticeMessage);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ImcNoticeMessage other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Text != other.Text) return false;
              if(!noticePlaceholderMeta_.Equals(other.noticePlaceholderMeta_)) return false;
              if (NoticeMetaType != other.NoticeMetaType) return false;
              if (NoticeMetaInfo != other.NoticeMetaInfo) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Text.Length != 0) hash ^= Text.GetHashCode();
              hash ^= noticePlaceholderMeta_.GetHashCode();
              if (NoticeMetaType != 0) hash ^= NoticeMetaType.GetHashCode();
              if (NoticeMetaInfo.Length != 0) hash ^= NoticeMetaInfo.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Text.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Text);
              }
              noticePlaceholderMeta_.WriteTo(output, _repeated_noticePlaceholderMeta_codec);
              if (NoticeMetaType != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(NoticeMetaType);
              }
              if (NoticeMetaInfo.Length != 0) {
                output.WriteRawTag(34);
                output.WriteBytes(NoticeMetaInfo);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Text.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
              }
              size += noticePlaceholderMeta_.CalculateSize(_repeated_noticePlaceholderMeta_codec);
              if (NoticeMetaType != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(NoticeMetaType);
              }
              if (NoticeMetaInfo.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(NoticeMetaInfo);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ImcNoticeMessage other) {
              if (other == null) {
                return;
              }
              if (other.Text.Length != 0) {
                Text = other.Text;
              }
              noticePlaceholderMeta_.Add(other.noticePlaceholderMeta_);
              if (other.NoticeMetaType != 0) {
                NoticeMetaType = other.NoticeMetaType;
              }
              if (other.NoticeMetaInfo.Length != 0) {
                NoticeMetaInfo = other.NoticeMetaInfo;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Text = input.ReadString();
                    break;
                  }
                  case 18: {
                    noticePlaceholderMeta_.AddEntriesFrom(input, _repeated_noticePlaceholderMeta_codec);
                    break;
                  }
                  case 24: {
                    NoticeMetaType = input.ReadInt32();
                    break;
                  }
                  case 34: {
                    NoticeMetaInfo = input.ReadBytes();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class LinkedProfileMetaInfo : pb::IMessage<LinkedProfileMetaInfo> {
            private static readonly pb::MessageParser<LinkedProfileMetaInfo> _parser = new pb::MessageParser<LinkedProfileMetaInfo>(() => new LinkedProfileMetaInfo());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<LinkedProfileMetaInfo> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[14]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LinkedProfileMetaInfo() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LinkedProfileMetaInfo(LinkedProfileMetaInfo other) : this() {
              userId_ = other.userId_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LinkedProfileMetaInfo Clone() {
              return new LinkedProfileMetaInfo(this);
            }

            /// <summary>Field number for the "userId" field.</summary>
            public const int UserIdFieldNumber = 1;
            private static readonly pb::FieldCodec<long> _repeated_userId_codec
                = pb::FieldCodec.ForInt64(10);
            private readonly pbc::RepeatedField<long> userId_ = new pbc::RepeatedField<long>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<long> UserId {
              get { return userId_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as LinkedProfileMetaInfo);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(LinkedProfileMetaInfo other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!userId_.Equals(other.userId_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= userId_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              userId_.WriteTo(output, _repeated_userId_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += userId_.CalculateSize(_repeated_userId_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(LinkedProfileMetaInfo other) {
              if (other == null) {
                return;
              }
              userId_.Add(other.userId_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10:
                  case 8: {
                    userId_.AddEntriesFrom(input, _repeated_userId_codec);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ConfirmInviteIntoGroupNoticeMetaInfo : pb::IMessage<ConfirmInviteIntoGroupNoticeMetaInfo> {
            private static readonly pb::MessageParser<ConfirmInviteIntoGroupNoticeMetaInfo> _parser = new pb::MessageParser<ConfirmInviteIntoGroupNoticeMetaInfo>(() => new ConfirmInviteIntoGroupNoticeMetaInfo());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ConfirmInviteIntoGroupNoticeMetaInfo> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[15]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ConfirmInviteIntoGroupNoticeMetaInfo() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ConfirmInviteIntoGroupNoticeMetaInfo(ConfirmInviteIntoGroupNoticeMetaInfo other) : this() {
              requestId_ = other.requestId_;
              groupId_ = other.groupId_;
              status_ = other.status_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ConfirmInviteIntoGroupNoticeMetaInfo Clone() {
              return new ConfirmInviteIntoGroupNoticeMetaInfo(this);
            }

            /// <summary>Field number for the "requestId" field.</summary>
            public const int RequestIdFieldNumber = 1;
            private long requestId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long RequestId {
              get { return requestId_; }
              set {
                requestId_ = value;
              }
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 2;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "status" field.</summary>
            public const int StatusFieldNumber = 3;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus status_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus Status {
              get { return status_; }
              set {
                status_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ConfirmInviteIntoGroupNoticeMetaInfo);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ConfirmInviteIntoGroupNoticeMetaInfo other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (RequestId != other.RequestId) return false;
              if (GroupId != other.GroupId) return false;
              if (Status != other.Status) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (RequestId != 0L) hash ^= RequestId.GetHashCode();
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) hash ^= Status.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (RequestId != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(RequestId);
              }
              if (GroupId.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(GroupId);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                output.WriteRawTag(24);
                output.WriteEnum((int) Status);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (RequestId != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(RequestId);
              }
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ConfirmInviteIntoGroupNoticeMetaInfo other) {
              if (other == null) {
                return;
              }
              if (other.RequestId != 0L) {
                RequestId = other.RequestId;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                Status = other.Status;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    RequestId = input.ReadInt64();
                    break;
                  }
                  case 18: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 24: {
                    Status = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus) input.ReadEnum();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ConfirmJoinIntoGroupNoticeMetaInfo : pb::IMessage<ConfirmJoinIntoGroupNoticeMetaInfo> {
            private static readonly pb::MessageParser<ConfirmJoinIntoGroupNoticeMetaInfo> _parser = new pb::MessageParser<ConfirmJoinIntoGroupNoticeMetaInfo>(() => new ConfirmJoinIntoGroupNoticeMetaInfo());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ConfirmJoinIntoGroupNoticeMetaInfo> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[16]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ConfirmJoinIntoGroupNoticeMetaInfo() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ConfirmJoinIntoGroupNoticeMetaInfo(ConfirmJoinIntoGroupNoticeMetaInfo other) : this() {
              requestId_ = other.requestId_;
              groupId_ = other.groupId_;
              status_ = other.status_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ConfirmJoinIntoGroupNoticeMetaInfo Clone() {
              return new ConfirmJoinIntoGroupNoticeMetaInfo(this);
            }

            /// <summary>Field number for the "requestId" field.</summary>
            public const int RequestIdFieldNumber = 1;
            private long requestId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long RequestId {
              get { return requestId_; }
              set {
                requestId_ = value;
              }
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 2;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "status" field.</summary>
            public const int StatusFieldNumber = 3;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus status_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus Status {
              get { return status_; }
              set {
                status_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ConfirmJoinIntoGroupNoticeMetaInfo);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ConfirmJoinIntoGroupNoticeMetaInfo other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (RequestId != other.RequestId) return false;
              if (GroupId != other.GroupId) return false;
              if (Status != other.Status) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (RequestId != 0L) hash ^= RequestId.GetHashCode();
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) hash ^= Status.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (RequestId != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(RequestId);
              }
              if (GroupId.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(GroupId);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                output.WriteRawTag(24);
                output.WriteEnum((int) Status);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (RequestId != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(RequestId);
              }
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ConfirmJoinIntoGroupNoticeMetaInfo other) {
              if (other == null) {
                return;
              }
              if (other.RequestId != 0L) {
                RequestId = other.RequestId;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                Status = other.Status;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    RequestId = input.ReadInt64();
                    break;
                  }
                  case 18: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 24: {
                    Status = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus) input.ReadEnum();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupCreateRequest : pb::IMessage<GroupCreateRequest> {
            private static readonly pb::MessageParser<GroupCreateRequest> _parser = new pb::MessageParser<GroupCreateRequest>(() => new GroupCreateRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupCreateRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[17]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupCreateRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupCreateRequest(GroupCreateRequest other) : this() {
              members_ = other.members_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupCreateRequest Clone() {
              return new GroupCreateRequest(this);
            }

            /// <summary>Field number for the "members" field.</summary>
            public const int MembersFieldNumber = 1;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_members_codec
                = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Basic.Types.User.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> members_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> Members {
              get { return members_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupCreateRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupCreateRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!members_.Equals(other.members_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= members_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              members_.WriteTo(output, _repeated_members_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += members_.CalculateSize(_repeated_members_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupCreateRequest other) {
              if (other == null) {
                return;
              }
              members_.Add(other.members_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    members_.AddEntriesFrom(input, _repeated_members_codec);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupCreateReponse : pb::IMessage<GroupCreateReponse> {
            private static readonly pb::MessageParser<GroupCreateReponse> _parser = new pb::MessageParser<GroupCreateReponse>(() => new GroupCreateReponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupCreateReponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[18]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupCreateReponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupCreateReponse(GroupCreateReponse other) : this() {
              groupId_ = other.groupId_;
              groupInfo_ = other.groupInfo_ != null ? other.groupInfo_.Clone() : null;
              members_ = other.members_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupCreateReponse Clone() {
              return new GroupCreateReponse(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "groupInfo" field.</summary>
            public const int GroupInfoFieldNumber = 2;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInfo groupInfo_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInfo GroupInfo {
              get { return groupInfo_; }
              set {
                groupInfo_ = value;
              }
            }

            /// <summary>Field number for the "members" field.</summary>
            public const int MembersFieldNumber = 3;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember> _repeated_members_codec
                = pb::FieldCodec.ForMessage(26, global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember> members_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember> Members {
              get { return members_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupCreateReponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupCreateReponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if (!object.Equals(GroupInfo, other.GroupInfo)) return false;
              if(!members_.Equals(other.members_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (groupInfo_ != null) hash ^= GroupInfo.GetHashCode();
              hash ^= members_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (groupInfo_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(GroupInfo);
              }
              members_.WriteTo(output, _repeated_members_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (groupInfo_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupInfo);
              }
              size += members_.CalculateSize(_repeated_members_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupCreateReponse other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.groupInfo_ != null) {
                if (groupInfo_ == null) {
                  GroupInfo = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInfo();
                }
                GroupInfo.MergeFrom(other.GroupInfo);
              }
              members_.Add(other.members_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (groupInfo_ == null) {
                      GroupInfo = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInfo();
                    }
                    input.ReadMessage(GroupInfo);
                    break;
                  }
                  case 26: {
                    members_.AddEntriesFrom(input, _repeated_members_codec);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupDeleteRequest : pb::IMessage<GroupDeleteRequest> {
            private static readonly pb::MessageParser<GroupDeleteRequest> _parser = new pb::MessageParser<GroupDeleteRequest>(() => new GroupDeleteRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupDeleteRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[19]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupDeleteRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupDeleteRequest(GroupDeleteRequest other) : this() {
              groupId_ = other.groupId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupDeleteRequest Clone() {
              return new GroupDeleteRequest(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupDeleteRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupDeleteRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupDeleteRequest other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupDeleteResponse : pb::IMessage<GroupDeleteResponse> {
            private static readonly pb::MessageParser<GroupDeleteResponse> _parser = new pb::MessageParser<GroupDeleteResponse>(() => new GroupDeleteResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupDeleteResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[20]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupDeleteResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupDeleteResponse(GroupDeleteResponse other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupDeleteResponse Clone() {
              return new GroupDeleteResponse(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupDeleteResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupDeleteResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupDeleteResponse other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            }

          }

          public sealed partial class GroupInviteRequest : pb::IMessage<GroupInviteRequest> {
            private static readonly pb::MessageParser<GroupInviteRequest> _parser = new pb::MessageParser<GroupInviteRequest>(() => new GroupInviteRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupInviteRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[21]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupInviteRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupInviteRequest(GroupInviteRequest other) : this() {
              groupId_ = other.groupId_;
              members_ = other.members_.Clone();
              descContent_ = other.descContent_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupInviteRequest Clone() {
              return new GroupInviteRequest(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "members" field.</summary>
            public const int MembersFieldNumber = 2;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_members_codec
                = pb::FieldCodec.ForMessage(18, global::AcFunDanmu.Im.Basic.Types.User.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> members_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> Members {
              get { return members_; }
            }

            /// <summary>Field number for the "descContent" field.</summary>
            public const int DescContentFieldNumber = 3;
            private string descContent_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string DescContent {
              get { return descContent_; }
              set {
                descContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupInviteRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupInviteRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if(!members_.Equals(other.members_)) return false;
              if (DescContent != other.DescContent) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              hash ^= members_.GetHashCode();
              if (DescContent.Length != 0) hash ^= DescContent.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              members_.WriteTo(output, _repeated_members_codec);
              if (DescContent.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(DescContent);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              size += members_.CalculateSize(_repeated_members_codec);
              if (DescContent.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(DescContent);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupInviteRequest other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              members_.Add(other.members_);
              if (other.DescContent.Length != 0) {
                DescContent = other.DescContent;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    members_.AddEntriesFrom(input, _repeated_members_codec);
                    break;
                  }
                  case 26: {
                    DescContent = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupInvideResponse : pb::IMessage<GroupInvideResponse> {
            private static readonly pb::MessageParser<GroupInvideResponse> _parser = new pb::MessageParser<GroupInvideResponse>(() => new GroupInvideResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupInvideResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[22]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupInvideResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupInvideResponse(GroupInvideResponse other) : this() {
              groupId_ = other.groupId_;
              inviteStatus_ = other.inviteStatus_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupInvideResponse Clone() {
              return new GroupInvideResponse(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "inviteStatus" field.</summary>
            public const int InviteStatusFieldNumber = 2;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse.Types.InviteStatus inviteStatus_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse.Types.InviteStatus.UnknownStatus;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse.Types.InviteStatus InviteStatus {
              get { return inviteStatus_; }
              set {
                inviteStatus_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupInvideResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupInvideResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if (InviteStatus != other.InviteStatus) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (InviteStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse.Types.InviteStatus.UnknownStatus) hash ^= InviteStatus.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (InviteStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse.Types.InviteStatus.UnknownStatus) {
                output.WriteRawTag(16);
                output.WriteEnum((int) InviteStatus);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (InviteStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse.Types.InviteStatus.UnknownStatus) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InviteStatus);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupInvideResponse other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.InviteStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse.Types.InviteStatus.UnknownStatus) {
                InviteStatus = other.InviteStatus;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 16: {
                    InviteStatus = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInvideResponse.Types.InviteStatus) input.ReadEnum();
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the GroupInvideResponse message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public enum InviteStatus {
                [pbr::OriginalName("UNKNOWN_STATUS")] UnknownStatus = 0,
                [pbr::OriginalName("SUCC")] Succ = 1,
                [pbr::OriginalName("PENDING")] Pending = 2,
              }

            }
            #endregion

          }

          public sealed partial class GroupJoinRequest : pb::IMessage<GroupJoinRequest> {
            private static readonly pb::MessageParser<GroupJoinRequest> _parser = new pb::MessageParser<GroupJoinRequest>(() => new GroupJoinRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupJoinRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[23]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequest(GroupJoinRequest other) : this() {
              groupId_ = other.groupId_;
              inviter_ = other.inviter_ != null ? other.inviter_.Clone() : null;
              descContent_ = other.descContent_;
              findType_ = other.findType_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequest Clone() {
              return new GroupJoinRequest(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "inviter" field.</summary>
            public const int InviterFieldNumber = 2;
            private global::AcFunDanmu.Im.Basic.Types.User inviter_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.User Inviter {
              get { return inviter_; }
              set {
                inviter_ = value;
              }
            }

            /// <summary>Field number for the "descContent" field.</summary>
            public const int DescContentFieldNumber = 3;
            private string descContent_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string DescContent {
              get { return descContent_; }
              set {
                descContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "findType" field.</summary>
            public const int FindTypeFieldNumber = 4;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType findType_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType FindType {
              get { return findType_; }
              set {
                findType_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupJoinRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupJoinRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if (!object.Equals(Inviter, other.Inviter)) return false;
              if (DescContent != other.DescContent) return false;
              if (FindType != other.FindType) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (inviter_ != null) hash ^= Inviter.GetHashCode();
              if (DescContent.Length != 0) hash ^= DescContent.GetHashCode();
              if (FindType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) hash ^= FindType.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (inviter_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Inviter);
              }
              if (DescContent.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(DescContent);
              }
              if (FindType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                output.WriteRawTag(32);
                output.WriteEnum((int) FindType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (inviter_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Inviter);
              }
              if (DescContent.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(DescContent);
              }
              if (FindType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FindType);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupJoinRequest other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.inviter_ != null) {
                if (inviter_ == null) {
                  Inviter = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                Inviter.MergeFrom(other.Inviter);
              }
              if (other.DescContent.Length != 0) {
                DescContent = other.DescContent;
              }
              if (other.FindType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                FindType = other.FindType;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (inviter_ == null) {
                      Inviter = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(Inviter);
                    break;
                  }
                  case 26: {
                    DescContent = input.ReadString();
                    break;
                  }
                  case 32: {
                    FindType = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType) input.ReadEnum();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupJoinResponse : pb::IMessage<GroupJoinResponse> {
            private static readonly pb::MessageParser<GroupJoinResponse> _parser = new pb::MessageParser<GroupJoinResponse>(() => new GroupJoinResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupJoinResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[24]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinResponse(GroupJoinResponse other) : this() {
              joinStatus_ = other.joinStatus_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinResponse Clone() {
              return new GroupJoinResponse(this);
            }

            /// <summary>Field number for the "joinStatus" field.</summary>
            public const int JoinStatusFieldNumber = 1;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse.Types.JoinStatus joinStatus_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse.Types.JoinStatus.UnknownStatus;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse.Types.JoinStatus JoinStatus {
              get { return joinStatus_; }
              set {
                joinStatus_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupJoinResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupJoinResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (JoinStatus != other.JoinStatus) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (JoinStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse.Types.JoinStatus.UnknownStatus) hash ^= JoinStatus.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (JoinStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse.Types.JoinStatus.UnknownStatus) {
                output.WriteRawTag(8);
                output.WriteEnum((int) JoinStatus);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (JoinStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse.Types.JoinStatus.UnknownStatus) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) JoinStatus);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupJoinResponse other) {
              if (other == null) {
                return;
              }
              if (other.JoinStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse.Types.JoinStatus.UnknownStatus) {
                JoinStatus = other.JoinStatus;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    JoinStatus = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinResponse.Types.JoinStatus) input.ReadEnum();
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the GroupJoinResponse message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public enum JoinStatus {
                [pbr::OriginalName("UNKNOWN_STATUS")] UnknownStatus = 0,
                [pbr::OriginalName("SUCC")] Succ = 1,
                [pbr::OriginalName("PENDING")] Pending = 2,
              }

            }
            #endregion

          }

          public sealed partial class GroupJoinRequestAckRequest : pb::IMessage<GroupJoinRequestAckRequest> {
            private static readonly pb::MessageParser<GroupJoinRequestAckRequest> _parser = new pb::MessageParser<GroupJoinRequestAckRequest>(() => new GroupJoinRequestAckRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupJoinRequestAckRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[25]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestAckRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestAckRequest(GroupJoinRequestAckRequest other) : this() {
              reqId_ = other.reqId_;
              groupId_ = other.groupId_;
              groupJoinAckType_ = other.groupJoinAckType_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestAckRequest Clone() {
              return new GroupJoinRequestAckRequest(this);
            }

            /// <summary>Field number for the "reqId" field.</summary>
            public const int ReqIdFieldNumber = 1;
            private long reqId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long ReqId {
              get { return reqId_; }
              set {
                reqId_ = value;
              }
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 2;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "groupJoinAckType" field.</summary>
            public const int GroupJoinAckTypeFieldNumber = 3;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest.Types.GroupJoinAckType groupJoinAckType_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest.Types.GroupJoinAckType.UnknownType;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest.Types.GroupJoinAckType GroupJoinAckType {
              get { return groupJoinAckType_; }
              set {
                groupJoinAckType_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupJoinRequestAckRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupJoinRequestAckRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ReqId != other.ReqId) return false;
              if (GroupId != other.GroupId) return false;
              if (GroupJoinAckType != other.GroupJoinAckType) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ReqId != 0L) hash ^= ReqId.GetHashCode();
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (GroupJoinAckType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest.Types.GroupJoinAckType.UnknownType) hash ^= GroupJoinAckType.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (ReqId != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(ReqId);
              }
              if (GroupId.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(GroupId);
              }
              if (GroupJoinAckType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest.Types.GroupJoinAckType.UnknownType) {
                output.WriteRawTag(24);
                output.WriteEnum((int) GroupJoinAckType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ReqId != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReqId);
              }
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (GroupJoinAckType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest.Types.GroupJoinAckType.UnknownType) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GroupJoinAckType);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupJoinRequestAckRequest other) {
              if (other == null) {
                return;
              }
              if (other.ReqId != 0L) {
                ReqId = other.ReqId;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.GroupJoinAckType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest.Types.GroupJoinAckType.UnknownType) {
                GroupJoinAckType = other.GroupJoinAckType;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    ReqId = input.ReadInt64();
                    break;
                  }
                  case 18: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 24: {
                    GroupJoinAckType = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupJoinRequestAckRequest.Types.GroupJoinAckType) input.ReadEnum();
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the GroupJoinRequestAckRequest message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public enum GroupJoinAckType {
                [pbr::OriginalName("UNKNOWN_TYPE")] UnknownType = 0,
                [pbr::OriginalName("AGREE")] Agree = 1,
                [pbr::OriginalName("REFUSE")] Refuse = 2,
                [pbr::OriginalName("IGNORE")] Ignore = 3,
              }

            }
            #endregion

          }

          public sealed partial class GroupJoinRequestAckResponse : pb::IMessage<GroupJoinRequestAckResponse> {
            private static readonly pb::MessageParser<GroupJoinRequestAckResponse> _parser = new pb::MessageParser<GroupJoinRequestAckResponse>(() => new GroupJoinRequestAckResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupJoinRequestAckResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[26]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestAckResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestAckResponse(GroupJoinRequestAckResponse other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestAckResponse Clone() {
              return new GroupJoinRequestAckResponse(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupJoinRequestAckResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupJoinRequestAckResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupJoinRequestAckResponse other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            }

          }

          public sealed partial class GroupJoinRequestGetRequest : pb::IMessage<GroupJoinRequestGetRequest> {
            private static readonly pb::MessageParser<GroupJoinRequestGetRequest> _parser = new pb::MessageParser<GroupJoinRequestGetRequest>(() => new GroupJoinRequestGetRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupJoinRequestGetRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[27]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestGetRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestGetRequest(GroupJoinRequestGetRequest other) : this() {
              reqSeq_ = other.reqSeq_;
              groupId_ = other.groupId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestGetRequest Clone() {
              return new GroupJoinRequestGetRequest(this);
            }

            /// <summary>Field number for the "reqSeq" field.</summary>
            public const int ReqSeqFieldNumber = 1;
            private long reqSeq_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long ReqSeq {
              get { return reqSeq_; }
              set {
                reqSeq_ = value;
              }
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 2;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupJoinRequestGetRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupJoinRequestGetRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ReqSeq != other.ReqSeq) return false;
              if (GroupId != other.GroupId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ReqSeq != 0L) hash ^= ReqSeq.GetHashCode();
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (ReqSeq != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(ReqSeq);
              }
              if (GroupId.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(GroupId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ReqSeq != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReqSeq);
              }
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupJoinRequestGetRequest other) {
              if (other == null) {
                return;
              }
              if (other.ReqSeq != 0L) {
                ReqSeq = other.ReqSeq;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    ReqSeq = input.ReadInt64();
                    break;
                  }
                  case 18: {
                    GroupId = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupJoinRequestGetResponse : pb::IMessage<GroupJoinRequestGetResponse> {
            private static readonly pb::MessageParser<GroupJoinRequestGetResponse> _parser = new pb::MessageParser<GroupJoinRequestGetResponse>(() => new GroupJoinRequestGetResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupJoinRequestGetResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[28]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestGetResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestGetResponse(GroupJoinRequestGetResponse other) : this() {
              groupId_ = other.groupId_;
              inviter_ = other.inviter_ != null ? other.inviter_.Clone() : null;
              invitees_ = other.invitees_.Clone();
              findWay_ = other.findWay_;
              descContent_ = other.descContent_;
              status_ = other.status_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestGetResponse Clone() {
              return new GroupJoinRequestGetResponse(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "inviter" field.</summary>
            public const int InviterFieldNumber = 2;
            private global::AcFunDanmu.Im.Basic.Types.User inviter_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.User Inviter {
              get { return inviter_; }
              set {
                inviter_ = value;
              }
            }

            /// <summary>Field number for the "invitees" field.</summary>
            public const int InviteesFieldNumber = 3;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_invitees_codec
                = pb::FieldCodec.ForMessage(26, global::AcFunDanmu.Im.Basic.Types.User.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> invitees_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> Invitees {
              get { return invitees_; }
            }

            /// <summary>Field number for the "findWay" field.</summary>
            public const int FindWayFieldNumber = 4;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType findWay_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType FindWay {
              get { return findWay_; }
              set {
                findWay_ = value;
              }
            }

            /// <summary>Field number for the "descContent" field.</summary>
            public const int DescContentFieldNumber = 5;
            private string descContent_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string DescContent {
              get { return descContent_; }
              set {
                descContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "status" field.</summary>
            public const int StatusFieldNumber = 6;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus status_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus Status {
              get { return status_; }
              set {
                status_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupJoinRequestGetResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupJoinRequestGetResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if (!object.Equals(Inviter, other.Inviter)) return false;
              if(!invitees_.Equals(other.invitees_)) return false;
              if (FindWay != other.FindWay) return false;
              if (DescContent != other.DescContent) return false;
              if (Status != other.Status) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (inviter_ != null) hash ^= Inviter.GetHashCode();
              hash ^= invitees_.GetHashCode();
              if (FindWay != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) hash ^= FindWay.GetHashCode();
              if (DescContent.Length != 0) hash ^= DescContent.GetHashCode();
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) hash ^= Status.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (inviter_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Inviter);
              }
              invitees_.WriteTo(output, _repeated_invitees_codec);
              if (FindWay != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                output.WriteRawTag(32);
                output.WriteEnum((int) FindWay);
              }
              if (DescContent.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(DescContent);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                output.WriteRawTag(48);
                output.WriteEnum((int) Status);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (inviter_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Inviter);
              }
              size += invitees_.CalculateSize(_repeated_invitees_codec);
              if (FindWay != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FindWay);
              }
              if (DescContent.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(DescContent);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupJoinRequestGetResponse other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.inviter_ != null) {
                if (inviter_ == null) {
                  Inviter = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                Inviter.MergeFrom(other.Inviter);
              }
              invitees_.Add(other.invitees_);
              if (other.FindWay != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                FindWay = other.FindWay;
              }
              if (other.DescContent.Length != 0) {
                DescContent = other.DescContent;
              }
              if (other.Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                Status = other.Status;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (inviter_ == null) {
                      Inviter = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(Inviter);
                    break;
                  }
                  case 26: {
                    invitees_.AddEntriesFrom(input, _repeated_invitees_codec);
                    break;
                  }
                  case 32: {
                    FindWay = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType) input.ReadEnum();
                    break;
                  }
                  case 42: {
                    DescContent = input.ReadString();
                    break;
                  }
                  case 48: {
                    Status = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus) input.ReadEnum();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupJoinRequestCancelRequest : pb::IMessage<GroupJoinRequestCancelRequest> {
            private static readonly pb::MessageParser<GroupJoinRequestCancelRequest> _parser = new pb::MessageParser<GroupJoinRequestCancelRequest>(() => new GroupJoinRequestCancelRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupJoinRequestCancelRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[29]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestCancelRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestCancelRequest(GroupJoinRequestCancelRequest other) : this() {
              reqSeq_ = other.reqSeq_;
              groupId_ = other.groupId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestCancelRequest Clone() {
              return new GroupJoinRequestCancelRequest(this);
            }

            /// <summary>Field number for the "reqSeq" field.</summary>
            public const int ReqSeqFieldNumber = 1;
            private long reqSeq_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long ReqSeq {
              get { return reqSeq_; }
              set {
                reqSeq_ = value;
              }
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 2;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupJoinRequestCancelRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupJoinRequestCancelRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ReqSeq != other.ReqSeq) return false;
              if (GroupId != other.GroupId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ReqSeq != 0L) hash ^= ReqSeq.GetHashCode();
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (ReqSeq != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(ReqSeq);
              }
              if (GroupId.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(GroupId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ReqSeq != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReqSeq);
              }
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupJoinRequestCancelRequest other) {
              if (other == null) {
                return;
              }
              if (other.ReqSeq != 0L) {
                ReqSeq = other.ReqSeq;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    ReqSeq = input.ReadInt64();
                    break;
                  }
                  case 18: {
                    GroupId = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupJoinRequestCancelResposne : pb::IMessage<GroupJoinRequestCancelResposne> {
            private static readonly pb::MessageParser<GroupJoinRequestCancelResposne> _parser = new pb::MessageParser<GroupJoinRequestCancelResposne>(() => new GroupJoinRequestCancelResposne());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupJoinRequestCancelResposne> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[30]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestCancelResposne() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestCancelResposne(GroupJoinRequestCancelResposne other) : this() {
              groupId_ = other.groupId_;
              inviter_ = other.inviter_ != null ? other.inviter_.Clone() : null;
              invitees_ = other.invitees_.Clone();
              findWay_ = other.findWay_;
              descContent_ = other.descContent_;
              status_ = other.status_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupJoinRequestCancelResposne Clone() {
              return new GroupJoinRequestCancelResposne(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "inviter" field.</summary>
            public const int InviterFieldNumber = 2;
            private global::AcFunDanmu.Im.Basic.Types.User inviter_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.User Inviter {
              get { return inviter_; }
              set {
                inviter_ = value;
              }
            }

            /// <summary>Field number for the "invitees" field.</summary>
            public const int InviteesFieldNumber = 3;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_invitees_codec
                = pb::FieldCodec.ForMessage(26, global::AcFunDanmu.Im.Basic.Types.User.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> invitees_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> Invitees {
              get { return invitees_; }
            }

            /// <summary>Field number for the "findWay" field.</summary>
            public const int FindWayFieldNumber = 4;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType findWay_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType FindWay {
              get { return findWay_; }
              set {
                findWay_ = value;
              }
            }

            /// <summary>Field number for the "descContent" field.</summary>
            public const int DescContentFieldNumber = 5;
            private string descContent_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string DescContent {
              get { return descContent_; }
              set {
                descContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "status" field.</summary>
            public const int StatusFieldNumber = 6;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus status_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus Status {
              get { return status_; }
              set {
                status_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupJoinRequestCancelResposne);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupJoinRequestCancelResposne other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if (!object.Equals(Inviter, other.Inviter)) return false;
              if(!invitees_.Equals(other.invitees_)) return false;
              if (FindWay != other.FindWay) return false;
              if (DescContent != other.DescContent) return false;
              if (Status != other.Status) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (inviter_ != null) hash ^= Inviter.GetHashCode();
              hash ^= invitees_.GetHashCode();
              if (FindWay != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) hash ^= FindWay.GetHashCode();
              if (DescContent.Length != 0) hash ^= DescContent.GetHashCode();
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) hash ^= Status.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (inviter_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Inviter);
              }
              invitees_.WriteTo(output, _repeated_invitees_codec);
              if (FindWay != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                output.WriteRawTag(32);
                output.WriteEnum((int) FindWay);
              }
              if (DescContent.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(DescContent);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                output.WriteRawTag(48);
                output.WriteEnum((int) Status);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (inviter_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Inviter);
              }
              size += invitees_.CalculateSize(_repeated_invitees_codec);
              if (FindWay != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FindWay);
              }
              if (DescContent.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(DescContent);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupJoinRequestCancelResposne other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.inviter_ != null) {
                if (inviter_ == null) {
                  Inviter = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                Inviter.MergeFrom(other.Inviter);
              }
              invitees_.Add(other.invitees_);
              if (other.FindWay != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                FindWay = other.FindWay;
              }
              if (other.DescContent.Length != 0) {
                DescContent = other.DescContent;
              }
              if (other.Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus.UnknownStatus) {
                Status = other.Status;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (inviter_ == null) {
                      Inviter = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(Inviter);
                    break;
                  }
                  case 26: {
                    invitees_.AddEntriesFrom(input, _repeated_invitees_codec);
                    break;
                  }
                  case 32: {
                    FindWay = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType) input.ReadEnum();
                    break;
                  }
                  case 42: {
                    DescContent = input.ReadString();
                    break;
                  }
                  case 48: {
                    Status = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinRequestStatus) input.ReadEnum();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupQuitRequest : pb::IMessage<GroupQuitRequest> {
            private static readonly pb::MessageParser<GroupQuitRequest> _parser = new pb::MessageParser<GroupQuitRequest>(() => new GroupQuitRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupQuitRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[31]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupQuitRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupQuitRequest(GroupQuitRequest other) : this() {
              groupId_ = other.groupId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupQuitRequest Clone() {
              return new GroupQuitRequest(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupQuitRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupQuitRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupQuitRequest other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupQuitResponse : pb::IMessage<GroupQuitResponse> {
            private static readonly pb::MessageParser<GroupQuitResponse> _parser = new pb::MessageParser<GroupQuitResponse>(() => new GroupQuitResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupQuitResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[32]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupQuitResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupQuitResponse(GroupQuitResponse other) : this() {
              groupId_ = other.groupId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupQuitResponse Clone() {
              return new GroupQuitResponse(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupQuitResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupQuitResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupQuitResponse other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupKickRequest : pb::IMessage<GroupKickRequest> {
            private static readonly pb::MessageParser<GroupKickRequest> _parser = new pb::MessageParser<GroupKickRequest>(() => new GroupKickRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupKickRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[33]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupKickRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupKickRequest(GroupKickRequest other) : this() {
              groupId_ = other.groupId_;
              target_ = other.target_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupKickRequest Clone() {
              return new GroupKickRequest(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "target" field.</summary>
            public const int TargetFieldNumber = 2;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_target_codec
                = pb::FieldCodec.ForMessage(18, global::AcFunDanmu.Im.Basic.Types.User.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> target_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> Target {
              get { return target_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupKickRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupKickRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if(!target_.Equals(other.target_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              hash ^= target_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              target_.WriteTo(output, _repeated_target_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              size += target_.CalculateSize(_repeated_target_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupKickRequest other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              target_.Add(other.target_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    target_.AddEntriesFrom(input, _repeated_target_codec);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupKickResponse : pb::IMessage<GroupKickResponse> {
            private static readonly pb::MessageParser<GroupKickResponse> _parser = new pb::MessageParser<GroupKickResponse>(() => new GroupKickResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupKickResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[34]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupKickResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupKickResponse(GroupKickResponse other) : this() {
              groupId_ = other.groupId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupKickResponse Clone() {
              return new GroupKickResponse(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupKickResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupKickResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupKickResponse other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupSettingRequest : pb::IMessage<GroupSettingRequest> {
            private static readonly pb::MessageParser<GroupSettingRequest> _parser = new pb::MessageParser<GroupSettingRequest>(() => new GroupSettingRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupSettingRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[35]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingRequest(GroupSettingRequest other) : this() {
              groupId_ = other.groupId_;
              switch (other.GroupSettingCase) {
                case GroupSettingOneofCase.Rename:
                  Rename = other.Rename.Clone();
                  break;
                case GroupSettingOneofCase.Desc:
                  Desc = other.Desc.Clone();
                  break;
                case GroupSettingOneofCase.JoinNeedPermission:
                  JoinNeedPermission = other.JoinNeedPermission.Clone();
                  break;
                case GroupSettingOneofCase.InvitePermission:
                  InvitePermission = other.InvitePermission.Clone();
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingRequest Clone() {
              return new GroupSettingRequest(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "rename" field.</summary>
            public const int RenameFieldNumber = 2;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingRename Rename {
              get { return groupSettingCase_ == GroupSettingOneofCase.Rename ? (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingRename) groupSetting_ : null; }
              set {
                groupSetting_ = value;
                groupSettingCase_ = value == null ? GroupSettingOneofCase.None : GroupSettingOneofCase.Rename;
              }
            }

            /// <summary>Field number for the "desc" field.</summary>
            public const int DescFieldNumber = 3;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingDesc Desc {
              get { return groupSettingCase_ == GroupSettingOneofCase.Desc ? (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingDesc) groupSetting_ : null; }
              set {
                groupSetting_ = value;
                groupSettingCase_ = value == null ? GroupSettingOneofCase.None : GroupSettingOneofCase.Desc;
              }
            }

            /// <summary>Field number for the "joinNeedPermission" field.</summary>
            public const int JoinNeedPermissionFieldNumber = 4;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingJoinNeedPermission JoinNeedPermission {
              get { return groupSettingCase_ == GroupSettingOneofCase.JoinNeedPermission ? (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingJoinNeedPermission) groupSetting_ : null; }
              set {
                groupSetting_ = value;
                groupSettingCase_ = value == null ? GroupSettingOneofCase.None : GroupSettingOneofCase.JoinNeedPermission;
              }
            }

            /// <summary>Field number for the "invitePermission" field.</summary>
            public const int InvitePermissionFieldNumber = 5;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingInvitePermission InvitePermission {
              get { return groupSettingCase_ == GroupSettingOneofCase.InvitePermission ? (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingInvitePermission) groupSetting_ : null; }
              set {
                groupSetting_ = value;
                groupSettingCase_ = value == null ? GroupSettingOneofCase.None : GroupSettingOneofCase.InvitePermission;
              }
            }

            private object groupSetting_;
            /// <summary>Enum of possible cases for the "GroupSetting" oneof.</summary>
            public enum GroupSettingOneofCase {
              None = 0,
              Rename = 2,
              Desc = 3,
              JoinNeedPermission = 4,
              InvitePermission = 5,
            }
            private GroupSettingOneofCase groupSettingCase_ = GroupSettingOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingOneofCase GroupSettingCase {
              get { return groupSettingCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearGroupSetting() {
              groupSettingCase_ = GroupSettingOneofCase.None;
              groupSetting_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupSettingRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupSettingRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if (!object.Equals(Rename, other.Rename)) return false;
              if (!object.Equals(Desc, other.Desc)) return false;
              if (!object.Equals(JoinNeedPermission, other.JoinNeedPermission)) return false;
              if (!object.Equals(InvitePermission, other.InvitePermission)) return false;
              if (GroupSettingCase != other.GroupSettingCase) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (groupSettingCase_ == GroupSettingOneofCase.Rename) hash ^= Rename.GetHashCode();
              if (groupSettingCase_ == GroupSettingOneofCase.Desc) hash ^= Desc.GetHashCode();
              if (groupSettingCase_ == GroupSettingOneofCase.JoinNeedPermission) hash ^= JoinNeedPermission.GetHashCode();
              if (groupSettingCase_ == GroupSettingOneofCase.InvitePermission) hash ^= InvitePermission.GetHashCode();
              hash ^= (int) groupSettingCase_;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (groupSettingCase_ == GroupSettingOneofCase.Rename) {
                output.WriteRawTag(18);
                output.WriteMessage(Rename);
              }
              if (groupSettingCase_ == GroupSettingOneofCase.Desc) {
                output.WriteRawTag(26);
                output.WriteMessage(Desc);
              }
              if (groupSettingCase_ == GroupSettingOneofCase.JoinNeedPermission) {
                output.WriteRawTag(34);
                output.WriteMessage(JoinNeedPermission);
              }
              if (groupSettingCase_ == GroupSettingOneofCase.InvitePermission) {
                output.WriteRawTag(42);
                output.WriteMessage(InvitePermission);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (groupSettingCase_ == GroupSettingOneofCase.Rename) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rename);
              }
              if (groupSettingCase_ == GroupSettingOneofCase.Desc) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Desc);
              }
              if (groupSettingCase_ == GroupSettingOneofCase.JoinNeedPermission) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(JoinNeedPermission);
              }
              if (groupSettingCase_ == GroupSettingOneofCase.InvitePermission) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(InvitePermission);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupSettingRequest other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              switch (other.GroupSettingCase) {
                case GroupSettingOneofCase.Rename:
                  if (Rename == null) {
                    Rename = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingRename();
                  }
                  Rename.MergeFrom(other.Rename);
                  break;
                case GroupSettingOneofCase.Desc:
                  if (Desc == null) {
                    Desc = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingDesc();
                  }
                  Desc.MergeFrom(other.Desc);
                  break;
                case GroupSettingOneofCase.JoinNeedPermission:
                  if (JoinNeedPermission == null) {
                    JoinNeedPermission = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingJoinNeedPermission();
                  }
                  JoinNeedPermission.MergeFrom(other.JoinNeedPermission);
                  break;
                case GroupSettingOneofCase.InvitePermission:
                  if (InvitePermission == null) {
                    InvitePermission = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingInvitePermission();
                  }
                  InvitePermission.MergeFrom(other.InvitePermission);
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingRename subBuilder = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingRename();
                    if (groupSettingCase_ == GroupSettingOneofCase.Rename) {
                      subBuilder.MergeFrom(Rename);
                    }
                    input.ReadMessage(subBuilder);
                    Rename = subBuilder;
                    break;
                  }
                  case 26: {
                    global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingDesc subBuilder = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingDesc();
                    if (groupSettingCase_ == GroupSettingOneofCase.Desc) {
                      subBuilder.MergeFrom(Desc);
                    }
                    input.ReadMessage(subBuilder);
                    Desc = subBuilder;
                    break;
                  }
                  case 34: {
                    global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingJoinNeedPermission subBuilder = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingJoinNeedPermission();
                    if (groupSettingCase_ == GroupSettingOneofCase.JoinNeedPermission) {
                      subBuilder.MergeFrom(JoinNeedPermission);
                    }
                    input.ReadMessage(subBuilder);
                    JoinNeedPermission = subBuilder;
                    break;
                  }
                  case 42: {
                    global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingInvitePermission subBuilder = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupSettingInvitePermission();
                    if (groupSettingCase_ == GroupSettingOneofCase.InvitePermission) {
                      subBuilder.MergeFrom(InvitePermission);
                    }
                    input.ReadMessage(subBuilder);
                    InvitePermission = subBuilder;
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupSettingRename : pb::IMessage<GroupSettingRename> {
            private static readonly pb::MessageParser<GroupSettingRename> _parser = new pb::MessageParser<GroupSettingRename>(() => new GroupSettingRename());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupSettingRename> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[36]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingRename() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingRename(GroupSettingRename other) : this() {
              groupName_ = other.groupName_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingRename Clone() {
              return new GroupSettingRename(this);
            }

            /// <summary>Field number for the "groupName" field.</summary>
            public const int GroupNameFieldNumber = 1;
            private string groupName_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupName {
              get { return groupName_; }
              set {
                groupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupSettingRename);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupSettingRename other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupName != other.GroupName) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupName.Length != 0) hash ^= GroupName.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (GroupName.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupName);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupName.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupName);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupSettingRename other) {
              if (other == null) {
                return;
              }
              if (other.GroupName.Length != 0) {
                GroupName = other.GroupName;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupName = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupSettingDesc : pb::IMessage<GroupSettingDesc> {
            private static readonly pb::MessageParser<GroupSettingDesc> _parser = new pb::MessageParser<GroupSettingDesc>(() => new GroupSettingDesc());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupSettingDesc> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[37]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingDesc() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingDesc(GroupSettingDesc other) : this() {
              desc_ = other.desc_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingDesc Clone() {
              return new GroupSettingDesc(this);
            }

            /// <summary>Field number for the "desc" field.</summary>
            public const int DescFieldNumber = 1;
            private string desc_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Desc {
              get { return desc_; }
              set {
                desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupSettingDesc);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupSettingDesc other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Desc != other.Desc) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Desc.Length != 0) hash ^= Desc.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Desc.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Desc);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Desc.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupSettingDesc other) {
              if (other == null) {
                return;
              }
              if (other.Desc.Length != 0) {
                Desc = other.Desc;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Desc = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupSettingJoinNeedPermission : pb::IMessage<GroupSettingJoinNeedPermission> {
            private static readonly pb::MessageParser<GroupSettingJoinNeedPermission> _parser = new pb::MessageParser<GroupSettingJoinNeedPermission>(() => new GroupSettingJoinNeedPermission());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupSettingJoinNeedPermission> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[38]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingJoinNeedPermission() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingJoinNeedPermission(GroupSettingJoinNeedPermission other) : this() {
              joinNeedPermission_ = other.joinNeedPermission_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingJoinNeedPermission Clone() {
              return new GroupSettingJoinNeedPermission(this);
            }

            /// <summary>Field number for the "joinNeedPermission" field.</summary>
            public const int JoinNeedPermissionFieldNumber = 1;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType joinNeedPermission_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType.UnknownJoinNeedPermissionType;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType JoinNeedPermission {
              get { return joinNeedPermission_; }
              set {
                joinNeedPermission_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupSettingJoinNeedPermission);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupSettingJoinNeedPermission other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (JoinNeedPermission != other.JoinNeedPermission) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (JoinNeedPermission != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType.UnknownJoinNeedPermissionType) hash ^= JoinNeedPermission.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (JoinNeedPermission != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType.UnknownJoinNeedPermissionType) {
                output.WriteRawTag(8);
                output.WriteEnum((int) JoinNeedPermission);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (JoinNeedPermission != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType.UnknownJoinNeedPermissionType) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) JoinNeedPermission);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupSettingJoinNeedPermission other) {
              if (other == null) {
                return;
              }
              if (other.JoinNeedPermission != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType.UnknownJoinNeedPermissionType) {
                JoinNeedPermission = other.JoinNeedPermission;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    JoinNeedPermission = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType) input.ReadEnum();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupSettingInvitePermission : pb::IMessage<GroupSettingInvitePermission> {
            private static readonly pb::MessageParser<GroupSettingInvitePermission> _parser = new pb::MessageParser<GroupSettingInvitePermission>(() => new GroupSettingInvitePermission());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupSettingInvitePermission> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[39]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingInvitePermission() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingInvitePermission(GroupSettingInvitePermission other) : this() {
              invitePermissionType_ = other.invitePermissionType_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingInvitePermission Clone() {
              return new GroupSettingInvitePermission(this);
            }

            /// <summary>Field number for the "invitePermissionType" field.</summary>
            public const int InvitePermissionTypeFieldNumber = 1;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.InvitePermissionType invitePermissionType_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.InvitePermissionType.UnknownInvitePermissionType;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.InvitePermissionType InvitePermissionType {
              get { return invitePermissionType_; }
              set {
                invitePermissionType_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupSettingInvitePermission);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupSettingInvitePermission other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (InvitePermissionType != other.InvitePermissionType) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (InvitePermissionType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.InvitePermissionType.UnknownInvitePermissionType) hash ^= InvitePermissionType.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (InvitePermissionType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.InvitePermissionType.UnknownInvitePermissionType) {
                output.WriteRawTag(8);
                output.WriteEnum((int) InvitePermissionType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (InvitePermissionType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.InvitePermissionType.UnknownInvitePermissionType) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InvitePermissionType);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupSettingInvitePermission other) {
              if (other == null) {
                return;
              }
              if (other.InvitePermissionType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.InvitePermissionType.UnknownInvitePermissionType) {
                InvitePermissionType = other.InvitePermissionType;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    InvitePermissionType = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.InvitePermissionType) input.ReadEnum();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupSettingResponse : pb::IMessage<GroupSettingResponse> {
            private static readonly pb::MessageParser<GroupSettingResponse> _parser = new pb::MessageParser<GroupSettingResponse>(() => new GroupSettingResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupSettingResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[40]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingResponse(GroupSettingResponse other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupSettingResponse Clone() {
              return new GroupSettingResponse(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupSettingResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupSettingResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupSettingResponse other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            }

          }

          public sealed partial class GroupMemberSettingRequest : pb::IMessage<GroupMemberSettingRequest> {
            private static readonly pb::MessageParser<GroupMemberSettingRequest> _parser = new pb::MessageParser<GroupMemberSettingRequest>(() => new GroupMemberSettingRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupMemberSettingRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[41]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberSettingRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberSettingRequest(GroupMemberSettingRequest other) : this() {
              groupId_ = other.groupId_;
              switch (other.UserSettingCase) {
                case UserSettingOneofCase.SetNickname:
                  SetNickname = other.SetNickname.Clone();
                  break;
                case UserSettingOneofCase.SetAntiDisturbing:
                  SetAntiDisturbing = other.SetAntiDisturbing.Clone();
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberSettingRequest Clone() {
              return new GroupMemberSettingRequest(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "setNickname" field.</summary>
            public const int SetNicknameFieldNumber = 2;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserNickname SetNickname {
              get { return userSettingCase_ == UserSettingOneofCase.SetNickname ? (global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserNickname) userSetting_ : null; }
              set {
                userSetting_ = value;
                userSettingCase_ = value == null ? UserSettingOneofCase.None : UserSettingOneofCase.SetNickname;
              }
            }

            /// <summary>Field number for the "setAntiDisturbing" field.</summary>
            public const int SetAntiDisturbingFieldNumber = 3;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserAntiDisturbing SetAntiDisturbing {
              get { return userSettingCase_ == UserSettingOneofCase.SetAntiDisturbing ? (global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserAntiDisturbing) userSetting_ : null; }
              set {
                userSetting_ = value;
                userSettingCase_ = value == null ? UserSettingOneofCase.None : UserSettingOneofCase.SetAntiDisturbing;
              }
            }

            private object userSetting_;
            /// <summary>Enum of possible cases for the "UserSetting" oneof.</summary>
            public enum UserSettingOneofCase {
              None = 0,
              SetNickname = 2,
              SetAntiDisturbing = 3,
            }
            private UserSettingOneofCase userSettingCase_ = UserSettingOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserSettingOneofCase UserSettingCase {
              get { return userSettingCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearUserSetting() {
              userSettingCase_ = UserSettingOneofCase.None;
              userSetting_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupMemberSettingRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupMemberSettingRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if (!object.Equals(SetNickname, other.SetNickname)) return false;
              if (!object.Equals(SetAntiDisturbing, other.SetAntiDisturbing)) return false;
              if (UserSettingCase != other.UserSettingCase) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (userSettingCase_ == UserSettingOneofCase.SetNickname) hash ^= SetNickname.GetHashCode();
              if (userSettingCase_ == UserSettingOneofCase.SetAntiDisturbing) hash ^= SetAntiDisturbing.GetHashCode();
              hash ^= (int) userSettingCase_;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (userSettingCase_ == UserSettingOneofCase.SetNickname) {
                output.WriteRawTag(18);
                output.WriteMessage(SetNickname);
              }
              if (userSettingCase_ == UserSettingOneofCase.SetAntiDisturbing) {
                output.WriteRawTag(26);
                output.WriteMessage(SetAntiDisturbing);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (userSettingCase_ == UserSettingOneofCase.SetNickname) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetNickname);
              }
              if (userSettingCase_ == UserSettingOneofCase.SetAntiDisturbing) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetAntiDisturbing);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupMemberSettingRequest other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              switch (other.UserSettingCase) {
                case UserSettingOneofCase.SetNickname:
                  if (SetNickname == null) {
                    SetNickname = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserNickname();
                  }
                  SetNickname.MergeFrom(other.SetNickname);
                  break;
                case UserSettingOneofCase.SetAntiDisturbing:
                  if (SetAntiDisturbing == null) {
                    SetAntiDisturbing = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserAntiDisturbing();
                  }
                  SetAntiDisturbing.MergeFrom(other.SetAntiDisturbing);
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserNickname subBuilder = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserNickname();
                    if (userSettingCase_ == UserSettingOneofCase.SetNickname) {
                      subBuilder.MergeFrom(SetNickname);
                    }
                    input.ReadMessage(subBuilder);
                    SetNickname = subBuilder;
                    break;
                  }
                  case 26: {
                    global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserAntiDisturbing subBuilder = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.SetUserAntiDisturbing();
                    if (userSettingCase_ == UserSettingOneofCase.SetAntiDisturbing) {
                      subBuilder.MergeFrom(SetAntiDisturbing);
                    }
                    input.ReadMessage(subBuilder);
                    SetAntiDisturbing = subBuilder;
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class SetUserNickname : pb::IMessage<SetUserNickname> {
            private static readonly pb::MessageParser<SetUserNickname> _parser = new pb::MessageParser<SetUserNickname>(() => new SetUserNickname());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<SetUserNickname> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[42]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SetUserNickname() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SetUserNickname(SetUserNickname other) : this() {
              nickname_ = other.nickname_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SetUserNickname Clone() {
              return new SetUserNickname(this);
            }

            /// <summary>Field number for the "nickname" field.</summary>
            public const int NicknameFieldNumber = 1;
            private string nickname_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Nickname {
              get { return nickname_; }
              set {
                nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as SetUserNickname);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(SetUserNickname other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Nickname != other.Nickname) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Nickname.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Nickname);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Nickname.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(SetUserNickname other) {
              if (other == null) {
                return;
              }
              if (other.Nickname.Length != 0) {
                Nickname = other.Nickname;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Nickname = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class SetUserAntiDisturbing : pb::IMessage<SetUserAntiDisturbing> {
            private static readonly pb::MessageParser<SetUserAntiDisturbing> _parser = new pb::MessageParser<SetUserAntiDisturbing>(() => new SetUserAntiDisturbing());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<SetUserAntiDisturbing> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[43]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SetUserAntiDisturbing() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SetUserAntiDisturbing(SetUserAntiDisturbing other) : this() {
              antiDisturbing_ = other.antiDisturbing_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SetUserAntiDisturbing Clone() {
              return new SetUserAntiDisturbing(this);
            }

            /// <summary>Field number for the "antiDisturbing" field.</summary>
            public const int AntiDisturbingFieldNumber = 1;
            private bool antiDisturbing_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool AntiDisturbing {
              get { return antiDisturbing_; }
              set {
                antiDisturbing_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as SetUserAntiDisturbing);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(SetUserAntiDisturbing other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (AntiDisturbing != other.AntiDisturbing) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (AntiDisturbing != false) hash ^= AntiDisturbing.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (AntiDisturbing != false) {
                output.WriteRawTag(8);
                output.WriteBool(AntiDisturbing);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (AntiDisturbing != false) {
                size += 1 + 1;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(SetUserAntiDisturbing other) {
              if (other == null) {
                return;
              }
              if (other.AntiDisturbing != false) {
                AntiDisturbing = other.AntiDisturbing;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    AntiDisturbing = input.ReadBool();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupMemberSettingResponse : pb::IMessage<GroupMemberSettingResponse> {
            private static readonly pb::MessageParser<GroupMemberSettingResponse> _parser = new pb::MessageParser<GroupMemberSettingResponse>(() => new GroupMemberSettingResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupMemberSettingResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[44]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberSettingResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberSettingResponse(GroupMemberSettingResponse other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberSettingResponse Clone() {
              return new GroupMemberSettingResponse(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupMemberSettingResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupMemberSettingResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupMemberSettingResponse other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            }

          }

          public sealed partial class GroupMemberListGetRequest : pb::IMessage<GroupMemberListGetRequest> {
            private static readonly pb::MessageParser<GroupMemberListGetRequest> _parser = new pb::MessageParser<GroupMemberListGetRequest>(() => new GroupMemberListGetRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupMemberListGetRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[45]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberListGetRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberListGetRequest(GroupMemberListGetRequest other) : this() {
              groupId_ = other.groupId_;
              syncCookie_ = other.syncCookie_ != null ? other.syncCookie_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberListGetRequest Clone() {
              return new GroupMemberListGetRequest(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "syncCookie" field.</summary>
            public const int SyncCookieFieldNumber = 2;
            private global::AcFunDanmu.Im.Basic.Types.SyncCookie syncCookie_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.SyncCookie SyncCookie {
              get { return syncCookie_; }
              set {
                syncCookie_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupMemberListGetRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupMemberListGetRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if (!object.Equals(SyncCookie, other.SyncCookie)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (syncCookie_ != null) hash ^= SyncCookie.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (syncCookie_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(SyncCookie);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (syncCookie_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(SyncCookie);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupMemberListGetRequest other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.syncCookie_ != null) {
                if (syncCookie_ == null) {
                  SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                }
                SyncCookie.MergeFrom(other.SyncCookie);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (syncCookie_ == null) {
                      SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                    }
                    input.ReadMessage(SyncCookie);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupMemberListGetResponse : pb::IMessage<GroupMemberListGetResponse> {
            private static readonly pb::MessageParser<GroupMemberListGetResponse> _parser = new pb::MessageParser<GroupMemberListGetResponse>(() => new GroupMemberListGetResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupMemberListGetResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[46]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberListGetResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberListGetResponse(GroupMemberListGetResponse other) : this() {
              members_ = other.members_.Clone();
              syncCookie_ = other.syncCookie_ != null ? other.syncCookie_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberListGetResponse Clone() {
              return new GroupMemberListGetResponse(this);
            }

            /// <summary>Field number for the "members" field.</summary>
            public const int MembersFieldNumber = 1;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember> _repeated_members_codec
                = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember> members_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember> Members {
              get { return members_; }
            }

            /// <summary>Field number for the "syncCookie" field.</summary>
            public const int SyncCookieFieldNumber = 2;
            private global::AcFunDanmu.Im.Basic.Types.SyncCookie syncCookie_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.SyncCookie SyncCookie {
              get { return syncCookie_; }
              set {
                syncCookie_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupMemberListGetResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupMemberListGetResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!members_.Equals(other.members_)) return false;
              if (!object.Equals(SyncCookie, other.SyncCookie)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= members_.GetHashCode();
              if (syncCookie_ != null) hash ^= SyncCookie.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              members_.WriteTo(output, _repeated_members_codec);
              if (syncCookie_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(SyncCookie);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += members_.CalculateSize(_repeated_members_codec);
              if (syncCookie_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(SyncCookie);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupMemberListGetResponse other) {
              if (other == null) {
                return;
              }
              members_.Add(other.members_);
              if (other.syncCookie_ != null) {
                if (syncCookie_ == null) {
                  SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                }
                SyncCookie.MergeFrom(other.SyncCookie);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    members_.AddEntriesFrom(input, _repeated_members_codec);
                    break;
                  }
                  case 18: {
                    if (syncCookie_ == null) {
                      SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                    }
                    input.ReadMessage(SyncCookie);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupMemberGetRequest : pb::IMessage<GroupMemberGetRequest> {
            private static readonly pb::MessageParser<GroupMemberGetRequest> _parser = new pb::MessageParser<GroupMemberGetRequest>(() => new GroupMemberGetRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupMemberGetRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[47]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberGetRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberGetRequest(GroupMemberGetRequest other) : this() {
              groupId_ = other.groupId_;
              user_ = other.user_ != null ? other.user_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberGetRequest Clone() {
              return new GroupMemberGetRequest(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "user" field.</summary>
            public const int UserFieldNumber = 2;
            private global::AcFunDanmu.Im.Basic.Types.User user_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.User User {
              get { return user_; }
              set {
                user_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupMemberGetRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupMemberGetRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if (!object.Equals(User, other.User)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (user_ != null) hash ^= User.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (user_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(User);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (user_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupMemberGetRequest other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.user_ != null) {
                if (user_ == null) {
                  User = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                User.MergeFrom(other.User);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (user_ == null) {
                      User = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(User);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupMemberGetResponse : pb::IMessage<GroupMemberGetResponse> {
            private static readonly pb::MessageParser<GroupMemberGetResponse> _parser = new pb::MessageParser<GroupMemberGetResponse>(() => new GroupMemberGetResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupMemberGetResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[48]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberGetResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberGetResponse(GroupMemberGetResponse other) : this() {
              member_ = other.member_ != null ? other.member_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberGetResponse Clone() {
              return new GroupMemberGetResponse(this);
            }

            /// <summary>Field number for the "member" field.</summary>
            public const int MemberFieldNumber = 1;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember member_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember Member {
              get { return member_; }
              set {
                member_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupMemberGetResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupMemberGetResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Member, other.Member)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (member_ != null) hash ^= Member.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (member_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Member);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (member_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Member);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupMemberGetResponse other) {
              if (other == null) {
                return;
              }
              if (other.member_ != null) {
                if (member_ == null) {
                  Member = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember();
                }
                Member.MergeFrom(other.Member);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (member_ == null) {
                      Member = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember();
                    }
                    input.ReadMessage(Member);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class UserGroupListRequest : pb::IMessage<UserGroupListRequest> {
            private static readonly pb::MessageParser<UserGroupListRequest> _parser = new pb::MessageParser<UserGroupListRequest>(() => new UserGroupListRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<UserGroupListRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[49]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupListRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupListRequest(UserGroupListRequest other) : this() {
              syncCookie_ = other.syncCookie_ != null ? other.syncCookie_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupListRequest Clone() {
              return new UserGroupListRequest(this);
            }

            /// <summary>Field number for the "syncCookie" field.</summary>
            public const int SyncCookieFieldNumber = 2;
            private global::AcFunDanmu.Im.Basic.Types.SyncCookie syncCookie_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.SyncCookie SyncCookie {
              get { return syncCookie_; }
              set {
                syncCookie_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as UserGroupListRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(UserGroupListRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(SyncCookie, other.SyncCookie)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (syncCookie_ != null) hash ^= SyncCookie.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (syncCookie_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(SyncCookie);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (syncCookie_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(SyncCookie);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(UserGroupListRequest other) {
              if (other == null) {
                return;
              }
              if (other.syncCookie_ != null) {
                if (syncCookie_ == null) {
                  SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                }
                SyncCookie.MergeFrom(other.SyncCookie);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 18: {
                    if (syncCookie_ == null) {
                      SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                    }
                    input.ReadMessage(SyncCookie);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class UserGroupListResponse : pb::IMessage<UserGroupListResponse> {
            private static readonly pb::MessageParser<UserGroupListResponse> _parser = new pb::MessageParser<UserGroupListResponse>(() => new UserGroupListResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<UserGroupListResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[50]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupListResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupListResponse(UserGroupListResponse other) : this() {
              userGroupInfo_ = other.userGroupInfo_.Clone();
              syncCookie_ = other.syncCookie_ != null ? other.syncCookie_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupListResponse Clone() {
              return new UserGroupListResponse(this);
            }

            /// <summary>Field number for the "userGroupInfo" field.</summary>
            public const int UserGroupInfoFieldNumber = 1;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo> _repeated_userGroupInfo_codec
                = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo> userGroupInfo_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo> UserGroupInfo {
              get { return userGroupInfo_; }
            }

            /// <summary>Field number for the "syncCookie" field.</summary>
            public const int SyncCookieFieldNumber = 2;
            private global::AcFunDanmu.Im.Basic.Types.SyncCookie syncCookie_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.SyncCookie SyncCookie {
              get { return syncCookie_; }
              set {
                syncCookie_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as UserGroupListResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(UserGroupListResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!userGroupInfo_.Equals(other.userGroupInfo_)) return false;
              if (!object.Equals(SyncCookie, other.SyncCookie)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= userGroupInfo_.GetHashCode();
              if (syncCookie_ != null) hash ^= SyncCookie.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              userGroupInfo_.WriteTo(output, _repeated_userGroupInfo_codec);
              if (syncCookie_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(SyncCookie);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += userGroupInfo_.CalculateSize(_repeated_userGroupInfo_codec);
              if (syncCookie_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(SyncCookie);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(UserGroupListResponse other) {
              if (other == null) {
                return;
              }
              userGroupInfo_.Add(other.userGroupInfo_);
              if (other.syncCookie_ != null) {
                if (syncCookie_ == null) {
                  SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                }
                SyncCookie.MergeFrom(other.SyncCookie);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    userGroupInfo_.AddEntriesFrom(input, _repeated_userGroupInfo_codec);
                    break;
                  }
                  case 18: {
                    if (syncCookie_ == null) {
                      SyncCookie = new global::AcFunDanmu.Im.Basic.Types.SyncCookie();
                    }
                    input.ReadMessage(SyncCookie);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class UserGroupRecord : pb::IMessage<UserGroupRecord> {
            private static readonly pb::MessageParser<UserGroupRecord> _parser = new pb::MessageParser<UserGroupRecord>(() => new UserGroupRecord());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<UserGroupRecord> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[51]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupRecord() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupRecord(UserGroupRecord other) : this() {
              groupId_ = other.groupId_;
              updateTime_ = other.updateTime_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupRecord Clone() {
              return new UserGroupRecord(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "updateTime" field.</summary>
            public const int UpdateTimeFieldNumber = 2;
            private long updateTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long UpdateTime {
              get { return updateTime_; }
              set {
                updateTime_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as UserGroupRecord);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(UserGroupRecord other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if (UpdateTime != other.UpdateTime) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (UpdateTime != 0L) hash ^= UpdateTime.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (UpdateTime != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(UpdateTime);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (UpdateTime != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(UpdateTime);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(UserGroupRecord other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.UpdateTime != 0L) {
                UpdateTime = other.UpdateTime;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 16: {
                    UpdateTime = input.ReadInt64();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class UserGroupGetRequest : pb::IMessage<UserGroupGetRequest> {
            private static readonly pb::MessageParser<UserGroupGetRequest> _parser = new pb::MessageParser<UserGroupGetRequest>(() => new UserGroupGetRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<UserGroupGetRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[52]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupGetRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupGetRequest(UserGroupGetRequest other) : this() {
              groupId_ = other.groupId_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupGetRequest Clone() {
              return new UserGroupGetRequest(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private static readonly pb::FieldCodec<string> _repeated_groupId_codec
                = pb::FieldCodec.ForString(10);
            private readonly pbc::RepeatedField<string> groupId_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> GroupId {
              get { return groupId_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as UserGroupGetRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(UserGroupGetRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!groupId_.Equals(other.groupId_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= groupId_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              groupId_.WriteTo(output, _repeated_groupId_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += groupId_.CalculateSize(_repeated_groupId_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(UserGroupGetRequest other) {
              if (other == null) {
                return;
              }
              groupId_.Add(other.groupId_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    groupId_.AddEntriesFrom(input, _repeated_groupId_codec);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class UserGroupGetResponse : pb::IMessage<UserGroupGetResponse> {
            private static readonly pb::MessageParser<UserGroupGetResponse> _parser = new pb::MessageParser<UserGroupGetResponse>(() => new UserGroupGetResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<UserGroupGetResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[53]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupGetResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupGetResponse(UserGroupGetResponse other) : this() {
              userGroupInfo_ = other.userGroupInfo_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupGetResponse Clone() {
              return new UserGroupGetResponse(this);
            }

            /// <summary>Field number for the "userGroupInfo" field.</summary>
            public const int UserGroupInfoFieldNumber = 1;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo> _repeated_userGroupInfo_codec
                = pb::FieldCodec.ForMessage(10, global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo> userGroupInfo_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Cloud.Types.Message.Types.UserGroupInfo> UserGroupInfo {
              get { return userGroupInfo_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as UserGroupGetResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(UserGroupGetResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!userGroupInfo_.Equals(other.userGroupInfo_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= userGroupInfo_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              userGroupInfo_.WriteTo(output, _repeated_userGroupInfo_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += userGroupInfo_.CalculateSize(_repeated_userGroupInfo_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(UserGroupGetResponse other) {
              if (other == null) {
                return;
              }
              userGroupInfo_.Add(other.userGroupInfo_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    userGroupInfo_.AddEntriesFrom(input, _repeated_userGroupInfo_codec);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class UserGroupInfo : pb::IMessage<UserGroupInfo> {
            private static readonly pb::MessageParser<UserGroupInfo> _parser = new pb::MessageParser<UserGroupInfo>(() => new UserGroupInfo());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<UserGroupInfo> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[54]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupInfo() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupInfo(UserGroupInfo other) : this() {
              groupInfo_ = other.groupInfo_ != null ? other.groupInfo_.Clone() : null;
              groupMember_ = other.groupMember_ != null ? other.groupMember_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UserGroupInfo Clone() {
              return new UserGroupInfo(this);
            }

            /// <summary>Field number for the "groupInfo" field.</summary>
            public const int GroupInfoFieldNumber = 1;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInfo groupInfo_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInfo GroupInfo {
              get { return groupInfo_; }
              set {
                groupInfo_ = value;
              }
            }

            /// <summary>Field number for the "groupMember" field.</summary>
            public const int GroupMemberFieldNumber = 2;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember groupMember_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember GroupMember {
              get { return groupMember_; }
              set {
                groupMember_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as UserGroupInfo);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(UserGroupInfo other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(GroupInfo, other.GroupInfo)) return false;
              if (!object.Equals(GroupMember, other.GroupMember)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (groupInfo_ != null) hash ^= GroupInfo.GetHashCode();
              if (groupMember_ != null) hash ^= GroupMember.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (groupInfo_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(GroupInfo);
              }
              if (groupMember_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(GroupMember);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (groupInfo_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupInfo);
              }
              if (groupMember_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupMember);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(UserGroupInfo other) {
              if (other == null) {
                return;
              }
              if (other.groupInfo_ != null) {
                if (groupInfo_ == null) {
                  GroupInfo = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInfo();
                }
                GroupInfo.MergeFrom(other.GroupInfo);
              }
              if (other.groupMember_ != null) {
                if (groupMember_ == null) {
                  GroupMember = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember();
                }
                GroupMember.MergeFrom(other.GroupMember);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (groupInfo_ == null) {
                      GroupInfo = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupInfo();
                    }
                    input.ReadMessage(GroupInfo);
                    break;
                  }
                  case 18: {
                    if (groupMember_ == null) {
                      GroupMember = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember();
                    }
                    input.ReadMessage(GroupMember);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupMember : pb::IMessage<GroupMember> {
            private static readonly pb::MessageParser<GroupMember> _parser = new pb::MessageParser<GroupMember>(() => new GroupMember());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupMember> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[55]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMember() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMember(GroupMember other) : this() {
              user_ = other.user_ != null ? other.user_.Clone() : null;
              nickname_ = other.nickname_;
              antiDisturbing_ = other.antiDisturbing_;
              status_ = other.status_;
              inviterId_ = other.inviterId_;
              joinTime_ = other.joinTime_;
              createTime_ = other.createTime_;
              updateTime_ = other.updateTime_;
              role_ = other.role_;
              findType_ = other.findType_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMember Clone() {
              return new GroupMember(this);
            }

            /// <summary>Field number for the "user" field.</summary>
            public const int UserFieldNumber = 1;
            private global::AcFunDanmu.Im.Basic.Types.User user_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.User User {
              get { return user_; }
              set {
                user_ = value;
              }
            }

            /// <summary>Field number for the "nickname" field.</summary>
            public const int NicknameFieldNumber = 2;
            private string nickname_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Nickname {
              get { return nickname_; }
              set {
                nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "antiDisturbing" field.</summary>
            public const int AntiDisturbingFieldNumber = 3;
            private bool antiDisturbing_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool AntiDisturbing {
              get { return antiDisturbing_; }
              set {
                antiDisturbing_ = value;
              }
            }

            /// <summary>Field number for the "status" field.</summary>
            public const int StatusFieldNumber = 4;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberStatus status_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberStatus.UnknownMemberStatus;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberStatus Status {
              get { return status_; }
              set {
                status_ = value;
              }
            }

            /// <summary>Field number for the "inviterId" field.</summary>
            public const int InviterIdFieldNumber = 5;
            private long inviterId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long InviterId {
              get { return inviterId_; }
              set {
                inviterId_ = value;
              }
            }

            /// <summary>Field number for the "joinTime" field.</summary>
            public const int JoinTimeFieldNumber = 6;
            private long joinTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long JoinTime {
              get { return joinTime_; }
              set {
                joinTime_ = value;
              }
            }

            /// <summary>Field number for the "createTime" field.</summary>
            public const int CreateTimeFieldNumber = 7;
            private long createTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long CreateTime {
              get { return createTime_; }
              set {
                createTime_ = value;
              }
            }

            /// <summary>Field number for the "updateTime" field.</summary>
            public const int UpdateTimeFieldNumber = 8;
            private long updateTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long UpdateTime {
              get { return updateTime_; }
              set {
                updateTime_ = value;
              }
            }

            /// <summary>Field number for the "role" field.</summary>
            public const int RoleFieldNumber = 9;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberRole role_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberRole.UnknownRole;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberRole Role {
              get { return role_; }
              set {
                role_ = value;
              }
            }

            /// <summary>Field number for the "findType" field.</summary>
            public const int FindTypeFieldNumber = 10;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType findType_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType FindType {
              get { return findType_; }
              set {
                findType_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupMember);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupMember other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(User, other.User)) return false;
              if (Nickname != other.Nickname) return false;
              if (AntiDisturbing != other.AntiDisturbing) return false;
              if (Status != other.Status) return false;
              if (InviterId != other.InviterId) return false;
              if (JoinTime != other.JoinTime) return false;
              if (CreateTime != other.CreateTime) return false;
              if (UpdateTime != other.UpdateTime) return false;
              if (Role != other.Role) return false;
              if (FindType != other.FindType) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (user_ != null) hash ^= User.GetHashCode();
              if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
              if (AntiDisturbing != false) hash ^= AntiDisturbing.GetHashCode();
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberStatus.UnknownMemberStatus) hash ^= Status.GetHashCode();
              if (InviterId != 0L) hash ^= InviterId.GetHashCode();
              if (JoinTime != 0L) hash ^= JoinTime.GetHashCode();
              if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
              if (UpdateTime != 0L) hash ^= UpdateTime.GetHashCode();
              if (Role != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberRole.UnknownRole) hash ^= Role.GetHashCode();
              if (FindType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) hash ^= FindType.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (user_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(User);
              }
              if (Nickname.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Nickname);
              }
              if (AntiDisturbing != false) {
                output.WriteRawTag(24);
                output.WriteBool(AntiDisturbing);
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberStatus.UnknownMemberStatus) {
                output.WriteRawTag(32);
                output.WriteEnum((int) Status);
              }
              if (InviterId != 0L) {
                output.WriteRawTag(40);
                output.WriteInt64(InviterId);
              }
              if (JoinTime != 0L) {
                output.WriteRawTag(48);
                output.WriteInt64(JoinTime);
              }
              if (CreateTime != 0L) {
                output.WriteRawTag(56);
                output.WriteInt64(CreateTime);
              }
              if (UpdateTime != 0L) {
                output.WriteRawTag(64);
                output.WriteInt64(UpdateTime);
              }
              if (Role != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberRole.UnknownRole) {
                output.WriteRawTag(72);
                output.WriteEnum((int) Role);
              }
              if (FindType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                output.WriteRawTag(80);
                output.WriteEnum((int) FindType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (user_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
              }
              if (Nickname.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
              }
              if (AntiDisturbing != false) {
                size += 1 + 1;
              }
              if (Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberStatus.UnknownMemberStatus) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
              }
              if (InviterId != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(InviterId);
              }
              if (JoinTime != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(JoinTime);
              }
              if (CreateTime != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
              }
              if (UpdateTime != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(UpdateTime);
              }
              if (Role != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberRole.UnknownRole) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Role);
              }
              if (FindType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FindType);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupMember other) {
              if (other == null) {
                return;
              }
              if (other.user_ != null) {
                if (user_ == null) {
                  User = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                User.MergeFrom(other.User);
              }
              if (other.Nickname.Length != 0) {
                Nickname = other.Nickname;
              }
              if (other.AntiDisturbing != false) {
                AntiDisturbing = other.AntiDisturbing;
              }
              if (other.Status != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberStatus.UnknownMemberStatus) {
                Status = other.Status;
              }
              if (other.InviterId != 0L) {
                InviterId = other.InviterId;
              }
              if (other.JoinTime != 0L) {
                JoinTime = other.JoinTime;
              }
              if (other.CreateTime != 0L) {
                CreateTime = other.CreateTime;
              }
              if (other.UpdateTime != 0L) {
                UpdateTime = other.UpdateTime;
              }
              if (other.Role != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberRole.UnknownRole) {
                Role = other.Role;
              }
              if (other.FindType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType.ByUnknown) {
                FindType = other.FindType;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (user_ == null) {
                      User = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(User);
                    break;
                  }
                  case 18: {
                    Nickname = input.ReadString();
                    break;
                  }
                  case 24: {
                    AntiDisturbing = input.ReadBool();
                    break;
                  }
                  case 32: {
                    Status = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberStatus) input.ReadEnum();
                    break;
                  }
                  case 40: {
                    InviterId = input.ReadInt64();
                    break;
                  }
                  case 48: {
                    JoinTime = input.ReadInt64();
                    break;
                  }
                  case 56: {
                    CreateTime = input.ReadInt64();
                    break;
                  }
                  case 64: {
                    UpdateTime = input.ReadInt64();
                    break;
                  }
                  case 72: {
                    Role = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMember.Types.GroupMemberRole) input.ReadEnum();
                    break;
                  }
                  case 80: {
                    FindType = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupFindType) input.ReadEnum();
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the GroupMember message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public enum GroupMemberStatus {
                [pbr::OriginalName("UNKNOWN_MEMBER_STATUS")] UnknownMemberStatus = 0,
                [pbr::OriginalName("NORMAL")] Normal = 1,
                [pbr::OriginalName("QUITTED")] Quitted = 2,
                [pbr::OriginalName("KICKED")] Kicked = 3,
                [pbr::OriginalName("DISMISSED")] Dismissed = 4,
              }

              public enum GroupMemberRole {
                [pbr::OriginalName("UNKNOWN_ROLE")] UnknownRole = 0,
                [pbr::OriginalName("COMMON")] Common = 1,
                [pbr::OriginalName("ADMIN")] Admin = 2,
              }

            }
            #endregion

          }

          public sealed partial class GroupInfo : pb::IMessage<GroupInfo> {
            private static readonly pb::MessageParser<GroupInfo> _parser = new pb::MessageParser<GroupInfo>(() => new GroupInfo());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupInfo> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[56]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupInfo() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupInfo(GroupInfo other) : this() {
              basicInfo_ = other.basicInfo_ != null ? other.basicInfo_.Clone() : null;
              groupMemberBriefInfo_ = other.groupMemberBriefInfo_ != null ? other.groupMemberBriefInfo_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupInfo Clone() {
              return new GroupInfo(this);
            }

            /// <summary>Field number for the "basicInfo" field.</summary>
            public const int BasicInfoFieldNumber = 1;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupBasicInfo basicInfo_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupBasicInfo BasicInfo {
              get { return basicInfo_; }
              set {
                basicInfo_ = value;
              }
            }

            /// <summary>Field number for the "groupMemberBriefInfo" field.</summary>
            public const int GroupMemberBriefInfoFieldNumber = 2;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberBriefInfo groupMemberBriefInfo_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberBriefInfo GroupMemberBriefInfo {
              get { return groupMemberBriefInfo_; }
              set {
                groupMemberBriefInfo_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupInfo);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupInfo other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(BasicInfo, other.BasicInfo)) return false;
              if (!object.Equals(GroupMemberBriefInfo, other.GroupMemberBriefInfo)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (basicInfo_ != null) hash ^= BasicInfo.GetHashCode();
              if (groupMemberBriefInfo_ != null) hash ^= GroupMemberBriefInfo.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (basicInfo_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(BasicInfo);
              }
              if (groupMemberBriefInfo_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(GroupMemberBriefInfo);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (basicInfo_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(BasicInfo);
              }
              if (groupMemberBriefInfo_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupMemberBriefInfo);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupInfo other) {
              if (other == null) {
                return;
              }
              if (other.basicInfo_ != null) {
                if (basicInfo_ == null) {
                  BasicInfo = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupBasicInfo();
                }
                BasicInfo.MergeFrom(other.BasicInfo);
              }
              if (other.groupMemberBriefInfo_ != null) {
                if (groupMemberBriefInfo_ == null) {
                  GroupMemberBriefInfo = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberBriefInfo();
                }
                GroupMemberBriefInfo.MergeFrom(other.GroupMemberBriefInfo);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (basicInfo_ == null) {
                      BasicInfo = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupBasicInfo();
                    }
                    input.ReadMessage(BasicInfo);
                    break;
                  }
                  case 18: {
                    if (groupMemberBriefInfo_ == null) {
                      GroupMemberBriefInfo = new global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupMemberBriefInfo();
                    }
                    input.ReadMessage(GroupMemberBriefInfo);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupBasicInfo : pb::IMessage<GroupBasicInfo> {
            private static readonly pb::MessageParser<GroupBasicInfo> _parser = new pb::MessageParser<GroupBasicInfo>(() => new GroupBasicInfo());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupBasicInfo> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[57]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupBasicInfo() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupBasicInfo(GroupBasicInfo other) : this() {
              groupId_ = other.groupId_;
              groupName_ = other.groupName_;
              admin_ = other.admin_ != null ? other.admin_.Clone() : null;
              groupStatus_ = other.groupStatus_;
              description_ = other.description_;
              joinNeedPermission_ = other.joinNeedPermission_;
              createTime_ = other.createTime_;
              updateTime_ = other.updateTime_;
              groupType_ = other.groupType_;
              forbiddenState_ = other.forbiddenState_;
              invitePermissionType_ = other.invitePermissionType_;
              bizDefCode_ = other.bizDefCode_;
              defalutGroupName_ = other.defalutGroupName_;
              extra_ = other.extra_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupBasicInfo Clone() {
              return new GroupBasicInfo(this);
            }

            /// <summary>Field number for the "groupId" field.</summary>
            public const int GroupIdFieldNumber = 1;
            private string groupId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupId {
              get { return groupId_; }
              set {
                groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "groupName" field.</summary>
            public const int GroupNameFieldNumber = 2;
            private string groupName_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string GroupName {
              get { return groupName_; }
              set {
                groupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "admin" field.</summary>
            public const int AdminFieldNumber = 3;
            private global::AcFunDanmu.Im.Basic.Types.User admin_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.User Admin {
              get { return admin_; }
              set {
                admin_ = value;
              }
            }

            /// <summary>Field number for the "groupStatus" field.</summary>
            public const int GroupStatusFieldNumber = 4;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupStatus groupStatus_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupStatus.UnknowGroupStatus;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupStatus GroupStatus {
              get { return groupStatus_; }
              set {
                groupStatus_ = value;
              }
            }

            /// <summary>Field number for the "description" field.</summary>
            public const int DescriptionFieldNumber = 5;
            private string description_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Description {
              get { return description_; }
              set {
                description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "joinNeedPermission" field.</summary>
            public const int JoinNeedPermissionFieldNumber = 6;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType joinNeedPermission_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType.UnknownJoinNeedPermissionType;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType JoinNeedPermission {
              get { return joinNeedPermission_; }
              set {
                joinNeedPermission_ = value;
              }
            }

            /// <summary>Field number for the "createTime" field.</summary>
            public const int CreateTimeFieldNumber = 7;
            private long createTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long CreateTime {
              get { return createTime_; }
              set {
                createTime_ = value;
              }
            }

            /// <summary>Field number for the "updateTime" field.</summary>
            public const int UpdateTimeFieldNumber = 8;
            private long updateTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long UpdateTime {
              get { return updateTime_; }
              set {
                updateTime_ = value;
              }
            }

            /// <summary>Field number for the "groupType" field.</summary>
            public const int GroupTypeFieldNumber = 9;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupType groupType_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupType.UnknowGroupType;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupType GroupType {
              get { return groupType_; }
              set {
                groupType_ = value;
              }
            }

            /// <summary>Field number for the "forbiddenState" field.</summary>
            public const int ForbiddenStateFieldNumber = 10;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForbiddenState forbiddenState_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForbiddenState.UnknownForbiddenState;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForbiddenState ForbiddenState {
              get { return forbiddenState_; }
              set {
                forbiddenState_ = value;
              }
            }

            /// <summary>Field number for the "invitePermissionType" field.</summary>
            public const int InvitePermissionTypeFieldNumber = 11;
            private global::AcFunDanmu.Im.Cloud.Types.Message.Types.InvitePermissionType invitePermissionType_ = global::AcFunDanmu.Im.Cloud.Types.Message.Types.InvitePermissionType.UnknownInvitePermissionType;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Cloud.Types.Message.Types.InvitePermissionType InvitePermissionType {
              get { return invitePermissionType_; }
              set {
                invitePermissionType_ = value;
              }
            }

            /// <summary>Field number for the "bizDefCode" field.</summary>
            public const int BizDefCodeFieldNumber = 12;
            private int bizDefCode_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int BizDefCode {
              get { return bizDefCode_; }
              set {
                bizDefCode_ = value;
              }
            }

            /// <summary>Field number for the "defalutGroupName" field.</summary>
            public const int DefalutGroupNameFieldNumber = 13;
            private string defalutGroupName_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string DefalutGroupName {
              get { return defalutGroupName_; }
              set {
                defalutGroupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "extra" field.</summary>
            public const int ExtraFieldNumber = 14;
            private string extra_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Extra {
              get { return extra_; }
              set {
                extra_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupBasicInfo);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupBasicInfo other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (GroupId != other.GroupId) return false;
              if (GroupName != other.GroupName) return false;
              if (!object.Equals(Admin, other.Admin)) return false;
              if (GroupStatus != other.GroupStatus) return false;
              if (Description != other.Description) return false;
              if (JoinNeedPermission != other.JoinNeedPermission) return false;
              if (CreateTime != other.CreateTime) return false;
              if (UpdateTime != other.UpdateTime) return false;
              if (GroupType != other.GroupType) return false;
              if (ForbiddenState != other.ForbiddenState) return false;
              if (InvitePermissionType != other.InvitePermissionType) return false;
              if (BizDefCode != other.BizDefCode) return false;
              if (DefalutGroupName != other.DefalutGroupName) return false;
              if (Extra != other.Extra) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
              if (GroupName.Length != 0) hash ^= GroupName.GetHashCode();
              if (admin_ != null) hash ^= Admin.GetHashCode();
              if (GroupStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupStatus.UnknowGroupStatus) hash ^= GroupStatus.GetHashCode();
              if (Description.Length != 0) hash ^= Description.GetHashCode();
              if (JoinNeedPermission != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType.UnknownJoinNeedPermissionType) hash ^= JoinNeedPermission.GetHashCode();
              if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
              if (UpdateTime != 0L) hash ^= UpdateTime.GetHashCode();
              if (GroupType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupType.UnknowGroupType) hash ^= GroupType.GetHashCode();
              if (ForbiddenState != global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForbiddenState.UnknownForbiddenState) hash ^= ForbiddenState.GetHashCode();
              if (InvitePermissionType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.InvitePermissionType.UnknownInvitePermissionType) hash ^= InvitePermissionType.GetHashCode();
              if (BizDefCode != 0) hash ^= BizDefCode.GetHashCode();
              if (DefalutGroupName.Length != 0) hash ^= DefalutGroupName.GetHashCode();
              if (Extra.Length != 0) hash ^= Extra.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (GroupId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(GroupId);
              }
              if (GroupName.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(GroupName);
              }
              if (admin_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(Admin);
              }
              if (GroupStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupStatus.UnknowGroupStatus) {
                output.WriteRawTag(32);
                output.WriteEnum((int) GroupStatus);
              }
              if (Description.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(Description);
              }
              if (JoinNeedPermission != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType.UnknownJoinNeedPermissionType) {
                output.WriteRawTag(48);
                output.WriteEnum((int) JoinNeedPermission);
              }
              if (CreateTime != 0L) {
                output.WriteRawTag(56);
                output.WriteInt64(CreateTime);
              }
              if (UpdateTime != 0L) {
                output.WriteRawTag(64);
                output.WriteInt64(UpdateTime);
              }
              if (GroupType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupType.UnknowGroupType) {
                output.WriteRawTag(72);
                output.WriteEnum((int) GroupType);
              }
              if (ForbiddenState != global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForbiddenState.UnknownForbiddenState) {
                output.WriteRawTag(80);
                output.WriteEnum((int) ForbiddenState);
              }
              if (InvitePermissionType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.InvitePermissionType.UnknownInvitePermissionType) {
                output.WriteRawTag(88);
                output.WriteEnum((int) InvitePermissionType);
              }
              if (BizDefCode != 0) {
                output.WriteRawTag(96);
                output.WriteInt32(BizDefCode);
              }
              if (DefalutGroupName.Length != 0) {
                output.WriteRawTag(106);
                output.WriteString(DefalutGroupName);
              }
              if (Extra.Length != 0) {
                output.WriteRawTag(114);
                output.WriteString(Extra);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (GroupId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
              }
              if (GroupName.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupName);
              }
              if (admin_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
              }
              if (GroupStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupStatus.UnknowGroupStatus) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GroupStatus);
              }
              if (Description.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
              }
              if (JoinNeedPermission != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType.UnknownJoinNeedPermissionType) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) JoinNeedPermission);
              }
              if (CreateTime != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
              }
              if (UpdateTime != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(UpdateTime);
              }
              if (GroupType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupType.UnknowGroupType) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GroupType);
              }
              if (ForbiddenState != global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForbiddenState.UnknownForbiddenState) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ForbiddenState);
              }
              if (InvitePermissionType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.InvitePermissionType.UnknownInvitePermissionType) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InvitePermissionType);
              }
              if (BizDefCode != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(BizDefCode);
              }
              if (DefalutGroupName.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(DefalutGroupName);
              }
              if (Extra.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Extra);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupBasicInfo other) {
              if (other == null) {
                return;
              }
              if (other.GroupId.Length != 0) {
                GroupId = other.GroupId;
              }
              if (other.GroupName.Length != 0) {
                GroupName = other.GroupName;
              }
              if (other.admin_ != null) {
                if (admin_ == null) {
                  Admin = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                Admin.MergeFrom(other.Admin);
              }
              if (other.GroupStatus != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupStatus.UnknowGroupStatus) {
                GroupStatus = other.GroupStatus;
              }
              if (other.Description.Length != 0) {
                Description = other.Description;
              }
              if (other.JoinNeedPermission != global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType.UnknownJoinNeedPermissionType) {
                JoinNeedPermission = other.JoinNeedPermission;
              }
              if (other.CreateTime != 0L) {
                CreateTime = other.CreateTime;
              }
              if (other.UpdateTime != 0L) {
                UpdateTime = other.UpdateTime;
              }
              if (other.GroupType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupType.UnknowGroupType) {
                GroupType = other.GroupType;
              }
              if (other.ForbiddenState != global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForbiddenState.UnknownForbiddenState) {
                ForbiddenState = other.ForbiddenState;
              }
              if (other.InvitePermissionType != global::AcFunDanmu.Im.Cloud.Types.Message.Types.InvitePermissionType.UnknownInvitePermissionType) {
                InvitePermissionType = other.InvitePermissionType;
              }
              if (other.BizDefCode != 0) {
                BizDefCode = other.BizDefCode;
              }
              if (other.DefalutGroupName.Length != 0) {
                DefalutGroupName = other.DefalutGroupName;
              }
              if (other.Extra.Length != 0) {
                Extra = other.Extra;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    GroupId = input.ReadString();
                    break;
                  }
                  case 18: {
                    GroupName = input.ReadString();
                    break;
                  }
                  case 26: {
                    if (admin_ == null) {
                      Admin = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(Admin);
                    break;
                  }
                  case 32: {
                    GroupStatus = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupStatus) input.ReadEnum();
                    break;
                  }
                  case 42: {
                    Description = input.ReadString();
                    break;
                  }
                  case 48: {
                    JoinNeedPermission = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.JoinNeedPermissionType) input.ReadEnum();
                    break;
                  }
                  case 56: {
                    CreateTime = input.ReadInt64();
                    break;
                  }
                  case 64: {
                    UpdateTime = input.ReadInt64();
                    break;
                  }
                  case 72: {
                    GroupType = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.GroupType) input.ReadEnum();
                    break;
                  }
                  case 80: {
                    ForbiddenState = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.ForbiddenState) input.ReadEnum();
                    break;
                  }
                  case 88: {
                    InvitePermissionType = (global::AcFunDanmu.Im.Cloud.Types.Message.Types.InvitePermissionType) input.ReadEnum();
                    break;
                  }
                  case 96: {
                    BizDefCode = input.ReadInt32();
                    break;
                  }
                  case 106: {
                    DefalutGroupName = input.ReadString();
                    break;
                  }
                  case 114: {
                    Extra = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GroupMemberBriefInfo : pb::IMessage<GroupMemberBriefInfo> {
            private static readonly pb::MessageParser<GroupMemberBriefInfo> _parser = new pb::MessageParser<GroupMemberBriefInfo>(() => new GroupMemberBriefInfo());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GroupMemberBriefInfo> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[58]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberBriefInfo() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberBriefInfo(GroupMemberBriefInfo other) : this() {
              memberCount_ = other.memberCount_;
              topMembers_ = other.topMembers_.Clone();
              lastUpdateTime_ = other.lastUpdateTime_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GroupMemberBriefInfo Clone() {
              return new GroupMemberBriefInfo(this);
            }

            /// <summary>Field number for the "memberCount" field.</summary>
            public const int MemberCountFieldNumber = 1;
            private int memberCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int MemberCount {
              get { return memberCount_; }
              set {
                memberCount_ = value;
              }
            }

            /// <summary>Field number for the "topMembers" field.</summary>
            public const int TopMembersFieldNumber = 2;
            private static readonly pb::FieldCodec<global::AcFunDanmu.Im.Basic.Types.User> _repeated_topMembers_codec
                = pb::FieldCodec.ForMessage(18, global::AcFunDanmu.Im.Basic.Types.User.Parser);
            private readonly pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> topMembers_ = new pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::AcFunDanmu.Im.Basic.Types.User> TopMembers {
              get { return topMembers_; }
            }

            /// <summary>Field number for the "lastUpdateTime" field.</summary>
            public const int LastUpdateTimeFieldNumber = 3;
            private long lastUpdateTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long LastUpdateTime {
              get { return lastUpdateTime_; }
              set {
                lastUpdateTime_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GroupMemberBriefInfo);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GroupMemberBriefInfo other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (MemberCount != other.MemberCount) return false;
              if(!topMembers_.Equals(other.topMembers_)) return false;
              if (LastUpdateTime != other.LastUpdateTime) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (MemberCount != 0) hash ^= MemberCount.GetHashCode();
              hash ^= topMembers_.GetHashCode();
              if (LastUpdateTime != 0L) hash ^= LastUpdateTime.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (MemberCount != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(MemberCount);
              }
              topMembers_.WriteTo(output, _repeated_topMembers_codec);
              if (LastUpdateTime != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(LastUpdateTime);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (MemberCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(MemberCount);
              }
              size += topMembers_.CalculateSize(_repeated_topMembers_codec);
              if (LastUpdateTime != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastUpdateTime);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GroupMemberBriefInfo other) {
              if (other == null) {
                return;
              }
              if (other.MemberCount != 0) {
                MemberCount = other.MemberCount;
              }
              topMembers_.Add(other.topMembers_);
              if (other.LastUpdateTime != 0L) {
                LastUpdateTime = other.LastUpdateTime;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    MemberCount = input.ReadInt32();
                    break;
                  }
                  case 18: {
                    topMembers_.AddEntriesFrom(input, _repeated_topMembers_codec);
                    break;
                  }
                  case 24: {
                    LastUpdateTime = input.ReadInt64();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ImcPassThroughRequest : pb::IMessage<ImcPassThroughRequest> {
            private static readonly pb::MessageParser<ImcPassThroughRequest> _parser = new pb::MessageParser<ImcPassThroughRequest>(() => new ImcPassThroughRequest());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ImcPassThroughRequest> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[59]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcPassThroughRequest() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcPassThroughRequest(ImcPassThroughRequest other) : this() {
              chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
              content_ = other.content_;
              contentType_ = other.contentType_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcPassThroughRequest Clone() {
              return new ImcPassThroughRequest(this);
            }

            /// <summary>Field number for the "chatTarget" field.</summary>
            public const int ChatTargetFieldNumber = 1;
            private global::AcFunDanmu.Im.Message.Types.ChatTarget chatTarget_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Message.Types.ChatTarget ChatTarget {
              get { return chatTarget_; }
              set {
                chatTarget_ = value;
              }
            }

            /// <summary>Field number for the "content" field.</summary>
            public const int ContentFieldNumber = 2;
            private pb::ByteString content_ = pb::ByteString.Empty;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pb::ByteString Content {
              get { return content_; }
              set {
                content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "contentType" field.</summary>
            public const int ContentTypeFieldNumber = 3;
            private int contentType_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int ContentType {
              get { return contentType_; }
              set {
                contentType_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ImcPassThroughRequest);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ImcPassThroughRequest other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
              if (Content != other.Content) return false;
              if (ContentType != other.ContentType) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
              if (Content.Length != 0) hash ^= Content.GetHashCode();
              if (ContentType != 0) hash ^= ContentType.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (chatTarget_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(ChatTarget);
              }
              if (Content.Length != 0) {
                output.WriteRawTag(18);
                output.WriteBytes(Content);
              }
              if (ContentType != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(ContentType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (chatTarget_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
              }
              if (Content.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
              }
              if (ContentType != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContentType);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ImcPassThroughRequest other) {
              if (other == null) {
                return;
              }
              if (other.chatTarget_ != null) {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
                }
                ChatTarget.MergeFrom(other.ChatTarget);
              }
              if (other.Content.Length != 0) {
                Content = other.Content;
              }
              if (other.ContentType != 0) {
                ContentType = other.ContentType;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (chatTarget_ == null) {
                      ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
                    }
                    input.ReadMessage(ChatTarget);
                    break;
                  }
                  case 18: {
                    Content = input.ReadBytes();
                    break;
                  }
                  case 24: {
                    ContentType = input.ReadInt32();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ImcPassThroughResponse : pb::IMessage<ImcPassThroughResponse> {
            private static readonly pb::MessageParser<ImcPassThroughResponse> _parser = new pb::MessageParser<ImcPassThroughResponse>(() => new ImcPassThroughResponse());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ImcPassThroughResponse> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[60]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcPassThroughResponse() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcPassThroughResponse(ImcPassThroughResponse other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcPassThroughResponse Clone() {
              return new ImcPassThroughResponse(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ImcPassThroughResponse);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ImcPassThroughResponse other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ImcPassThroughResponse other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            }

          }

          public sealed partial class ImcPassThroughPush : pb::IMessage<ImcPassThroughPush> {
            private static readonly pb::MessageParser<ImcPassThroughPush> _parser = new pb::MessageParser<ImcPassThroughPush>(() => new ImcPassThroughPush());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ImcPassThroughPush> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[61]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcPassThroughPush() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcPassThroughPush(ImcPassThroughPush other) : this() {
              chatTarget_ = other.chatTarget_ != null ? other.chatTarget_.Clone() : null;
              fromUser_ = other.fromUser_ != null ? other.fromUser_.Clone() : null;
              content_ = other.content_;
              contentType_ = other.contentType_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ImcPassThroughPush Clone() {
              return new ImcPassThroughPush(this);
            }

            /// <summary>Field number for the "chatTarget" field.</summary>
            public const int ChatTargetFieldNumber = 1;
            private global::AcFunDanmu.Im.Message.Types.ChatTarget chatTarget_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Message.Types.ChatTarget ChatTarget {
              get { return chatTarget_; }
              set {
                chatTarget_ = value;
              }
            }

            /// <summary>Field number for the "fromUser" field.</summary>
            public const int FromUserFieldNumber = 2;
            private global::AcFunDanmu.Im.Basic.Types.User fromUser_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::AcFunDanmu.Im.Basic.Types.User FromUser {
              get { return fromUser_; }
              set {
                fromUser_ = value;
              }
            }

            /// <summary>Field number for the "content" field.</summary>
            public const int ContentFieldNumber = 3;
            private pb::ByteString content_ = pb::ByteString.Empty;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pb::ByteString Content {
              get { return content_; }
              set {
                content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "contentType" field.</summary>
            public const int ContentTypeFieldNumber = 4;
            private int contentType_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int ContentType {
              get { return contentType_; }
              set {
                contentType_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ImcPassThroughPush);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ImcPassThroughPush other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(ChatTarget, other.ChatTarget)) return false;
              if (!object.Equals(FromUser, other.FromUser)) return false;
              if (Content != other.Content) return false;
              if (ContentType != other.ContentType) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (chatTarget_ != null) hash ^= ChatTarget.GetHashCode();
              if (fromUser_ != null) hash ^= FromUser.GetHashCode();
              if (Content.Length != 0) hash ^= Content.GetHashCode();
              if (ContentType != 0) hash ^= ContentType.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (chatTarget_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(ChatTarget);
              }
              if (fromUser_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(FromUser);
              }
              if (Content.Length != 0) {
                output.WriteRawTag(26);
                output.WriteBytes(Content);
              }
              if (ContentType != 0) {
                output.WriteRawTag(32);
                output.WriteInt32(ContentType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (chatTarget_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatTarget);
              }
              if (fromUser_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromUser);
              }
              if (Content.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
              }
              if (ContentType != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContentType);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ImcPassThroughPush other) {
              if (other == null) {
                return;
              }
              if (other.chatTarget_ != null) {
                if (chatTarget_ == null) {
                  ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
                }
                ChatTarget.MergeFrom(other.ChatTarget);
              }
              if (other.fromUser_ != null) {
                if (fromUser_ == null) {
                  FromUser = new global::AcFunDanmu.Im.Basic.Types.User();
                }
                FromUser.MergeFrom(other.FromUser);
              }
              if (other.Content.Length != 0) {
                Content = other.Content;
              }
              if (other.ContentType != 0) {
                ContentType = other.ContentType;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (chatTarget_ == null) {
                      ChatTarget = new global::AcFunDanmu.Im.Message.Types.ChatTarget();
                    }
                    input.ReadMessage(ChatTarget);
                    break;
                  }
                  case 18: {
                    if (fromUser_ == null) {
                      FromUser = new global::AcFunDanmu.Im.Basic.Types.User();
                    }
                    input.ReadMessage(FromUser);
                    break;
                  }
                  case 26: {
                    Content = input.ReadBytes();
                    break;
                  }
                  case 32: {
                    ContentType = input.ReadInt32();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class InputtingContent : pb::IMessage<InputtingContent> {
            private static readonly pb::MessageParser<InputtingContent> _parser = new pb::MessageParser<InputtingContent>(() => new InputtingContent());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<InputtingContent> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::AcFunDanmu.Im.Cloud.Types.Message.Descriptor.NestedTypes[62]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public InputtingContent() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public InputtingContent(InputtingContent other) : this() {
              displayInterval_ = other.displayInterval_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public InputtingContent Clone() {
              return new InputtingContent(this);
            }

            /// <summary>Field number for the "displayInterval" field.</summary>
            public const int DisplayIntervalFieldNumber = 1;
            private int displayInterval_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int DisplayInterval {
              get { return displayInterval_; }
              set {
                displayInterval_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as InputtingContent);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(InputtingContent other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (DisplayInterval != other.DisplayInterval) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (DisplayInterval != 0) hash ^= DisplayInterval.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (DisplayInterval != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(DisplayInterval);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (DisplayInterval != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(DisplayInterval);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(InputtingContent other) {
              if (other == null) {
                return;
              }
              if (other.DisplayInterval != 0) {
                DisplayInterval = other.DisplayInterval;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    DisplayInterval = input.ReadInt32();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
