// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: EnvInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AcFunDanmu {

  /// <summary>Holder for reflection information generated from EnvInfo.proto</summary>
  public static partial class EnvInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for EnvInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EnvInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1FbnZJbmZvLnByb3RvEgpBY0Z1bkRhbm11IocBCgdFbnZJbmZvEjQKC25l",
            "dHdvcmtUeXBlGAEgASgOMh8uQWNGdW5EYW5tdS5FbnZJbmZvLk5ldHdvcmtU",
            "eXBlEg8KB2FwcE5hbWUYAiABKAwiNQoLTmV0d29ya1R5cGUSDAoIa0ludmFs",
            "aWQQABIJCgVrV0lGSRABEg0KCWtDZWxsdWxhchACYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AcFunDanmu.EnvInfo), global::AcFunDanmu.EnvInfo.Parser, new[]{ "NetworkType", "AppName" }, null, new[]{ typeof(global::AcFunDanmu.EnvInfo.Types.NetworkType) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class EnvInfo : pb::IMessage<EnvInfo> {
    private static readonly pb::MessageParser<EnvInfo> _parser = new pb::MessageParser<EnvInfo>(() => new EnvInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnvInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AcFunDanmu.EnvInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnvInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnvInfo(EnvInfo other) : this() {
      networkType_ = other.networkType_;
      appName_ = other.appName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnvInfo Clone() {
      return new EnvInfo(this);
    }

    /// <summary>Field number for the "networkType" field.</summary>
    public const int NetworkTypeFieldNumber = 1;
    private global::AcFunDanmu.EnvInfo.Types.NetworkType networkType_ = global::AcFunDanmu.EnvInfo.Types.NetworkType.KInvalid;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AcFunDanmu.EnvInfo.Types.NetworkType NetworkType {
      get { return networkType_; }
      set {
        networkType_ = value;
      }
    }

    /// <summary>Field number for the "appName" field.</summary>
    public const int AppNameFieldNumber = 2;
    private pb::ByteString appName_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AppName {
      get { return appName_; }
      set {
        appName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnvInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnvInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkType != other.NetworkType) return false;
      if (AppName != other.AppName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkType != global::AcFunDanmu.EnvInfo.Types.NetworkType.KInvalid) hash ^= NetworkType.GetHashCode();
      if (AppName.Length != 0) hash ^= AppName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkType != global::AcFunDanmu.EnvInfo.Types.NetworkType.KInvalid) {
        output.WriteRawTag(8);
        output.WriteEnum((int) NetworkType);
      }
      if (AppName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(AppName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkType != global::AcFunDanmu.EnvInfo.Types.NetworkType.KInvalid) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NetworkType);
      }
      if (AppName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AppName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnvInfo other) {
      if (other == null) {
        return;
      }
      if (other.NetworkType != global::AcFunDanmu.EnvInfo.Types.NetworkType.KInvalid) {
        NetworkType = other.NetworkType;
      }
      if (other.AppName.Length != 0) {
        AppName = other.AppName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NetworkType = (global::AcFunDanmu.EnvInfo.Types.NetworkType) input.ReadEnum();
            break;
          }
          case 18: {
            AppName = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the EnvInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum NetworkType {
        [pbr::OriginalName("kInvalid")] KInvalid = 0,
        [pbr::OriginalName("kWIFI")] KWifi = 1,
        [pbr::OriginalName("kCellular")] KCellular = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
