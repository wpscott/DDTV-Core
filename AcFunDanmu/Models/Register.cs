// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Register.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Register.proto</summary>
public static partial class RegisterReflection {

  #region Descriptor
  /// <summary>File descriptor for Register.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static RegisterReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg5SZWdpc3Rlci5wcm90bxoNQXBwSW5mby5wcm90bxoQRGV2aWNlSW5mby5w",
          "cm90bxoNRW52SW5mby5wcm90bxoSWnRDb21tb25JbmZvLnByb3RvGhhBY2Nl",
          "c3NQb2ludHNDb25maWcucHJvdG8aFlB1c2hTZXJ2aWNlVG9rZW4ucHJvdG8a",
          "D1Nka09wdGlvbi5wcm90byKuBAoPUmVnaXN0ZXJSZXF1ZXN0EhkKB2FwcElu",
          "Zm8YASABKAsyCC5BcHBJbmZvEh8KCmRldmljZUluZm8YAiABKAsyCy5EZXZp",
          "Y2VJbmZvEhkKB2VudkluZm8YAyABKAsyCC5FbnZJbmZvEjcKDnByZXNlbmNl",
          "U3RhdHVzGAQgASgOMh8uUmVnaXN0ZXJSZXF1ZXN0LlByZXNlbmNlU3RhdHVz",
          "EjYKD2FwcEFjdGl2ZVN0YXR1cxgFIAEoDjIdLlJlZ2lzdGVyUmVxdWVzdC5B",
          "Y3RpdmVTdGF0dXMSFwoPYXBwQ3VzdG9tU3RhdHVzGAYgASgMEisKEHB1c2hT",
          "ZXJ2aWNlVG9rZW4YByABKAsyES5QdXNoU2VydmljZVRva2VuEhIKCmluc3Rh",
          "bmNlSWQYCCABKAMSLwoUcHVzaFNlcnZpY2VUb2tlbkxpc3QYCSADKAsyES5Q",
          "dXNoU2VydmljZVRva2VuEhwKFGtlZXBhbGljZUludGVydmFsU2VjGAogASgF",
          "EiMKDHp0Q29tbW9uSW5mbxgLIAEoCzINLlp0Q29tbW9uSW5mbyI7Cg5QcmVz",
          "ZW5jZVN0YXR1cxIUChBrUHJlc2VuY2VPZmZsaW5lEAASEwoPa1ByZXNlbmNl",
          "T25saW5lEAEiSAoMQWN0aXZlU3RhdHVzEgwKCGtJbnZhbGlkEAASFAoQa0Fw",
          "cEluRm9yZWdyb3VuZBABEhQKEGtBcHBpbkJhY2tncm91bmQQAiK8AQoQUmVn",
          "aXN0ZXJSZXNwb25zZRIvChJhY2Nlc3NQb2ludHNDb25maWcYASABKAsyEy5B",
          "Y2Nlc3NQb2ludHNDb25maWcSDwoHc2Vzc0tleRgCIAEoDBISCgppbnN0YW5j",
          "ZUlkGAMgASgDEh0KCXNka09wdGlvbhgEIAEoCzIKLlNka09wdGlvbhIzChZh",
          "Y2Nlc3NQb2ludHNDT25maWdJcHY2GAUgASgLMhMuQWNjZXNzUG9pbnRzQ29u",
          "ZmlnYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::AppInfoReflection.Descriptor, global::DeviceInfoReflection.Descriptor, global::EnvInfoReflection.Descriptor, global::ZtCommonInfoReflection.Descriptor, global::AccessPointsConfigReflection.Descriptor, global::PushServiceTokenReflection.Descriptor, global::SdkOptionReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::RegisterRequest), global::RegisterRequest.Parser, new[]{ "AppInfo", "DeviceInfo", "EnvInfo", "PresenceStatus", "AppActiveStatus", "AppCustomStatus", "PushServiceToken", "InstanceId", "PushServiceTokenList", "KeepaliceIntervalSec", "ZtCommonInfo" }, null, new[]{ typeof(global::RegisterRequest.Types.PresenceStatus), typeof(global::RegisterRequest.Types.ActiveStatus) }, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RegisterResponse), global::RegisterResponse.Parser, new[]{ "AccessPointsConfig", "SessKey", "InstanceId", "SdkOption", "AccessPointsCOnfigIpv6" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class RegisterRequest : pb::IMessage<RegisterRequest> {
  private static readonly pb::MessageParser<RegisterRequest> _parser = new pb::MessageParser<RegisterRequest>(() => new RegisterRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RegisterRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RegisterReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterRequest(RegisterRequest other) : this() {
    appInfo_ = other.appInfo_ != null ? other.appInfo_.Clone() : null;
    deviceInfo_ = other.deviceInfo_ != null ? other.deviceInfo_.Clone() : null;
    envInfo_ = other.envInfo_ != null ? other.envInfo_.Clone() : null;
    presenceStatus_ = other.presenceStatus_;
    appActiveStatus_ = other.appActiveStatus_;
    appCustomStatus_ = other.appCustomStatus_;
    pushServiceToken_ = other.pushServiceToken_ != null ? other.pushServiceToken_.Clone() : null;
    instanceId_ = other.instanceId_;
    pushServiceTokenList_ = other.pushServiceTokenList_.Clone();
    keepaliceIntervalSec_ = other.keepaliceIntervalSec_;
    ztCommonInfo_ = other.ztCommonInfo_ != null ? other.ztCommonInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterRequest Clone() {
    return new RegisterRequest(this);
  }

  /// <summary>Field number for the "appInfo" field.</summary>
  public const int AppInfoFieldNumber = 1;
  private global::AppInfo appInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AppInfo AppInfo {
    get { return appInfo_; }
    set {
      appInfo_ = value;
    }
  }

  /// <summary>Field number for the "deviceInfo" field.</summary>
  public const int DeviceInfoFieldNumber = 2;
  private global::DeviceInfo deviceInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeviceInfo DeviceInfo {
    get { return deviceInfo_; }
    set {
      deviceInfo_ = value;
    }
  }

  /// <summary>Field number for the "envInfo" field.</summary>
  public const int EnvInfoFieldNumber = 3;
  private global::EnvInfo envInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EnvInfo EnvInfo {
    get { return envInfo_; }
    set {
      envInfo_ = value;
    }
  }

  /// <summary>Field number for the "presenceStatus" field.</summary>
  public const int PresenceStatusFieldNumber = 4;
  private global::RegisterRequest.Types.PresenceStatus presenceStatus_ = global::RegisterRequest.Types.PresenceStatus.KPresenceOffline;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RegisterRequest.Types.PresenceStatus PresenceStatus {
    get { return presenceStatus_; }
    set {
      presenceStatus_ = value;
    }
  }

  /// <summary>Field number for the "appActiveStatus" field.</summary>
  public const int AppActiveStatusFieldNumber = 5;
  private global::RegisterRequest.Types.ActiveStatus appActiveStatus_ = global::RegisterRequest.Types.ActiveStatus.KInvalid;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RegisterRequest.Types.ActiveStatus AppActiveStatus {
    get { return appActiveStatus_; }
    set {
      appActiveStatus_ = value;
    }
  }

  /// <summary>Field number for the "appCustomStatus" field.</summary>
  public const int AppCustomStatusFieldNumber = 6;
  private pb::ByteString appCustomStatus_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString AppCustomStatus {
    get { return appCustomStatus_; }
    set {
      appCustomStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "pushServiceToken" field.</summary>
  public const int PushServiceTokenFieldNumber = 7;
  private global::PushServiceToken pushServiceToken_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PushServiceToken PushServiceToken {
    get { return pushServiceToken_; }
    set {
      pushServiceToken_ = value;
    }
  }

  /// <summary>Field number for the "instanceId" field.</summary>
  public const int InstanceIdFieldNumber = 8;
  private long instanceId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long InstanceId {
    get { return instanceId_; }
    set {
      instanceId_ = value;
    }
  }

  /// <summary>Field number for the "pushServiceTokenList" field.</summary>
  public const int PushServiceTokenListFieldNumber = 9;
  private static readonly pb::FieldCodec<global::PushServiceToken> _repeated_pushServiceTokenList_codec
      = pb::FieldCodec.ForMessage(74, global::PushServiceToken.Parser);
  private readonly pbc::RepeatedField<global::PushServiceToken> pushServiceTokenList_ = new pbc::RepeatedField<global::PushServiceToken>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PushServiceToken> PushServiceTokenList {
    get { return pushServiceTokenList_; }
  }

  /// <summary>Field number for the "keepaliceIntervalSec" field.</summary>
  public const int KeepaliceIntervalSecFieldNumber = 10;
  private int keepaliceIntervalSec_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int KeepaliceIntervalSec {
    get { return keepaliceIntervalSec_; }
    set {
      keepaliceIntervalSec_ = value;
    }
  }

  /// <summary>Field number for the "ztCommonInfo" field.</summary>
  public const int ZtCommonInfoFieldNumber = 11;
  private global::ZtCommonInfo ztCommonInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ZtCommonInfo ZtCommonInfo {
    get { return ztCommonInfo_; }
    set {
      ztCommonInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RegisterRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RegisterRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(AppInfo, other.AppInfo)) return false;
    if (!object.Equals(DeviceInfo, other.DeviceInfo)) return false;
    if (!object.Equals(EnvInfo, other.EnvInfo)) return false;
    if (PresenceStatus != other.PresenceStatus) return false;
    if (AppActiveStatus != other.AppActiveStatus) return false;
    if (AppCustomStatus != other.AppCustomStatus) return false;
    if (!object.Equals(PushServiceToken, other.PushServiceToken)) return false;
    if (InstanceId != other.InstanceId) return false;
    if(!pushServiceTokenList_.Equals(other.pushServiceTokenList_)) return false;
    if (KeepaliceIntervalSec != other.KeepaliceIntervalSec) return false;
    if (!object.Equals(ZtCommonInfo, other.ZtCommonInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (appInfo_ != null) hash ^= AppInfo.GetHashCode();
    if (deviceInfo_ != null) hash ^= DeviceInfo.GetHashCode();
    if (envInfo_ != null) hash ^= EnvInfo.GetHashCode();
    if (PresenceStatus != global::RegisterRequest.Types.PresenceStatus.KPresenceOffline) hash ^= PresenceStatus.GetHashCode();
    if (AppActiveStatus != global::RegisterRequest.Types.ActiveStatus.KInvalid) hash ^= AppActiveStatus.GetHashCode();
    if (AppCustomStatus.Length != 0) hash ^= AppCustomStatus.GetHashCode();
    if (pushServiceToken_ != null) hash ^= PushServiceToken.GetHashCode();
    if (InstanceId != 0L) hash ^= InstanceId.GetHashCode();
    hash ^= pushServiceTokenList_.GetHashCode();
    if (KeepaliceIntervalSec != 0) hash ^= KeepaliceIntervalSec.GetHashCode();
    if (ztCommonInfo_ != null) hash ^= ZtCommonInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (appInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(AppInfo);
    }
    if (deviceInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(DeviceInfo);
    }
    if (envInfo_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(EnvInfo);
    }
    if (PresenceStatus != global::RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
      output.WriteRawTag(32);
      output.WriteEnum((int) PresenceStatus);
    }
    if (AppActiveStatus != global::RegisterRequest.Types.ActiveStatus.KInvalid) {
      output.WriteRawTag(40);
      output.WriteEnum((int) AppActiveStatus);
    }
    if (AppCustomStatus.Length != 0) {
      output.WriteRawTag(50);
      output.WriteBytes(AppCustomStatus);
    }
    if (pushServiceToken_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(PushServiceToken);
    }
    if (InstanceId != 0L) {
      output.WriteRawTag(64);
      output.WriteInt64(InstanceId);
    }
    pushServiceTokenList_.WriteTo(output, _repeated_pushServiceTokenList_codec);
    if (KeepaliceIntervalSec != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(KeepaliceIntervalSec);
    }
    if (ztCommonInfo_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(ZtCommonInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (appInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppInfo);
    }
    if (deviceInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceInfo);
    }
    if (envInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnvInfo);
    }
    if (PresenceStatus != global::RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PresenceStatus);
    }
    if (AppActiveStatus != global::RegisterRequest.Types.ActiveStatus.KInvalid) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AppActiveStatus);
    }
    if (AppCustomStatus.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(AppCustomStatus);
    }
    if (pushServiceToken_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PushServiceToken);
    }
    if (InstanceId != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(InstanceId);
    }
    size += pushServiceTokenList_.CalculateSize(_repeated_pushServiceTokenList_codec);
    if (KeepaliceIntervalSec != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(KeepaliceIntervalSec);
    }
    if (ztCommonInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ZtCommonInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RegisterRequest other) {
    if (other == null) {
      return;
    }
    if (other.appInfo_ != null) {
      if (appInfo_ == null) {
        AppInfo = new global::AppInfo();
      }
      AppInfo.MergeFrom(other.AppInfo);
    }
    if (other.deviceInfo_ != null) {
      if (deviceInfo_ == null) {
        DeviceInfo = new global::DeviceInfo();
      }
      DeviceInfo.MergeFrom(other.DeviceInfo);
    }
    if (other.envInfo_ != null) {
      if (envInfo_ == null) {
        EnvInfo = new global::EnvInfo();
      }
      EnvInfo.MergeFrom(other.EnvInfo);
    }
    if (other.PresenceStatus != global::RegisterRequest.Types.PresenceStatus.KPresenceOffline) {
      PresenceStatus = other.PresenceStatus;
    }
    if (other.AppActiveStatus != global::RegisterRequest.Types.ActiveStatus.KInvalid) {
      AppActiveStatus = other.AppActiveStatus;
    }
    if (other.AppCustomStatus.Length != 0) {
      AppCustomStatus = other.AppCustomStatus;
    }
    if (other.pushServiceToken_ != null) {
      if (pushServiceToken_ == null) {
        PushServiceToken = new global::PushServiceToken();
      }
      PushServiceToken.MergeFrom(other.PushServiceToken);
    }
    if (other.InstanceId != 0L) {
      InstanceId = other.InstanceId;
    }
    pushServiceTokenList_.Add(other.pushServiceTokenList_);
    if (other.KeepaliceIntervalSec != 0) {
      KeepaliceIntervalSec = other.KeepaliceIntervalSec;
    }
    if (other.ztCommonInfo_ != null) {
      if (ztCommonInfo_ == null) {
        ZtCommonInfo = new global::ZtCommonInfo();
      }
      ZtCommonInfo.MergeFrom(other.ZtCommonInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (appInfo_ == null) {
            AppInfo = new global::AppInfo();
          }
          input.ReadMessage(AppInfo);
          break;
        }
        case 18: {
          if (deviceInfo_ == null) {
            DeviceInfo = new global::DeviceInfo();
          }
          input.ReadMessage(DeviceInfo);
          break;
        }
        case 26: {
          if (envInfo_ == null) {
            EnvInfo = new global::EnvInfo();
          }
          input.ReadMessage(EnvInfo);
          break;
        }
        case 32: {
          PresenceStatus = (global::RegisterRequest.Types.PresenceStatus) input.ReadEnum();
          break;
        }
        case 40: {
          AppActiveStatus = (global::RegisterRequest.Types.ActiveStatus) input.ReadEnum();
          break;
        }
        case 50: {
          AppCustomStatus = input.ReadBytes();
          break;
        }
        case 58: {
          if (pushServiceToken_ == null) {
            PushServiceToken = new global::PushServiceToken();
          }
          input.ReadMessage(PushServiceToken);
          break;
        }
        case 64: {
          InstanceId = input.ReadInt64();
          break;
        }
        case 74: {
          pushServiceTokenList_.AddEntriesFrom(input, _repeated_pushServiceTokenList_codec);
          break;
        }
        case 80: {
          KeepaliceIntervalSec = input.ReadInt32();
          break;
        }
        case 90: {
          if (ztCommonInfo_ == null) {
            ZtCommonInfo = new global::ZtCommonInfo();
          }
          input.ReadMessage(ZtCommonInfo);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the RegisterRequest message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum PresenceStatus {
      [pbr::OriginalName("kPresenceOffline")] KPresenceOffline = 0,
      [pbr::OriginalName("kPresenceOnline")] KPresenceOnline = 1,
    }

    public enum ActiveStatus {
      [pbr::OriginalName("kInvalid")] KInvalid = 0,
      [pbr::OriginalName("kAppInForeground")] KAppInForeground = 1,
      [pbr::OriginalName("kAppinBackground")] KAppinBackground = 2,
    }

  }
  #endregion

}

public sealed partial class RegisterResponse : pb::IMessage<RegisterResponse> {
  private static readonly pb::MessageParser<RegisterResponse> _parser = new pb::MessageParser<RegisterResponse>(() => new RegisterResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RegisterResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RegisterReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterResponse(RegisterResponse other) : this() {
    accessPointsConfig_ = other.accessPointsConfig_ != null ? other.accessPointsConfig_.Clone() : null;
    sessKey_ = other.sessKey_;
    instanceId_ = other.instanceId_;
    sdkOption_ = other.sdkOption_ != null ? other.sdkOption_.Clone() : null;
    accessPointsCOnfigIpv6_ = other.accessPointsCOnfigIpv6_ != null ? other.accessPointsCOnfigIpv6_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterResponse Clone() {
    return new RegisterResponse(this);
  }

  /// <summary>Field number for the "accessPointsConfig" field.</summary>
  public const int AccessPointsConfigFieldNumber = 1;
  private global::AccessPointsConfig accessPointsConfig_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AccessPointsConfig AccessPointsConfig {
    get { return accessPointsConfig_; }
    set {
      accessPointsConfig_ = value;
    }
  }

  /// <summary>Field number for the "sessKey" field.</summary>
  public const int SessKeyFieldNumber = 2;
  private pb::ByteString sessKey_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString SessKey {
    get { return sessKey_; }
    set {
      sessKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "instanceId" field.</summary>
  public const int InstanceIdFieldNumber = 3;
  private long instanceId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long InstanceId {
    get { return instanceId_; }
    set {
      instanceId_ = value;
    }
  }

  /// <summary>Field number for the "sdkOption" field.</summary>
  public const int SdkOptionFieldNumber = 4;
  private global::SdkOption sdkOption_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SdkOption SdkOption {
    get { return sdkOption_; }
    set {
      sdkOption_ = value;
    }
  }

  /// <summary>Field number for the "accessPointsCOnfigIpv6" field.</summary>
  public const int AccessPointsCOnfigIpv6FieldNumber = 5;
  private global::AccessPointsConfig accessPointsCOnfigIpv6_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AccessPointsConfig AccessPointsCOnfigIpv6 {
    get { return accessPointsCOnfigIpv6_; }
    set {
      accessPointsCOnfigIpv6_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RegisterResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RegisterResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(AccessPointsConfig, other.AccessPointsConfig)) return false;
    if (SessKey != other.SessKey) return false;
    if (InstanceId != other.InstanceId) return false;
    if (!object.Equals(SdkOption, other.SdkOption)) return false;
    if (!object.Equals(AccessPointsCOnfigIpv6, other.AccessPointsCOnfigIpv6)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (accessPointsConfig_ != null) hash ^= AccessPointsConfig.GetHashCode();
    if (SessKey.Length != 0) hash ^= SessKey.GetHashCode();
    if (InstanceId != 0L) hash ^= InstanceId.GetHashCode();
    if (sdkOption_ != null) hash ^= SdkOption.GetHashCode();
    if (accessPointsCOnfigIpv6_ != null) hash ^= AccessPointsCOnfigIpv6.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (accessPointsConfig_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(AccessPointsConfig);
    }
    if (SessKey.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(SessKey);
    }
    if (InstanceId != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(InstanceId);
    }
    if (sdkOption_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(SdkOption);
    }
    if (accessPointsCOnfigIpv6_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(AccessPointsCOnfigIpv6);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (accessPointsConfig_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccessPointsConfig);
    }
    if (SessKey.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(SessKey);
    }
    if (InstanceId != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(InstanceId);
    }
    if (sdkOption_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SdkOption);
    }
    if (accessPointsCOnfigIpv6_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccessPointsCOnfigIpv6);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RegisterResponse other) {
    if (other == null) {
      return;
    }
    if (other.accessPointsConfig_ != null) {
      if (accessPointsConfig_ == null) {
        AccessPointsConfig = new global::AccessPointsConfig();
      }
      AccessPointsConfig.MergeFrom(other.AccessPointsConfig);
    }
    if (other.SessKey.Length != 0) {
      SessKey = other.SessKey;
    }
    if (other.InstanceId != 0L) {
      InstanceId = other.InstanceId;
    }
    if (other.sdkOption_ != null) {
      if (sdkOption_ == null) {
        SdkOption = new global::SdkOption();
      }
      SdkOption.MergeFrom(other.SdkOption);
    }
    if (other.accessPointsCOnfigIpv6_ != null) {
      if (accessPointsCOnfigIpv6_ == null) {
        AccessPointsCOnfigIpv6 = new global::AccessPointsConfig();
      }
      AccessPointsCOnfigIpv6.MergeFrom(other.AccessPointsCOnfigIpv6);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (accessPointsConfig_ == null) {
            AccessPointsConfig = new global::AccessPointsConfig();
          }
          input.ReadMessage(AccessPointsConfig);
          break;
        }
        case 18: {
          SessKey = input.ReadBytes();
          break;
        }
        case 24: {
          InstanceId = input.ReadInt64();
          break;
        }
        case 34: {
          if (sdkOption_ == null) {
            SdkOption = new global::SdkOption();
          }
          input.ReadMessage(SdkOption);
          break;
        }
        case 42: {
          if (accessPointsCOnfigIpv6_ == null) {
            AccessPointsCOnfigIpv6 = new global::AccessPointsConfig();
          }
          input.ReadMessage(AccessPointsCOnfigIpv6);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
